{"version":3,"file":"84b9f6ef-1223fdda03039a8d7def.js","mappings":"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","sources":["webpack://wormhole-usdc-demo/./node_modules/@injectivelabs/chain-api/injective/oracle/v1beta1/query_pb.js"],"sourcesContent":["// source: injective/oracle/v1beta1/query.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar google_api_annotations_pb = require('../../../google/api/annotations_pb.js');\ngoog.object.extend(proto, google_api_annotations_pb);\nvar injective_oracle_v1beta1_oracle_pb = require('../../../injective/oracle/v1beta1/oracle_pb.js');\ngoog.object.extend(proto, injective_oracle_v1beta1_oracle_pb);\nvar injective_oracle_v1beta1_genesis_pb = require('../../../injective/oracle/v1beta1/genesis_pb.js');\ngoog.object.extend(proto, injective_oracle_v1beta1_genesis_pb);\nvar gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.OracleHistoryOptions', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.PricePairState', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryBandRelayersRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryBandRelayersResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryModuleStateRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryModuleStateResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOraclePriceRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOraclePriceResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryParamsRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryParamsResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest', null, global);\ngoog.exportSymbol('proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryParamsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryParamsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryParamsRequest.displayName = 'proto.injective.oracle.v1beta1.QueryParamsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryParamsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryParamsResponse.displayName = 'proto.injective.oracle.v1beta1.QueryParamsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryBandRelayersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryBandRelayersRequest.displayName = 'proto.injective.oracle.v1beta1.QueryBandRelayersRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryBandRelayersResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryBandRelayersResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryBandRelayersResponse.displayName = 'proto.injective.oracle.v1beta1.QueryBandRelayersResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.displayName = 'proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.displayName = 'proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.displayName = 'proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.displayName = 'proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.displayName = 'proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.displayName = 'proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.displayName = 'proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.displayName = 'proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.displayName = 'proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.displayName = 'proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryModuleStateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryModuleStateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryModuleStateRequest.displayName = 'proto.injective.oracle.v1beta1.QueryModuleStateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryModuleStateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryModuleStateResponse.displayName = 'proto.injective.oracle.v1beta1.QueryModuleStateResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.displayName = 'proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.displayName = 'proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.OracleHistoryOptions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.OracleHistoryOptions.displayName = 'proto.injective.oracle.v1beta1.OracleHistoryOptions';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.displayName = 'proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.displayName = 'proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.displayName = 'proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.displayName = 'proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.displayName = 'proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.displayName = 'proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOraclePriceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOraclePriceRequest.displayName = 'proto.injective.oracle.v1beta1.QueryOraclePriceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.PricePairState = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.PricePairState, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.PricePairState.displayName = 'proto.injective.oracle.v1beta1.PricePairState';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.oracle.v1beta1.QueryOraclePriceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.oracle.v1beta1.QueryOraclePriceResponse.displayName = 'proto.injective.oracle.v1beta1.QueryOraclePriceResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryParamsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryParamsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryParamsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryParamsRequest}\n */\nproto.injective.oracle.v1beta1.QueryParamsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryParamsRequest;\n  return proto.injective.oracle.v1beta1.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryParamsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryParamsRequest}\n */\nproto.injective.oracle.v1beta1.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryParamsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryParamsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryParamsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryParamsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryParamsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    params: (f = msg.getParams()) && injective_oracle_v1beta1_oracle_pb.Params.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryParamsResponse}\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryParamsResponse;\n  return proto.injective.oracle.v1beta1.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryParamsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryParamsResponse}\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.Params;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.Params.deserializeBinaryFromReader);\n      msg.setParams(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryParamsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryParamsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getParams();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.Params.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Params params = 1;\n * @return {?proto.injective.oracle.v1beta1.Params}\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.prototype.getParams = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.Params} */ (\n    jspb.Message.getWrapperField(this, injective_oracle_v1beta1_oracle_pb.Params, 1));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.Params|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryParamsResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryParamsResponse.prototype.setParams = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryParamsResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.prototype.clearParams = function() {\n  return this.setParams(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryParamsResponse.prototype.hasParams = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryBandRelayersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryBandRelayersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryBandRelayersRequest}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryBandRelayersRequest;\n  return proto.injective.oracle.v1beta1.QueryBandRelayersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryBandRelayersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryBandRelayersRequest}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryBandRelayersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryBandRelayersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryBandRelayersResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    relayersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryBandRelayersResponse;\n  return proto.injective.oracle.v1beta1.QueryBandRelayersResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addRelayers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryBandRelayersResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRelayersList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string relayers = 1;\n * @return {!Array<string>}\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.prototype.getRelayersList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.prototype.setRelayersList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.prototype.addRelayers = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryBandRelayersResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryBandRelayersResponse.prototype.clearRelayersList = function() {\n  return this.setRelayersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest;\n  return proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryBandPriceStatesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceStatesList: jspb.Message.toObjectList(msg.getPriceStatesList(),\n    injective_oracle_v1beta1_oracle_pb.BandPriceState.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse;\n  return proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.BandPriceState;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.BandPriceState.deserializeBinaryFromReader);\n      msg.addPriceStates(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceStatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.BandPriceState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated BandPriceState price_states = 1;\n * @return {!Array<!proto.injective.oracle.v1beta1.BandPriceState>}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.prototype.getPriceStatesList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.BandPriceState>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.BandPriceState, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.BandPriceState>} value\n * @return {!proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.prototype.setPriceStatesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.BandPriceState=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.BandPriceState}\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.prototype.addPriceStates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.oracle.v1beta1.BandPriceState, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryBandPriceStatesResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryBandPriceStatesResponse.prototype.clearPriceStatesList = function() {\n  return this.setPriceStatesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest;\n  return proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceStatesList: jspb.Message.toObjectList(msg.getPriceStatesList(),\n    injective_oracle_v1beta1_oracle_pb.BandPriceState.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse;\n  return proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.BandPriceState;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.BandPriceState.deserializeBinaryFromReader);\n      msg.addPriceStates(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceStatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.BandPriceState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated BandPriceState price_states = 1;\n * @return {!Array<!proto.injective.oracle.v1beta1.BandPriceState>}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.prototype.getPriceStatesList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.BandPriceState>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.BandPriceState, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.BandPriceState>} value\n * @return {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.prototype.setPriceStatesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.BandPriceState=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.BandPriceState}\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.prototype.addPriceStates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.oracle.v1beta1.BandPriceState, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryBandIBCPriceStatesResponse.prototype.clearPriceStatesList = function() {\n  return this.setPriceStatesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest;\n  return proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceStatesList: jspb.Message.toObjectList(msg.getPriceStatesList(),\n    injective_oracle_v1beta1_oracle_pb.PriceFeedState.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse;\n  return proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.PriceFeedState;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.PriceFeedState.deserializeBinaryFromReader);\n      msg.addPriceStates(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceStatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.PriceFeedState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated PriceFeedState price_states = 1;\n * @return {!Array<!proto.injective.oracle.v1beta1.PriceFeedState>}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.prototype.getPriceStatesList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.PriceFeedState>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.PriceFeedState, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.PriceFeedState>} value\n * @return {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.prototype.setPriceStatesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.PriceFeedState=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.PriceFeedState}\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.prototype.addPriceStates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.oracle.v1beta1.PriceFeedState, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryPriceFeedPriceStatesResponse.prototype.clearPriceStatesList = function() {\n  return this.setPriceStatesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest;\n  return proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceStatesList: jspb.Message.toObjectList(msg.getPriceStatesList(),\n    injective_oracle_v1beta1_oracle_pb.CoinbasePriceState.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse;\n  return proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.CoinbasePriceState;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.CoinbasePriceState.deserializeBinaryFromReader);\n      msg.addPriceStates(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceStatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.CoinbasePriceState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated CoinbasePriceState price_states = 1;\n * @return {!Array<!proto.injective.oracle.v1beta1.CoinbasePriceState>}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.prototype.getPriceStatesList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.CoinbasePriceState>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.CoinbasePriceState, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.CoinbasePriceState>} value\n * @return {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.prototype.setPriceStatesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.CoinbasePriceState=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.CoinbasePriceState}\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.prototype.addPriceStates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.oracle.v1beta1.CoinbasePriceState, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryCoinbasePriceStatesResponse.prototype.clearPriceStatesList = function() {\n  return this.setPriceStatesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    provider: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    symbol: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest;\n  return proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProvider(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSymbol(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProvider();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getSymbol();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string provider = 1;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.prototype.getProvider = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.prototype.setProvider = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string symbol = 2;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.prototype.getSymbol = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateRequest.prototype.setSymbol = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceState: (f = msg.getPriceState()) && injective_oracle_v1beta1_oracle_pb.PriceState.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse;\n  return proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.PriceState;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.PriceState.deserializeBinaryFromReader);\n      msg.setPriceState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceState();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.PriceState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PriceState price_state = 1;\n * @return {?proto.injective.oracle.v1beta1.PriceState}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.prototype.getPriceState = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.PriceState} */ (\n    jspb.Message.getWrapperField(this, injective_oracle_v1beta1_oracle_pb.PriceState, 1));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.PriceState|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.prototype.setPriceState = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryProviderPriceStateResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.prototype.clearPriceState = function() {\n  return this.setPriceState(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryProviderPriceStateResponse.prototype.hasPriceState = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryModuleStateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryModuleStateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryModuleStateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryModuleStateRequest}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryModuleStateRequest;\n  return proto.injective.oracle.v1beta1.QueryModuleStateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryModuleStateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryModuleStateRequest}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryModuleStateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryModuleStateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryModuleStateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryModuleStateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryModuleStateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    state: (f = msg.getState()) && injective_oracle_v1beta1_genesis_pb.GenesisState.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryModuleStateResponse}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryModuleStateResponse;\n  return proto.injective.oracle.v1beta1.QueryModuleStateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryModuleStateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryModuleStateResponse}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_genesis_pb.GenesisState;\n      reader.readMessage(value,injective_oracle_v1beta1_genesis_pb.GenesisState.deserializeBinaryFromReader);\n      msg.setState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryModuleStateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryModuleStateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getState();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_genesis_pb.GenesisState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional GenesisState state = 1;\n * @return {?proto.injective.oracle.v1beta1.GenesisState}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.prototype.getState = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.GenesisState} */ (\n    jspb.Message.getWrapperField(this, injective_oracle_v1beta1_genesis_pb.GenesisState, 1));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.GenesisState|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryModuleStateResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.prototype.setState = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryModuleStateResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.prototype.clearState = function() {\n  return this.setState(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryModuleStateResponse.prototype.hasState = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    oracle: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    symbolId: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest;\n  return proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());\n      msg.setOracle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSymbolId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOracle();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getSymbolId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional OracleType oracle = 1;\n * @return {!proto.injective.oracle.v1beta1.OracleType}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.prototype.getOracle = function() {\n  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.OracleType} value\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.prototype.setOracle = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional string symbol_id = 2;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.prototype.getSymbolId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsRequest.prototype.setSymbolId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceRecordsList: jspb.Message.toObjectList(msg.getPriceRecordsList(),\n    injective_oracle_v1beta1_oracle_pb.PriceRecords.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse;\n  return proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.PriceRecords;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.PriceRecords.deserializeBinaryFromReader);\n      msg.addPriceRecords(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceRecordsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.PriceRecords.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated PriceRecords price_records = 1;\n * @return {!Array<!proto.injective.oracle.v1beta1.PriceRecords>}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.prototype.getPriceRecordsList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.PriceRecords>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.PriceRecords, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.PriceRecords>} value\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.prototype.setPriceRecordsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.PriceRecords=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.PriceRecords}\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.prototype.addPriceRecords = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.oracle.v1beta1.PriceRecords, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryHistoricalPriceRecordsResponse.prototype.clearPriceRecordsList = function() {\n  return this.setPriceRecordsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.OracleHistoryOptions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.OracleHistoryOptions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    maxAge: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    includeRawHistory: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    includeMetadata: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.OracleHistoryOptions}\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.OracleHistoryOptions;\n  return proto.injective.oracle.v1beta1.OracleHistoryOptions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.OracleHistoryOptions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.OracleHistoryOptions}\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxAge(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeRawHistory(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeMetadata(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.OracleHistoryOptions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.OracleHistoryOptions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMaxAge();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeRawHistory();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getIncludeMetadata();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 max_age = 1;\n * @return {number}\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.getMaxAge = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.oracle.v1beta1.OracleHistoryOptions} returns this\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.setMaxAge = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bool include_raw_history = 2;\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.getIncludeRawHistory = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.injective.oracle.v1beta1.OracleHistoryOptions} returns this\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.setIncludeRawHistory = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional bool include_metadata = 3;\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.getIncludeMetadata = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.injective.oracle.v1beta1.OracleHistoryOptions} returns this\n */\nproto.injective.oracle.v1beta1.OracleHistoryOptions.prototype.setIncludeMetadata = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    baseInfo: (f = msg.getBaseInfo()) && injective_oracle_v1beta1_oracle_pb.OracleInfo.toObject(includeInstance, f),\n    quoteInfo: (f = msg.getQuoteInfo()) && injective_oracle_v1beta1_oracle_pb.OracleInfo.toObject(includeInstance, f),\n    oracleHistoryOptions: (f = msg.getOracleHistoryOptions()) && proto.injective.oracle.v1beta1.OracleHistoryOptions.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest;\n  return proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.OracleInfo;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.OracleInfo.deserializeBinaryFromReader);\n      msg.setBaseInfo(value);\n      break;\n    case 2:\n      var value = new injective_oracle_v1beta1_oracle_pb.OracleInfo;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.OracleInfo.deserializeBinaryFromReader);\n      msg.setQuoteInfo(value);\n      break;\n    case 3:\n      var value = new proto.injective.oracle.v1beta1.OracleHistoryOptions;\n      reader.readMessage(value,proto.injective.oracle.v1beta1.OracleHistoryOptions.deserializeBinaryFromReader);\n      msg.setOracleHistoryOptions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBaseInfo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.OracleInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getQuoteInfo();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      injective_oracle_v1beta1_oracle_pb.OracleInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getOracleHistoryOptions();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.injective.oracle.v1beta1.OracleHistoryOptions.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional OracleInfo base_info = 1;\n * @return {?proto.injective.oracle.v1beta1.OracleInfo}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.getBaseInfo = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.OracleInfo} */ (\n    jspb.Message.getWrapperField(this, injective_oracle_v1beta1_oracle_pb.OracleInfo, 1));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.OracleInfo|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.setBaseInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.clearBaseInfo = function() {\n  return this.setBaseInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.hasBaseInfo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional OracleInfo quote_info = 2;\n * @return {?proto.injective.oracle.v1beta1.OracleInfo}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.getQuoteInfo = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.OracleInfo} */ (\n    jspb.Message.getWrapperField(this, injective_oracle_v1beta1_oracle_pb.OracleInfo, 2));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.OracleInfo|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.setQuoteInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.clearQuoteInfo = function() {\n  return this.setQuoteInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.hasQuoteInfo = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional OracleHistoryOptions oracle_history_options = 3;\n * @return {?proto.injective.oracle.v1beta1.OracleHistoryOptions}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.getOracleHistoryOptions = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.OracleHistoryOptions} */ (\n    jspb.Message.getWrapperField(this, proto.injective.oracle.v1beta1.OracleHistoryOptions, 3));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.OracleHistoryOptions|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.setOracleHistoryOptions = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.clearOracleHistoryOptions = function() {\n  return this.setOracleHistoryOptions(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityRequest.prototype.hasOracleHistoryOptions = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    volatility: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    historyMetadata: (f = msg.getHistoryMetadata()) && injective_oracle_v1beta1_oracle_pb.MetadataStatistics.toObject(includeInstance, f),\n    rawHistoryList: jspb.Message.toObjectList(msg.getRawHistoryList(),\n    injective_oracle_v1beta1_oracle_pb.PriceRecord.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse;\n  return proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVolatility(value);\n      break;\n    case 2:\n      var value = new injective_oracle_v1beta1_oracle_pb.MetadataStatistics;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.MetadataStatistics.deserializeBinaryFromReader);\n      msg.setHistoryMetadata(value);\n      break;\n    case 3:\n      var value = new injective_oracle_v1beta1_oracle_pb.PriceRecord;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.PriceRecord.deserializeBinaryFromReader);\n      msg.addRawHistory(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVolatility();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHistoryMetadata();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      injective_oracle_v1beta1_oracle_pb.MetadataStatistics.serializeBinaryToWriter\n    );\n  }\n  f = message.getRawHistoryList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      injective_oracle_v1beta1_oracle_pb.PriceRecord.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string volatility = 1;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.getVolatility = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.setVolatility = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional MetadataStatistics history_metadata = 2;\n * @return {?proto.injective.oracle.v1beta1.MetadataStatistics}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.getHistoryMetadata = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.MetadataStatistics} */ (\n    jspb.Message.getWrapperField(this, injective_oracle_v1beta1_oracle_pb.MetadataStatistics, 2));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.MetadataStatistics|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.setHistoryMetadata = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.clearHistoryMetadata = function() {\n  return this.setHistoryMetadata(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.hasHistoryMetadata = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated PriceRecord raw_history = 3;\n * @return {!Array<!proto.injective.oracle.v1beta1.PriceRecord>}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.getRawHistoryList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.PriceRecord>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.PriceRecord, 3));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.PriceRecord>} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.setRawHistoryList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.PriceRecord=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.PriceRecord}\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.addRawHistory = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective.oracle.v1beta1.PriceRecord, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleVolatilityResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleVolatilityResponse.prototype.clearRawHistoryList = function() {\n  return this.setRawHistoryList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest;\n  return proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    providersList: jspb.Message.toObjectList(msg.getProvidersList(),\n    injective_oracle_v1beta1_oracle_pb.ProviderInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse;\n  return proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.ProviderInfo;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.ProviderInfo.deserializeBinaryFromReader);\n      msg.addProviders(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProvidersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.ProviderInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ProviderInfo providers = 1;\n * @return {!Array<!proto.injective.oracle.v1beta1.ProviderInfo>}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.prototype.getProvidersList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.ProviderInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.ProviderInfo, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.ProviderInfo>} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.prototype.setProvidersList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.ProviderInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.ProviderInfo}\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.prototype.addProviders = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.oracle.v1beta1.ProviderInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleProvidersInfoResponse.prototype.clearProvidersList = function() {\n  return this.setProvidersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    provider: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest;\n  return proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProvider(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProvider();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string provider = 1;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.prototype.getProvider = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesRequest.prototype.setProvider = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    providerstateList: jspb.Message.toObjectList(msg.getProviderstateList(),\n    injective_oracle_v1beta1_oracle_pb.ProviderState.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse;\n  return proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_oracle_v1beta1_oracle_pb.ProviderState;\n      reader.readMessage(value,injective_oracle_v1beta1_oracle_pb.ProviderState.deserializeBinaryFromReader);\n      msg.addProviderstate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProviderstateList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_oracle_v1beta1_oracle_pb.ProviderState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ProviderState providerState = 1;\n * @return {!Array<!proto.injective.oracle.v1beta1.ProviderState>}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.prototype.getProviderstateList = function() {\n  return /** @type{!Array<!proto.injective.oracle.v1beta1.ProviderState>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_oracle_v1beta1_oracle_pb.ProviderState, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.oracle.v1beta1.ProviderState>} value\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.prototype.setProviderstateList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.ProviderState=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.oracle.v1beta1.ProviderState}\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.prototype.addProviderstate = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.oracle.v1beta1.ProviderState, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryOracleProviderPricesResponse.prototype.clearProviderstateList = function() {\n  return this.setProviderstateList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOraclePriceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    oracleType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    base: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    quote: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOraclePriceRequest;\n  return proto.injective.oracle.v1beta1.QueryOraclePriceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (reader.readEnum());\n      msg.setOracleType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBase(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setQuote(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOraclePriceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOracleType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getBase();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getQuote();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional OracleType oracle_type = 1;\n * @return {!proto.injective.oracle.v1beta1.OracleType}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.getOracleType = function() {\n  return /** @type {!proto.injective.oracle.v1beta1.OracleType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.injective.oracle.v1beta1.OracleType} value\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.setOracleType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional string base = 2;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.getBase = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.setBase = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string quote = 3;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.getQuote = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceRequest} returns this\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceRequest.prototype.setQuote = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.PricePairState.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.PricePairState} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.PricePairState.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pairPrice: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    basePrice: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    quotePrice: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    baseCumulativePrice: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    quoteCumulativePrice: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    baseTimestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    quoteTimestamp: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.PricePairState}\n */\nproto.injective.oracle.v1beta1.PricePairState.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.PricePairState;\n  return proto.injective.oracle.v1beta1.PricePairState.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.PricePairState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.PricePairState}\n */\nproto.injective.oracle.v1beta1.PricePairState.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPairPrice(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBasePrice(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setQuotePrice(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBaseCumulativePrice(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setQuoteCumulativePrice(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBaseTimestamp(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setQuoteTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.PricePairState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.PricePairState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.PricePairState.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPairPrice();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBasePrice();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getQuotePrice();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBaseCumulativePrice();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getQuoteCumulativePrice();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getBaseTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getQuoteTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pair_price = 1;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.getPairPrice = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.PricePairState} returns this\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.setPairPrice = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string base_price = 2;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.getBasePrice = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.PricePairState} returns this\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.setBasePrice = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string quote_price = 3;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.getQuotePrice = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.PricePairState} returns this\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.setQuotePrice = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string base_cumulative_price = 4;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.getBaseCumulativePrice = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.PricePairState} returns this\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.setBaseCumulativePrice = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string quote_cumulative_price = 5;\n * @return {string}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.getQuoteCumulativePrice = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.oracle.v1beta1.PricePairState} returns this\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.setQuoteCumulativePrice = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional int64 base_timestamp = 6;\n * @return {number}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.getBaseTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.oracle.v1beta1.PricePairState} returns this\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.setBaseTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 quote_timestamp = 7;\n * @return {number}\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.getQuoteTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.oracle.v1beta1.PricePairState} returns this\n */\nproto.injective.oracle.v1beta1.PricePairState.prototype.setQuoteTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.oracle.v1beta1.QueryOraclePriceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.oracle.v1beta1.QueryOraclePriceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pricePairState: (f = msg.getPricePairState()) && proto.injective.oracle.v1beta1.PricePairState.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceResponse}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.oracle.v1beta1.QueryOraclePriceResponse;\n  return proto.injective.oracle.v1beta1.QueryOraclePriceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.oracle.v1beta1.QueryOraclePriceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceResponse}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.injective.oracle.v1beta1.PricePairState;\n      reader.readMessage(value,proto.injective.oracle.v1beta1.PricePairState.deserializeBinaryFromReader);\n      msg.setPricePairState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.oracle.v1beta1.QueryOraclePriceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.oracle.v1beta1.QueryOraclePriceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPricePairState();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.injective.oracle.v1beta1.PricePairState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PricePairState price_pair_state = 1;\n * @return {?proto.injective.oracle.v1beta1.PricePairState}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.prototype.getPricePairState = function() {\n  return /** @type{?proto.injective.oracle.v1beta1.PricePairState} */ (\n    jspb.Message.getWrapperField(this, proto.injective.oracle.v1beta1.PricePairState, 1));\n};\n\n\n/**\n * @param {?proto.injective.oracle.v1beta1.PricePairState|undefined} value\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceResponse} returns this\n*/\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.prototype.setPricePairState = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.oracle.v1beta1.QueryOraclePriceResponse} returns this\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.prototype.clearPricePairState = function() {\n  return this.setPricePairState(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.oracle.v1beta1.QueryOraclePriceResponse.prototype.hasPricePairState = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\ngoog.object.extend(exports, proto.injective.oracle.v1beta1);\n"],"names":["jspb","goog","global","this","window","self","Function","call","google_api_annotations_pb","object","extend","proto","injective_oracle_v1beta1_oracle_pb","injective_oracle_v1beta1_genesis_pb","gogoproto_gogo_pb","exportSymbol","injective","oracle","v1beta1","QueryParamsRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","QueryParamsResponse","QueryBandRelayersRequest","QueryBandRelayersResponse","repeatedFields_","QueryBandPriceStatesRequest","QueryBandPriceStatesResponse","QueryBandIBCPriceStatesRequest","QueryBandIBCPriceStatesResponse","QueryPriceFeedPriceStatesRequest","QueryPriceFeedPriceStatesResponse","QueryCoinbasePriceStatesRequest","QueryCoinbasePriceStatesResponse","QueryProviderPriceStateRequest","QueryProviderPriceStateResponse","QueryModuleStateRequest","QueryModuleStateResponse","QueryHistoricalPriceRecordsRequest","QueryHistoricalPriceRecordsResponse","OracleHistoryOptions","QueryOracleVolatilityRequest","QueryOracleVolatilityResponse","QueryOracleProvidersInfoRequest","QueryOracleProvidersInfoResponse","QueryOracleProviderPricesRequest","QueryOracleProviderPricesResponse","QueryOraclePriceRequest","PricePairState","QueryOraclePriceResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","params","getParams","Params","value","readMessage","setParams","writeMessage","getWrapperField","setWrapperField","clearParams","undefined","hasParams","getField","relayersList","getRepeatedField","readString","addRelayers","getRelayersList","length","writeRepeatedString","setRelayersList","setField","opt_index","addToRepeatedField","clearRelayersList","priceStatesList","toObjectList","getPriceStatesList","BandPriceState","addPriceStates","writeRepeatedMessage","getRepeatedWrapperField","setPriceStatesList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearPriceStatesList","PriceFeedState","CoinbasePriceState","provider","getFieldWithDefault","symbol","setProvider","setSymbol","getProvider","writeString","getSymbol","setProto3StringField","priceState","getPriceState","PriceState","setPriceState","clearPriceState","hasPriceState","state","getState","GenesisState","setState","clearState","hasState","symbolId","readEnum","setOracle","setSymbolId","getOracle","writeEnum","getSymbolId","setProto3EnumField","priceRecordsList","getPriceRecordsList","PriceRecords","addPriceRecords","setPriceRecordsList","clearPriceRecordsList","maxAge","includeRawHistory","getBooleanFieldWithDefault","includeMetadata","readUint64","setMaxAge","readBool","setIncludeRawHistory","setIncludeMetadata","getMaxAge","writeUint64","getIncludeRawHistory","writeBool","getIncludeMetadata","setProto3IntField","setProto3BooleanField","baseInfo","getBaseInfo","OracleInfo","quoteInfo","getQuoteInfo","oracleHistoryOptions","getOracleHistoryOptions","setBaseInfo","setQuoteInfo","setOracleHistoryOptions","clearBaseInfo","hasBaseInfo","clearQuoteInfo","hasQuoteInfo","clearOracleHistoryOptions","hasOracleHistoryOptions","volatility","historyMetadata","getHistoryMetadata","MetadataStatistics","rawHistoryList","getRawHistoryList","PriceRecord","setVolatility","setHistoryMetadata","addRawHistory","getVolatility","clearHistoryMetadata","hasHistoryMetadata","setRawHistoryList","clearRawHistoryList","providersList","getProvidersList","ProviderInfo","addProviders","setProvidersList","clearProvidersList","providerstateList","getProviderstateList","ProviderState","addProviderstate","setProviderstateList","clearProviderstateList","oracleType","base","quote","setOracleType","setBase","setQuote","getOracleType","getBase","getQuote","pairPrice","basePrice","quotePrice","baseCumulativePrice","quoteCumulativePrice","baseTimestamp","quoteTimestamp","setPairPrice","setBasePrice","setQuotePrice","setBaseCumulativePrice","setQuoteCumulativePrice","readInt64","setBaseTimestamp","setQuoteTimestamp","getPairPrice","getBasePrice","getQuotePrice","getBaseCumulativePrice","getQuoteCumulativePrice","getBaseTimestamp","writeInt64","getQuoteTimestamp","pricePairState","getPricePairState","setPricePairState","clearPricePairState","hasPricePairState","exports"],"sourceRoot":""}