{"version":3,"file":"db96312a-d453d8c301db67810b0a.js","mappings":"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","sources":["webpack://wormhole-usdc-demo/./node_modules/@terra-money/terra.proto/tendermint/abci/types.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GrpcWebImpl = exports.ABCIApplicationApplySnapshotChunkDesc = exports.ABCIApplicationLoadSnapshotChunkDesc = exports.ABCIApplicationOfferSnapshotDesc = exports.ABCIApplicationListSnapshotsDesc = exports.ABCIApplicationEndBlockDesc = exports.ABCIApplicationBeginBlockDesc = exports.ABCIApplicationInitChainDesc = exports.ABCIApplicationCommitDesc = exports.ABCIApplicationQueryDesc = exports.ABCIApplicationCheckTxDesc = exports.ABCIApplicationDeliverTxDesc = exports.ABCIApplicationSetOptionDesc = exports.ABCIApplicationInfoDesc = exports.ABCIApplicationFlushDesc = exports.ABCIApplicationEchoDesc = exports.ABCIApplicationDesc = exports.ABCIApplicationClientImpl = exports.Snapshot = exports.Evidence = exports.VoteInfo = exports.ValidatorUpdate = exports.Validator = exports.TxResult = exports.EventAttribute = exports.Event = exports.LastCommitInfo = exports.BlockParams = exports.ConsensusParams = exports.ResponseApplySnapshotChunk = exports.ResponseLoadSnapshotChunk = exports.ResponseOfferSnapshot = exports.ResponseListSnapshots = exports.ResponseCommit = exports.ResponseEndBlock = exports.ResponseDeliverTx = exports.ResponseCheckTx = exports.ResponseBeginBlock = exports.ResponseQuery = exports.ResponseInitChain = exports.ResponseSetOption = exports.ResponseInfo = exports.ResponseFlush = exports.ResponseEcho = exports.ResponseException = exports.Response = exports.RequestApplySnapshotChunk = exports.RequestLoadSnapshotChunk = exports.RequestOfferSnapshot = exports.RequestListSnapshots = exports.RequestCommit = exports.RequestEndBlock = exports.RequestDeliverTx = exports.RequestCheckTx = exports.RequestBeginBlock = exports.RequestQuery = exports.RequestInitChain = exports.RequestSetOption = exports.RequestInfo = exports.RequestFlush = exports.RequestEcho = exports.Request = exports.responseApplySnapshotChunk_ResultToJSON = exports.responseApplySnapshotChunk_ResultFromJSON = exports.ResponseApplySnapshotChunk_Result = exports.responseOfferSnapshot_ResultToJSON = exports.responseOfferSnapshot_ResultFromJSON = exports.ResponseOfferSnapshot_Result = exports.evidenceTypeToJSON = exports.evidenceTypeFromJSON = exports.EvidenceType = exports.checkTxTypeToJSON = exports.checkTxTypeFromJSON = exports.CheckTxType = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst grpc_web_1 = require(\"@improbable-eng/grpc-web\");\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst types_1 = require(\"../../tendermint/types/types\");\nconst proof_1 = require(\"../../tendermint/crypto/proof\");\nconst params_1 = require(\"../../tendermint/types/params\");\nconst keys_1 = require(\"../../tendermint/crypto/keys\");\nconst browser_headers_1 = require(\"browser-headers\");\nconst timestamp_1 = require(\"../../google/protobuf/timestamp\");\nexports.protobufPackage = \"tendermint.abci\";\nvar CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType = exports.CheckTxType || (exports.CheckTxType = {}));\nfunction checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexports.checkTxTypeFromJSON = checkTxTypeFromJSON;\nfunction checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexports.checkTxTypeToJSON = checkTxTypeToJSON;\nvar EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType = exports.EvidenceType || (exports.EvidenceType = {}));\nfunction evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexports.evidenceTypeFromJSON = evidenceTypeFromJSON;\nfunction evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexports.evidenceTypeToJSON = evidenceTypeToJSON;\nvar ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result = exports.ResponseOfferSnapshot_Result || (exports.ResponseOfferSnapshot_Result = {}));\nfunction responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexports.responseOfferSnapshot_ResultFromJSON = responseOfferSnapshot_ResultFromJSON;\nfunction responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexports.responseOfferSnapshot_ResultToJSON = responseOfferSnapshot_ResultToJSON;\nvar ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result = exports.ResponseApplySnapshotChunk_Result || (exports.ResponseApplySnapshotChunk_Result = {}));\nfunction responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexports.responseApplySnapshotChunk_ResultFromJSON = responseApplySnapshotChunk_ResultFromJSON;\nfunction responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexports.responseApplySnapshotChunk_ResultToJSON = responseApplySnapshotChunk_ResultToJSON;\nconst baseRequest = {};\nexports.Request = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.echo !== undefined) {\n            exports.RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            exports.RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            exports.RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            exports.RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            exports.RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            exports.RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            exports.RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            exports.RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            exports.RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            exports.RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            exports.RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            exports.RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            exports.RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            exports.RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            exports.RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequest);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = exports.RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = exports.RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = exports.RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = exports.RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = exports.RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = exports.RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = exports.RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = exports.RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = exports.RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = exports.RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = exports.RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = exports.RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = exports.RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = exports.RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequest);\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = exports.RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = exports.RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = exports.RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = exports.RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = exports.RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = exports.RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = exports.RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = exports.RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = exports.RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = exports.RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = exports.RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = exports.RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined && (obj.echo = message.echo ? exports.RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush ? exports.RequestFlush.toJSON(message.flush) : undefined);\n        message.info !== undefined && (obj.info = message.info ? exports.RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption ? exports.RequestSetOption.toJSON(message.setOption) : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain ? exports.RequestInitChain.toJSON(message.initChain) : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query ? exports.RequestQuery.toJSON(message.query) : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock ? exports.RequestBeginBlock.toJSON(message.beginBlock) : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx ? exports.RequestCheckTx.toJSON(message.checkTx) : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx ? exports.RequestDeliverTx.toJSON(message.deliverTx) : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock ? exports.RequestEndBlock.toJSON(message.endBlock) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? exports.RequestCommit.toJSON(message.commit) : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? exports.RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? exports.RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? exports.RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? exports.RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequest);\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = exports.RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = exports.RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = exports.RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = exports.RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = exports.RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = exports.RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = exports.RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = exports.RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = exports.RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = exports.RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = exports.RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = exports.RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = exports.RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexports.RequestEcho = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestEcho);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestEcho);\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestEcho);\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexports.RequestFlush = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestFlush);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseRequestFlush);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseRequestFlush);\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: long_1.default.UZERO, p2pVersion: long_1.default.UZERO };\nexports.RequestInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (!message.blockVersion.isZero()) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (!message.p2pVersion.isZero()) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = reader.uint64();\n                    break;\n                case 3:\n                    message.p2pVersion = reader.uint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestInfo);\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = long_1.default.fromString(object.blockVersion);\n        }\n        else {\n            message.blockVersion = long_1.default.UZERO;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = long_1.default.fromString(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = long_1.default.UZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = (message.blockVersion || long_1.default.UZERO).toString());\n        message.p2pVersion !== undefined && (obj.p2pVersion = (message.p2pVersion || long_1.default.UZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestInfo);\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = long_1.default.UZERO;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = long_1.default.UZERO;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexports.RequestSetOption = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestSetOption);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestSetOption);\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestSetOption);\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: long_1.default.ZERO };\nexports.RequestInitChain = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            exports.ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            exports.ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (!message.initialHeight.isZero()) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestInitChain);\n        message.validators = [];\n        message.appStateBytes = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestInitChain);\n        message.validators = [];\n        message.appStateBytes = new Uint8Array();\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined && object.consensusParams !== null) {\n            message.consensusParams = exports.ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(exports.ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = long_1.default.fromString(object.initialHeight);\n        }\n        else {\n            message.initialHeight = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined && (obj.time = message.time.toISOString());\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? exports.ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? exports.ValidatorUpdate.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined ? message.appStateBytes : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = (message.initialHeight || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestInitChain);\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined && object.consensusParams !== null) {\n            message.consensusParams = exports.ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(exports.ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: long_1.default.ZERO, prove: false };\nexports.RequestQuery = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (!message.height.isZero()) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestQuery);\n        message.data = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = reader.int64();\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestQuery);\n        message.data = new Uint8Array();\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestQuery);\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexports.RequestBeginBlock = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            types_1.Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            exports.LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            exports.Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestBeginBlock);\n        message.byzantineValidators = [];\n        message.hash = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = types_1.Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = exports.LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(exports.Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestBeginBlock);\n        message.byzantineValidators = [];\n        message.hash = new Uint8Array();\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = types_1.Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = exports.LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined && object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(exports.Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined && (obj.header = message.header ? types_1.Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? exports.LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => (e ? exports.Evidence.toJSON(e) : undefined));\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestBeginBlock);\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = types_1.Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = exports.LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined && object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(exports.Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexports.RequestCheckTx = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestCheckTx);\n        message.tx = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestCheckTx);\n        message.tx = new Uint8Array();\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestCheckTx);\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexports.RequestDeliverTx = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestDeliverTx);\n        message.tx = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestDeliverTx);\n        message.tx = new Uint8Array();\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestDeliverTx);\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: long_1.default.ZERO };\nexports.RequestEndBlock = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.height.isZero()) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestEndBlock);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestEndBlock);\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestEndBlock);\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexports.RequestCommit = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestCommit);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseRequestCommit);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseRequestCommit);\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexports.RequestListSnapshots = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestListSnapshots);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseRequestListSnapshots);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseRequestListSnapshots);\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexports.RequestOfferSnapshot = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.snapshot !== undefined) {\n            exports.Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestOfferSnapshot);\n        message.appHash = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = exports.Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestOfferSnapshot);\n        message.appHash = new Uint8Array();\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = exports.Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot ? exports.Snapshot.toJSON(message.snapshot) : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestOfferSnapshot);\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = exports.Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: long_1.default.UZERO, format: 0, chunk: 0 };\nexports.RequestLoadSnapshotChunk = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.height.isZero()) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestLoadSnapshotChunk);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.uint64();\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestLoadSnapshotChunk);\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.UZERO;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || long_1.default.UZERO).toString());\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestLoadSnapshotChunk);\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.UZERO;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexports.RequestApplySnapshotChunk = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseRequestApplySnapshotChunk);\n        message.chunk = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseRequestApplySnapshotChunk);\n        message.chunk = new Uint8Array();\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseRequestApplySnapshotChunk);\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexports.Response = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.exception !== undefined) {\n            exports.ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            exports.ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            exports.ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            exports.ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            exports.ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            exports.ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            exports.ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            exports.ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            exports.ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            exports.ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            exports.ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            exports.ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            exports.ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            exports.ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            exports.ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            exports.ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = exports.ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = exports.ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = exports.ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = exports.ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = exports.ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = exports.ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = exports.ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = exports.ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = exports.ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = exports.ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = exports.ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = exports.ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = exports.ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = exports.ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponse);\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = exports.ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = exports.ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = exports.ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = exports.ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = exports.ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = exports.ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = exports.ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = exports.ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = exports.ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = exports.ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = exports.ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = exports.ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception ? exports.ResponseException.toJSON(message.exception) : undefined);\n        message.echo !== undefined && (obj.echo = message.echo ? exports.ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush ? exports.ResponseFlush.toJSON(message.flush) : undefined);\n        message.info !== undefined && (obj.info = message.info ? exports.ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption ? exports.ResponseSetOption.toJSON(message.setOption) : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain ? exports.ResponseInitChain.toJSON(message.initChain) : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query ? exports.ResponseQuery.toJSON(message.query) : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock ? exports.ResponseBeginBlock.toJSON(message.beginBlock) : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx ? exports.ResponseCheckTx.toJSON(message.checkTx) : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx ? exports.ResponseDeliverTx.toJSON(message.deliverTx) : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock ? exports.ResponseEndBlock.toJSON(message.endBlock) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? exports.ResponseCommit.toJSON(message.commit) : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? exports.ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? exports.ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? exports.ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? exports.ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponse);\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = exports.ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = exports.ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = exports.ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = exports.ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = exports.ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = exports.ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = exports.ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = exports.ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = exports.ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = exports.ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = exports.ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = exports.ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = exports.ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = exports.ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = exports.ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = exports.ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexports.ResponseException = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseException);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseException);\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseException);\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexports.ResponseEcho = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseEcho);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseEcho);\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseEcho);\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexports.ResponseFlush = {\n    encode(_, writer = minimal_1.default.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseFlush);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = Object.assign({}, baseResponseFlush);\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = Object.assign({}, baseResponseFlush);\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: long_1.default.UZERO,\n    lastBlockHeight: long_1.default.ZERO,\n};\nexports.ResponseInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (!message.appVersion.isZero()) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (!message.lastBlockHeight.isZero()) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseInfo);\n        message.lastBlockAppHash = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = reader.uint64();\n                    break;\n                case 4:\n                    message.lastBlockHeight = reader.int64();\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseInfo);\n        message.lastBlockAppHash = new Uint8Array();\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = long_1.default.fromString(object.appVersion);\n        }\n        else {\n            message.appVersion = long_1.default.UZERO;\n        }\n        if (object.lastBlockHeight !== undefined && object.lastBlockHeight !== null) {\n            message.lastBlockHeight = long_1.default.fromString(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = long_1.default.ZERO;\n        }\n        if (object.lastBlockAppHash !== undefined && object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = (message.appVersion || long_1.default.UZERO).toString());\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = (message.lastBlockHeight || long_1.default.ZERO).toString());\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined ? message.lastBlockAppHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseInfo);\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = long_1.default.UZERO;\n        }\n        if (object.lastBlockHeight !== undefined && object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = long_1.default.ZERO;\n        }\n        if (object.lastBlockAppHash !== undefined && object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexports.ResponseSetOption = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseSetOption);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseSetOption);\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseSetOption);\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexports.ResponseInitChain = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            exports.ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            exports.ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseInitChain);\n        message.validators = [];\n        message.appHash = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = exports.ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseInitChain);\n        message.validators = [];\n        message.appHash = new Uint8Array();\n        if (object.consensusParams !== undefined && object.consensusParams !== null) {\n            message.consensusParams = exports.ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(exports.ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? exports.ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? exports.ValidatorUpdate.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseInitChain);\n        message.validators = [];\n        if (object.consensusParams !== undefined && object.consensusParams !== null) {\n            message.consensusParams = exports.ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(exports.ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: long_1.default.ZERO,\n    height: long_1.default.ZERO,\n    codespace: \"\",\n};\nexports.ResponseQuery = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (!message.index.isZero()) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            proof_1.ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (!message.height.isZero()) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseQuery);\n        message.key = new Uint8Array();\n        message.value = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = reader.int64();\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = proof_1.ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = reader.int64();\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseQuery);\n        message.key = new Uint8Array();\n        message.value = new Uint8Array();\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = long_1.default.fromString(object.index);\n        }\n        else {\n            message.index = long_1.default.ZERO;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = proof_1.ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = (message.index || long_1.default.ZERO).toString());\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps ? proof_1.ProofOps.toJSON(message.proofOps) : undefined);\n        message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseQuery);\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = long_1.default.ZERO;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = proof_1.ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexports.ResponseBeginBlock = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseBeginBlock);\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseBeginBlock);\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseBeginBlock);\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: long_1.default.ZERO,\n    gasUsed: long_1.default.ZERO,\n    codespace: \"\",\n};\nexports.ResponseCheckTx = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (!message.gasWanted.isZero()) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (!message.gasUsed.isZero()) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseCheckTx);\n        message.events = [];\n        message.data = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = reader.int64();\n                    break;\n                case 6:\n                    message.gasUsed = reader.int64();\n                    break;\n                case 7:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseCheckTx);\n        message.events = [];\n        message.data = new Uint8Array();\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = long_1.default.fromString(object.gasWanted);\n        }\n        else {\n            message.gasWanted = long_1.default.ZERO;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = long_1.default.fromString(object.gasUsed);\n        }\n        else {\n            message.gasUsed = long_1.default.ZERO;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = (message.gasWanted || long_1.default.ZERO).toString());\n        message.gasUsed !== undefined && (obj.gasUsed = (message.gasUsed || long_1.default.ZERO).toString());\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseCheckTx);\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = long_1.default.ZERO;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = long_1.default.ZERO;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: long_1.default.ZERO,\n    gasUsed: long_1.default.ZERO,\n    codespace: \"\",\n};\nexports.ResponseDeliverTx = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (!message.gasWanted.isZero()) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (!message.gasUsed.isZero()) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseDeliverTx);\n        message.events = [];\n        message.data = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = reader.int64();\n                    break;\n                case 6:\n                    message.gasUsed = reader.int64();\n                    break;\n                case 7:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseDeliverTx);\n        message.events = [];\n        message.data = new Uint8Array();\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = long_1.default.fromString(object.gasWanted);\n        }\n        else {\n            message.gasWanted = long_1.default.ZERO;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = long_1.default.fromString(object.gasUsed);\n        }\n        else {\n            message.gasUsed = long_1.default.ZERO;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = (message.gasWanted || long_1.default.ZERO).toString());\n        message.gasUsed !== undefined && (obj.gasUsed = (message.gasUsed || long_1.default.ZERO).toString());\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseDeliverTx);\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = long_1.default.ZERO;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = long_1.default.ZERO;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexports.ResponseEndBlock = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            exports.ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            exports.ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            exports.Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseEndBlock);\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(exports.ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = exports.ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(exports.Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseEndBlock);\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined && object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(exports.ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = exports.ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => (e ? exports.ValidatorUpdate.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? exports.ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? exports.Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseEndBlock);\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined && object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(exports.ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = exports.ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(exports.Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: long_1.default.ZERO };\nexports.ResponseCommit = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (!message.retainHeight.isZero()) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseCommit);\n        message.data = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseCommit);\n        message.data = new Uint8Array();\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = long_1.default.fromString(object.retainHeight);\n        }\n        else {\n            message.retainHeight = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined && (obj.retainHeight = (message.retainHeight || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseCommit);\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexports.ResponseListSnapshots = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        for (const v of message.snapshots) {\n            exports.Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseListSnapshots);\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(exports.Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseListSnapshots);\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(exports.Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => (e ? exports.Snapshot.toJSON(e) : undefined));\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseListSnapshots);\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(exports.Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexports.ResponseOfferSnapshot = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseOfferSnapshot);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseOfferSnapshot);\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseOfferSnapshot);\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexports.ResponseLoadSnapshotChunk = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseLoadSnapshotChunk);\n        message.chunk = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseLoadSnapshotChunk);\n        message.chunk = new Uint8Array();\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseLoadSnapshotChunk);\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = { result: 0, refetchChunks: 0, rejectSenders: \"\" };\nexports.ResponseApplySnapshotChunk = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseResponseApplySnapshotChunk);\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseResponseApplySnapshotChunk);\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined && (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseResponseApplySnapshotChunk);\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexports.ConsensusParams = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.block !== undefined) {\n            exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            params_1.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            params_1.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            params_1.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseConsensusParams);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = exports.BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = params_1.EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = params_1.ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = params_1.VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseConsensusParams);\n        if (object.block !== undefined && object.block !== null) {\n            message.block = exports.BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = params_1.EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = params_1.ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = params_1.VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence ? params_1.EvidenceParams.toJSON(message.evidence) : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? params_1.ValidatorParams.toJSON(message.validator) : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version ? params_1.VersionParams.toJSON(message.version) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseConsensusParams);\n        if (object.block !== undefined && object.block !== null) {\n            message.block = exports.BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = params_1.EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = params_1.ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = params_1.VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: long_1.default.ZERO, maxGas: long_1.default.ZERO };\nexports.BlockParams = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.maxBytes.isZero()) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (!message.maxGas.isZero()) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseBlockParams);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = reader.int64();\n                    break;\n                case 2:\n                    message.maxGas = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseBlockParams);\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = long_1.default.fromString(object.maxBytes);\n        }\n        else {\n            message.maxBytes = long_1.default.ZERO;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = long_1.default.fromString(object.maxGas);\n        }\n        else {\n            message.maxGas = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || long_1.default.ZERO).toString());\n        message.maxGas !== undefined && (obj.maxGas = (message.maxGas || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseBlockParams);\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = long_1.default.ZERO;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexports.LastCommitInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            exports.VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseLastCommitInfo);\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(exports.VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseLastCommitInfo);\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(exports.VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? exports.VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseLastCommitInfo);\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(exports.VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexports.Event = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            exports.EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseEvent);\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(exports.EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseEvent);\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(exports.EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => (e ? exports.EventAttribute.toJSON(e) : undefined));\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseEvent);\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(exports.EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexports.EventAttribute = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseEventAttribute);\n        message.key = new Uint8Array();\n        message.value = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseEventAttribute);\n        message.key = new Uint8Array();\n        message.value = new Uint8Array();\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseEventAttribute);\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: long_1.default.ZERO, index: 0 };\nexports.TxResult = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.height.isZero()) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            exports.ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseTxResult);\n        message.tx = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.int64();\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = exports.ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseTxResult);\n        message.tx = new Uint8Array();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = exports.ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result ? exports.ResponseDeliverTx.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseTxResult);\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = exports.ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: long_1.default.ZERO };\nexports.Validator = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (!message.power.isZero()) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValidator);\n        message.address = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValidator);\n        message.address = new Uint8Array();\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = long_1.default.fromString(object.power);\n        }\n        else {\n            message.power = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = (message.power || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseValidator);\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: long_1.default.ZERO };\nexports.ValidatorUpdate = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.pubKey !== undefined) {\n            keys_1.PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (!message.power.isZero()) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseValidatorUpdate);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = keys_1.PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseValidatorUpdate);\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = long_1.default.fromString(object.power);\n        }\n        else {\n            message.power = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? keys_1.PublicKey.toJSON(message.pubKey) : undefined);\n        message.power !== undefined && (obj.power = (message.power || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseValidatorUpdate);\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = keys_1.PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexports.VoteInfo = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.validator !== undefined) {\n            exports.Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseVoteInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = exports.Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseVoteInfo);\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined && object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : undefined);\n        message.signedLastBlock !== undefined && (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseVoteInfo);\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined && object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: long_1.default.ZERO, totalVotingPower: long_1.default.ZERO };\nexports.Evidence = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            exports.Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (!message.height.isZero()) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            timestamp_1.Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (!message.totalVotingPower.isZero()) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseEvidence);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = exports.Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = reader.int64();\n                    break;\n                case 4:\n                    message.time = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseEvidence);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = long_1.default.fromString(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = long_1.default.ZERO;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator ? exports.Validator.toJSON(message.validator) : undefined);\n        message.height !== undefined && (obj.height = (message.height || long_1.default.ZERO).toString());\n        message.time !== undefined && (obj.time = message.time.toISOString());\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = (message.totalVotingPower || long_1.default.ZERO).toString());\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseEvidence);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = exports.Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.ZERO;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = long_1.default.ZERO;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: long_1.default.UZERO, format: 0, chunks: 0 };\nexports.Snapshot = {\n    encode(message, writer = minimal_1.default.Writer.create()) {\n        if (!message.height.isZero()) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSnapshot);\n        message.hash = new Uint8Array();\n        message.metadata = new Uint8Array();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = reader.uint64();\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSnapshot);\n        message.hash = new Uint8Array();\n        message.metadata = new Uint8Array();\n        if (object.height !== undefined && object.height !== null) {\n            message.height = long_1.default.fromString(object.height);\n        }\n        else {\n            message.height = long_1.default.UZERO;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = (message.height || long_1.default.UZERO).toString());\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSnapshot);\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = long_1.default.UZERO;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nclass ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Echo = this.Echo.bind(this);\n        this.Flush = this.Flush.bind(this);\n        this.Info = this.Info.bind(this);\n        this.SetOption = this.SetOption.bind(this);\n        this.DeliverTx = this.DeliverTx.bind(this);\n        this.CheckTx = this.CheckTx.bind(this);\n        this.Query = this.Query.bind(this);\n        this.Commit = this.Commit.bind(this);\n        this.InitChain = this.InitChain.bind(this);\n        this.BeginBlock = this.BeginBlock.bind(this);\n        this.EndBlock = this.EndBlock.bind(this);\n        this.ListSnapshots = this.ListSnapshots.bind(this);\n        this.OfferSnapshot = this.OfferSnapshot.bind(this);\n        this.LoadSnapshotChunk = this.LoadSnapshotChunk.bind(this);\n        this.ApplySnapshotChunk = this.ApplySnapshotChunk.bind(this);\n    }\n    Echo(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationEchoDesc, exports.RequestEcho.fromPartial(request), metadata);\n    }\n    Flush(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationFlushDesc, exports.RequestFlush.fromPartial(request), metadata);\n    }\n    Info(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationInfoDesc, exports.RequestInfo.fromPartial(request), metadata);\n    }\n    SetOption(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationSetOptionDesc, exports.RequestSetOption.fromPartial(request), metadata);\n    }\n    DeliverTx(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationDeliverTxDesc, exports.RequestDeliverTx.fromPartial(request), metadata);\n    }\n    CheckTx(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationCheckTxDesc, exports.RequestCheckTx.fromPartial(request), metadata);\n    }\n    Query(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationQueryDesc, exports.RequestQuery.fromPartial(request), metadata);\n    }\n    Commit(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationCommitDesc, exports.RequestCommit.fromPartial(request), metadata);\n    }\n    InitChain(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationInitChainDesc, exports.RequestInitChain.fromPartial(request), metadata);\n    }\n    BeginBlock(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationBeginBlockDesc, exports.RequestBeginBlock.fromPartial(request), metadata);\n    }\n    EndBlock(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationEndBlockDesc, exports.RequestEndBlock.fromPartial(request), metadata);\n    }\n    ListSnapshots(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationListSnapshotsDesc, exports.RequestListSnapshots.fromPartial(request), metadata);\n    }\n    OfferSnapshot(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationOfferSnapshotDesc, exports.RequestOfferSnapshot.fromPartial(request), metadata);\n    }\n    LoadSnapshotChunk(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationLoadSnapshotChunkDesc, exports.RequestLoadSnapshotChunk.fromPartial(request), metadata);\n    }\n    ApplySnapshotChunk(request, metadata) {\n        return this.rpc.unary(exports.ABCIApplicationApplySnapshotChunkDesc, exports.RequestApplySnapshotChunk.fromPartial(request), metadata);\n    }\n}\nexports.ABCIApplicationClientImpl = ABCIApplicationClientImpl;\nexports.ABCIApplicationDesc = {\n    serviceName: \"tendermint.abci.ABCIApplication\",\n};\nexports.ABCIApplicationEchoDesc = {\n    methodName: \"Echo\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestEcho.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseEcho.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationFlushDesc = {\n    methodName: \"Flush\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestFlush.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseFlush.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationInfoDesc = {\n    methodName: \"Info\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestInfo.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseInfo.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationSetOptionDesc = {\n    methodName: \"SetOption\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestSetOption.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseSetOption.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationDeliverTxDesc = {\n    methodName: \"DeliverTx\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestDeliverTx.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseDeliverTx.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationCheckTxDesc = {\n    methodName: \"CheckTx\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestCheckTx.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseCheckTx.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationQueryDesc = {\n    methodName: \"Query\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestQuery.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseQuery.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationCommitDesc = {\n    methodName: \"Commit\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestCommit.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseCommit.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationInitChainDesc = {\n    methodName: \"InitChain\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestInitChain.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseInitChain.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationBeginBlockDesc = {\n    methodName: \"BeginBlock\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestBeginBlock.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseBeginBlock.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationEndBlockDesc = {\n    methodName: \"EndBlock\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestEndBlock.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseEndBlock.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationListSnapshotsDesc = {\n    methodName: \"ListSnapshots\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestListSnapshots.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseListSnapshots.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationOfferSnapshotDesc = {\n    methodName: \"OfferSnapshot\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestOfferSnapshot.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseOfferSnapshot.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationLoadSnapshotChunkDesc = {\n    methodName: \"LoadSnapshotChunk\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestLoadSnapshotChunk.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseLoadSnapshotChunk.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nexports.ABCIApplicationApplySnapshotChunkDesc = {\n    methodName: \"ApplySnapshotChunk\",\n    service: exports.ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return exports.RequestApplySnapshotChunk.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            return Object.assign(Object.assign({}, exports.ResponseApplySnapshotChunk.decode(data)), { toObject() {\n                    return this;\n                } });\n        },\n    },\n};\nclass GrpcWebImpl {\n    constructor(host, options) {\n        this.host = host;\n        this.options = options;\n    }\n    unary(methodDesc, _request, metadata) {\n        var _a;\n        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new browser_headers_1.BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata || this.options.metadata;\n        return new Promise((resolve, reject) => {\n            grpc_web_1.grpc.unary(methodDesc, {\n                request,\n                host: this.host,\n                metadata: maybeCombinedMetadata,\n                transport: this.options.transport,\n                debug: this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc_web_1.grpc.Code.OK) {\n                        resolve(response.message);\n                    }\n                    else {\n                        const err = new Error(response.statusMessage);\n                        err.code = response.status;\n                        err.metadata = response.trailers;\n                        reject(err);\n                    }\n                },\n            });\n        });\n    }\n}\nexports.GrpcWebImpl = GrpcWebImpl;\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (const byte of arr) {\n        bin.push(String.fromCharCode(byte));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = numberToLong(date.getTime() / 1000);\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds.toNumber() * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));\n    }\n}\nfunction numberToLong(number) {\n    return long_1.default.fromNumber(number);\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n    minimal_1.default.util.Long = long_1.default;\n    minimal_1.default.configure();\n}\n//# sourceMappingURL=types.js.map"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","GrpcWebImpl","ABCIApplicationApplySnapshotChunkDesc","ABCIApplicationLoadSnapshotChunkDesc","ABCIApplicationOfferSnapshotDesc","ABCIApplicationListSnapshotsDesc","ABCIApplicationEndBlockDesc","ABCIApplicationBeginBlockDesc","ABCIApplicationInitChainDesc","ABCIApplicationCommitDesc","ABCIApplicationQueryDesc","ABCIApplicationCheckTxDesc","ABCIApplicationDeliverTxDesc","ABCIApplicationSetOptionDesc","ABCIApplicationInfoDesc","ABCIApplicationFlushDesc","ABCIApplicationEchoDesc","ABCIApplicationDesc","ABCIApplicationClientImpl","Snapshot","Evidence","VoteInfo","ValidatorUpdate","Validator","TxResult","EventAttribute","Event","LastCommitInfo","BlockParams","ConsensusParams","ResponseApplySnapshotChunk","ResponseLoadSnapshotChunk","ResponseOfferSnapshot","ResponseListSnapshots","ResponseCommit","ResponseEndBlock","ResponseDeliverTx","ResponseCheckTx","ResponseBeginBlock","ResponseQuery","ResponseInitChain","ResponseSetOption","ResponseInfo","ResponseFlush","ResponseEcho","ResponseException","Response","RequestApplySnapshotChunk","RequestLoadSnapshotChunk","RequestOfferSnapshot","RequestListSnapshots","RequestCommit","RequestEndBlock","RequestDeliverTx","RequestCheckTx","RequestBeginBlock","RequestQuery","RequestInitChain","RequestSetOption","RequestInfo","RequestFlush","RequestEcho","Request","responseApplySnapshotChunk_ResultToJSON","responseApplySnapshotChunk_ResultFromJSON","ResponseApplySnapshotChunk_Result","responseOfferSnapshot_ResultToJSON","responseOfferSnapshot_ResultFromJSON","ResponseOfferSnapshot_Result","evidenceTypeToJSON","evidenceTypeFromJSON","EvidenceType","checkTxTypeToJSON","checkTxTypeFromJSON","CheckTxType","protobufPackage","long_1","grpc_web_1","minimal_1","types_1","proof_1","params_1","keys_1","browser_headers_1","timestamp_1","object","NEW","RECHECK","UNRECOGNIZED","UNKNOWN","DUPLICATE_VOTE","LIGHT_CLIENT_ATTACK","ACCEPT","ABORT","REJECT","REJECT_FORMAT","REJECT_SENDER","RETRY","RETRY_SNAPSHOT","REJECT_SNAPSHOT","baseRequest","encode","message","writer","default","Writer","create","undefined","echo","uint32","fork","ldelim","flush","info","setOption","initChain","query","beginBlock","checkTx","deliverTx","endBlock","commit","listSnapshots","offerSnapshot","loadSnapshotChunk","applySnapshotChunk","decode","input","length","reader","Reader","end","len","pos","assign","tag","skipType","fromJSON","toJSON","obj","fromPartial","baseRequestEcho","string","String","baseRequestFlush","_","baseRequestInfo","version","blockVersion","UZERO","p2pVersion","isZero","uint64","fromString","toString","baseRequestSetOption","key","baseRequestInitChain","chainId","initialHeight","ZERO","time","Timestamp","toTimestamp","consensusParams","v","validators","appStateBytes","bytes","int64","Uint8Array","fromTimestamp","push","fromJsonTimestamp","e","bytesFromBase64","toISOString","map","base64FromBytes","baseRequestQuery","path","height","prove","data","bool","Boolean","baseRequestBeginBlock","hash","header","Header","lastCommitInfo","byzantineValidators","baseRequestCheckTx","type","tx","int32","baseRequestDeliverTx","baseRequestEndBlock","baseRequestCommit","baseRequestListSnapshots","baseRequestOfferSnapshot","snapshot","appHash","baseRequestLoadSnapshotChunk","format","chunk","Number","baseRequestApplySnapshotChunk","index","sender","baseResponse","exception","baseResponseException","error","baseResponseEcho","baseResponseFlush","baseResponseInfo","appVersion","lastBlockHeight","lastBlockAppHash","baseResponseSetOption","code","log","baseResponseInitChain","baseResponseQuery","codespace","proofOps","ProofOps","baseResponseBeginBlock","events","baseResponseCheckTx","gasWanted","gasUsed","baseResponseDeliverTx","baseResponseEndBlock","validatorUpdates","consensusParamUpdates","baseResponseCommit","retainHeight","baseResponseListSnapshots","snapshots","baseResponseOfferSnapshot","result","baseResponseLoadSnapshotChunk","baseResponseApplySnapshotChunk","refetchChunks","rejectSenders","end2","baseConsensusParams","block","evidence","EvidenceParams","validator","ValidatorParams","VersionParams","baseBlockParams","maxBytes","maxGas","baseLastCommitInfo","round","votes","baseEvent","attributes","baseEventAttribute","baseTxResult","baseValidator","power","address","baseValidatorUpdate","pubKey","PublicKey","baseVoteInfo","signedLastBlock","baseEvidence","totalVotingPower","baseSnapshot","chunks","metadata","constructor","rpc","Echo","bind","Flush","Info","SetOption","DeliverTx","CheckTx","Query","Commit","InitChain","BeginBlock","EndBlock","ListSnapshots","OfferSnapshot","LoadSnapshotChunk","ApplySnapshotChunk","request","unary","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","toObject","host","options","methodDesc","_request","_a","maybeCombinedMetadata","BrowserHeaders","headersMap","Promise","resolve","reject","grpc","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","trailers","globalThis","self","window","g","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","date","number","seconds","getTime","fromNumber","nanos","t","millis","toNumber","Date","o","util","Long","configure"],"sourceRoot":""}