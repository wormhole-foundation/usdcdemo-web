{"version":3,"file":"164a02e5-be37d1e9125f14f5ca7b.js","mappings":"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","sources":["webpack://wormhole-usdc-demo/./node_modules/@injectivelabs/chain-api/injective/peggy/v1/query_pb.js"],"sourcesContent":["// source: injective/peggy/v1/query.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar injective_peggy_v1_genesis_pb = require('../../../injective/peggy/v1/genesis_pb.js');\ngoog.object.extend(proto, injective_peggy_v1_genesis_pb);\nvar injective_peggy_v1_types_pb = require('../../../injective/peggy/v1/types_pb.js');\ngoog.object.extend(proto, injective_peggy_v1_types_pb);\nvar injective_peggy_v1_msgs_pb = require('../../../injective/peggy/v1/msgs_pb.js');\ngoog.object.extend(proto, injective_peggy_v1_msgs_pb);\nvar injective_peggy_v1_pool_pb = require('../../../injective/peggy/v1/pool_pb.js');\ngoog.object.extend(proto, injective_peggy_v1_pool_pb);\nvar injective_peggy_v1_batch_pb = require('../../../injective/peggy/v1/batch_pb.js');\ngoog.object.extend(proto, injective_peggy_v1_batch_pb);\nvar google_api_annotations_pb = require('../../../google/api/annotations_pb.js');\ngoog.object.extend(proto, google_api_annotations_pb);\nvar gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryBatchConfirmsRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryBatchConfirmsResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryBatchFeeRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryBatchFeeResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryBatchRequestByNonceRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryBatchRequestByNonceResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryCurrentValsetRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryCurrentValsetResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDelegateKeysByEthAddress', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDenomToERC20Request', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryDenomToERC20Response', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryERC20ToDenomRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryERC20ToDenomResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastEventByAddrRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastEventByAddrResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastValsetRequestsRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryLastValsetRequestsResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryModuleStateRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryModuleStateResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryParamsRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryParamsResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryPendingSendToEth', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryPendingSendToEthResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryValsetConfirmRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryValsetConfirmResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryValsetRequestRequest', null, global);\ngoog.exportSymbol('proto.injective.peggy.v1.QueryValsetRequestResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryParamsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryParamsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryParamsRequest.displayName = 'proto.injective.peggy.v1.QueryParamsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryParamsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryParamsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryParamsResponse.displayName = 'proto.injective.peggy.v1.QueryParamsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryCurrentValsetRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryCurrentValsetRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryCurrentValsetRequest.displayName = 'proto.injective.peggy.v1.QueryCurrentValsetRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryCurrentValsetResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryCurrentValsetResponse.displayName = 'proto.injective.peggy.v1.QueryCurrentValsetResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryValsetRequestRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryValsetRequestRequest.displayName = 'proto.injective.peggy.v1.QueryValsetRequestRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryValsetRequestResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryValsetRequestResponse.displayName = 'proto.injective.peggy.v1.QueryValsetRequestResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryValsetConfirmRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryValsetConfirmRequest.displayName = 'proto.injective.peggy.v1.QueryValsetConfirmRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryValsetConfirmResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryValsetConfirmResponse.displayName = 'proto.injective.peggy.v1.QueryValsetConfirmResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.displayName = 'proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.displayName = 'proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastValsetRequestsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastValsetRequestsRequest.displayName = 'proto.injective.peggy.v1.QueryLastValsetRequestsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.peggy.v1.QueryLastValsetRequestsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastValsetRequestsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastValsetRequestsResponse.displayName = 'proto.injective.peggy.v1.QueryLastValsetRequestsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.displayName = 'proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.displayName = 'proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryBatchFeeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryBatchFeeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryBatchFeeRequest.displayName = 'proto.injective.peggy.v1.QueryBatchFeeRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.peggy.v1.QueryBatchFeeResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryBatchFeeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryBatchFeeResponse.displayName = 'proto.injective.peggy.v1.QueryBatchFeeResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.displayName = 'proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.displayName = 'proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.displayName = 'proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.displayName = 'proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryBatchRequestByNonceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryBatchRequestByNonceRequest.displayName = 'proto.injective.peggy.v1.QueryBatchRequestByNonceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryBatchRequestByNonceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryBatchRequestByNonceResponse.displayName = 'proto.injective.peggy.v1.QueryBatchRequestByNonceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryBatchConfirmsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryBatchConfirmsRequest.displayName = 'proto.injective.peggy.v1.QueryBatchConfirmsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.peggy.v1.QueryBatchConfirmsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryBatchConfirmsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryBatchConfirmsResponse.displayName = 'proto.injective.peggy.v1.QueryBatchConfirmsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastEventByAddrRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastEventByAddrRequest.displayName = 'proto.injective.peggy.v1.QueryLastEventByAddrRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryLastEventByAddrResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryLastEventByAddrResponse.displayName = 'proto.injective.peggy.v1.QueryLastEventByAddrResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryERC20ToDenomRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryERC20ToDenomRequest.displayName = 'proto.injective.peggy.v1.QueryERC20ToDenomRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryERC20ToDenomResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryERC20ToDenomResponse.displayName = 'proto.injective.peggy.v1.QueryERC20ToDenomResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDenomToERC20Request, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDenomToERC20Request.displayName = 'proto.injective.peggy.v1.QueryDenomToERC20Request';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDenomToERC20Response, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDenomToERC20Response.displayName = 'proto.injective.peggy.v1.QueryDenomToERC20Response';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.displayName = 'proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.displayName = 'proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDelegateKeysByEthAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDelegateKeysByEthAddress.displayName = 'proto.injective.peggy.v1.QueryDelegateKeysByEthAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.displayName = 'proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.displayName = 'proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.displayName = 'proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryPendingSendToEth = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryPendingSendToEth, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryPendingSendToEth.displayName = 'proto.injective.peggy.v1.QueryPendingSendToEth';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective.peggy.v1.QueryPendingSendToEthResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryPendingSendToEthResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryPendingSendToEthResponse.displayName = 'proto.injective.peggy.v1.QueryPendingSendToEthResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryModuleStateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryModuleStateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryModuleStateRequest.displayName = 'proto.injective.peggy.v1.QueryModuleStateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.injective.peggy.v1.QueryModuleStateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.injective.peggy.v1.QueryModuleStateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.injective.peggy.v1.QueryModuleStateResponse.displayName = 'proto.injective.peggy.v1.QueryModuleStateResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryParamsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryParamsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryParamsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryParamsRequest}\n */\nproto.injective.peggy.v1.QueryParamsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryParamsRequest;\n  return proto.injective.peggy.v1.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryParamsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryParamsRequest}\n */\nproto.injective.peggy.v1.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryParamsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryParamsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryParamsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryParamsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryParamsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryParamsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    params: (f = msg.getParams()) && injective_peggy_v1_genesis_pb.Params.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryParamsResponse}\n */\nproto.injective.peggy.v1.QueryParamsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryParamsResponse;\n  return proto.injective.peggy.v1.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryParamsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryParamsResponse}\n */\nproto.injective.peggy.v1.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_genesis_pb.Params;\n      reader.readMessage(value,injective_peggy_v1_genesis_pb.Params.deserializeBinaryFromReader);\n      msg.setParams(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryParamsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryParamsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryParamsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getParams();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_genesis_pb.Params.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Params params = 1;\n * @return {?proto.injective.peggy.v1.Params}\n */\nproto.injective.peggy.v1.QueryParamsResponse.prototype.getParams = function() {\n  return /** @type{?proto.injective.peggy.v1.Params} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_genesis_pb.Params, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.Params|undefined} value\n * @return {!proto.injective.peggy.v1.QueryParamsResponse} returns this\n*/\nproto.injective.peggy.v1.QueryParamsResponse.prototype.setParams = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryParamsResponse} returns this\n */\nproto.injective.peggy.v1.QueryParamsResponse.prototype.clearParams = function() {\n  return this.setParams(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryParamsResponse.prototype.hasParams = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryCurrentValsetRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryCurrentValsetRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryCurrentValsetRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryCurrentValsetRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryCurrentValsetRequest}\n */\nproto.injective.peggy.v1.QueryCurrentValsetRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryCurrentValsetRequest;\n  return proto.injective.peggy.v1.QueryCurrentValsetRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryCurrentValsetRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryCurrentValsetRequest}\n */\nproto.injective.peggy.v1.QueryCurrentValsetRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryCurrentValsetRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryCurrentValsetRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryCurrentValsetRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryCurrentValsetRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryCurrentValsetResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryCurrentValsetResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valset: (f = msg.getValset()) && injective_peggy_v1_types_pb.Valset.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryCurrentValsetResponse}\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryCurrentValsetResponse;\n  return proto.injective.peggy.v1.QueryCurrentValsetResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryCurrentValsetResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryCurrentValsetResponse}\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_types_pb.Valset;\n      reader.readMessage(value,injective_peggy_v1_types_pb.Valset.deserializeBinaryFromReader);\n      msg.setValset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryCurrentValsetResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryCurrentValsetResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValset();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_types_pb.Valset.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Valset valset = 1;\n * @return {?proto.injective.peggy.v1.Valset}\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.prototype.getValset = function() {\n  return /** @type{?proto.injective.peggy.v1.Valset} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_types_pb.Valset, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.Valset|undefined} value\n * @return {!proto.injective.peggy.v1.QueryCurrentValsetResponse} returns this\n*/\nproto.injective.peggy.v1.QueryCurrentValsetResponse.prototype.setValset = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryCurrentValsetResponse} returns this\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.prototype.clearValset = function() {\n  return this.setValset(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryCurrentValsetResponse.prototype.hasValset = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryValsetRequestRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryValsetRequestRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryValsetRequestRequest}\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryValsetRequestRequest;\n  return proto.injective.peggy.v1.QueryValsetRequestRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryValsetRequestRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryValsetRequestRequest}\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryValsetRequestRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryValsetRequestRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.peggy.v1.QueryValsetRequestRequest} returns this\n */\nproto.injective.peggy.v1.QueryValsetRequestRequest.prototype.setNonce = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryValsetRequestResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryValsetRequestResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valset: (f = msg.getValset()) && injective_peggy_v1_types_pb.Valset.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryValsetRequestResponse}\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryValsetRequestResponse;\n  return proto.injective.peggy.v1.QueryValsetRequestResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryValsetRequestResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryValsetRequestResponse}\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_types_pb.Valset;\n      reader.readMessage(value,injective_peggy_v1_types_pb.Valset.deserializeBinaryFromReader);\n      msg.setValset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryValsetRequestResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryValsetRequestResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValset();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_types_pb.Valset.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Valset valset = 1;\n * @return {?proto.injective.peggy.v1.Valset}\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.prototype.getValset = function() {\n  return /** @type{?proto.injective.peggy.v1.Valset} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_types_pb.Valset, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.Valset|undefined} value\n * @return {!proto.injective.peggy.v1.QueryValsetRequestResponse} returns this\n*/\nproto.injective.peggy.v1.QueryValsetRequestResponse.prototype.setValset = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryValsetRequestResponse} returns this\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.prototype.clearValset = function() {\n  return this.setValset(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryValsetRequestResponse.prototype.hasValset = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryValsetConfirmRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    address: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmRequest}\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryValsetConfirmRequest;\n  return proto.injective.peggy.v1.QueryValsetConfirmRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmRequest}\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryValsetConfirmRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmRequest} returns this\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.prototype.setNonce = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmRequest} returns this\n */\nproto.injective.peggy.v1.QueryValsetConfirmRequest.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryValsetConfirmResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    confirm: (f = msg.getConfirm()) && injective_peggy_v1_msgs_pb.MsgValsetConfirm.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmResponse}\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryValsetConfirmResponse;\n  return proto.injective.peggy.v1.QueryValsetConfirmResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmResponse}\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_msgs_pb.MsgValsetConfirm;\n      reader.readMessage(value,injective_peggy_v1_msgs_pb.MsgValsetConfirm.deserializeBinaryFromReader);\n      msg.setConfirm(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryValsetConfirmResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfirm();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_msgs_pb.MsgValsetConfirm.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional MsgValsetConfirm confirm = 1;\n * @return {?proto.injective.peggy.v1.MsgValsetConfirm}\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.prototype.getConfirm = function() {\n  return /** @type{?proto.injective.peggy.v1.MsgValsetConfirm} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_msgs_pb.MsgValsetConfirm, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.MsgValsetConfirm|undefined} value\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmResponse} returns this\n*/\nproto.injective.peggy.v1.QueryValsetConfirmResponse.prototype.setConfirm = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmResponse} returns this\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.prototype.clearConfirm = function() {\n  return this.setConfirm(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryValsetConfirmResponse.prototype.hasConfirm = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest;\n  return proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest} returns this\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceRequest.prototype.setNonce = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    confirmsList: jspb.Message.toObjectList(msg.getConfirmsList(),\n    injective_peggy_v1_msgs_pb.MsgValsetConfirm.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse;\n  return proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_msgs_pb.MsgValsetConfirm;\n      reader.readMessage(value,injective_peggy_v1_msgs_pb.MsgValsetConfirm.deserializeBinaryFromReader);\n      msg.addConfirms(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfirmsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_peggy_v1_msgs_pb.MsgValsetConfirm.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated MsgValsetConfirm confirms = 1;\n * @return {!Array<!proto.injective.peggy.v1.MsgValsetConfirm>}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.prototype.getConfirmsList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.MsgValsetConfirm>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_msgs_pb.MsgValsetConfirm, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.MsgValsetConfirm>} value\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse} returns this\n*/\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.prototype.setConfirmsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.MsgValsetConfirm=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.MsgValsetConfirm}\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.prototype.addConfirms = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.peggy.v1.MsgValsetConfirm, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse} returns this\n */\nproto.injective.peggy.v1.QueryValsetConfirmsByNonceResponse.prototype.clearConfirmsList = function() {\n  return this.setConfirmsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastValsetRequestsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastValsetRequestsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastValsetRequestsRequest}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastValsetRequestsRequest;\n  return proto.injective.peggy.v1.QueryLastValsetRequestsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastValsetRequestsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastValsetRequestsRequest}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastValsetRequestsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastValsetRequestsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastValsetRequestsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastValsetRequestsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valsetsList: jspb.Message.toObjectList(msg.getValsetsList(),\n    injective_peggy_v1_types_pb.Valset.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastValsetRequestsResponse}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastValsetRequestsResponse;\n  return proto.injective.peggy.v1.QueryLastValsetRequestsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastValsetRequestsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastValsetRequestsResponse}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_types_pb.Valset;\n      reader.readMessage(value,injective_peggy_v1_types_pb.Valset.deserializeBinaryFromReader);\n      msg.addValsets(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastValsetRequestsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastValsetRequestsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValsetsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_peggy_v1_types_pb.Valset.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Valset valsets = 1;\n * @return {!Array<!proto.injective.peggy.v1.Valset>}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.prototype.getValsetsList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.Valset>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_types_pb.Valset, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.Valset>} value\n * @return {!proto.injective.peggy.v1.QueryLastValsetRequestsResponse} returns this\n*/\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.prototype.setValsetsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.Valset=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.Valset}\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.prototype.addValsets = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.peggy.v1.Valset, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryLastValsetRequestsResponse} returns this\n */\nproto.injective.peggy.v1.QueryLastValsetRequestsResponse.prototype.clearValsetsList = function() {\n  return this.setValsetsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest;\n  return proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest} returns this\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrRequest.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valsetsList: jspb.Message.toObjectList(msg.getValsetsList(),\n    injective_peggy_v1_types_pb.Valset.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse;\n  return proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_types_pb.Valset;\n      reader.readMessage(value,injective_peggy_v1_types_pb.Valset.deserializeBinaryFromReader);\n      msg.addValsets(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValsetsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_peggy_v1_types_pb.Valset.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Valset valsets = 1;\n * @return {!Array<!proto.injective.peggy.v1.Valset>}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.prototype.getValsetsList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.Valset>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_types_pb.Valset, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.Valset>} value\n * @return {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse} returns this\n*/\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.prototype.setValsetsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.Valset=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.Valset}\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.prototype.addValsets = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.peggy.v1.Valset, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse} returns this\n */\nproto.injective.peggy.v1.QueryLastPendingValsetRequestByAddrResponse.prototype.clearValsetsList = function() {\n  return this.setValsetsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryBatchFeeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryBatchFeeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryBatchFeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchFeeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryBatchFeeRequest}\n */\nproto.injective.peggy.v1.QueryBatchFeeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryBatchFeeRequest;\n  return proto.injective.peggy.v1.QueryBatchFeeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryBatchFeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryBatchFeeRequest}\n */\nproto.injective.peggy.v1.QueryBatchFeeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryBatchFeeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryBatchFeeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryBatchFeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchFeeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryBatchFeeResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryBatchFeeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    batchfeesList: jspb.Message.toObjectList(msg.getBatchfeesList(),\n    injective_peggy_v1_pool_pb.BatchFees.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryBatchFeeResponse}\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryBatchFeeResponse;\n  return proto.injective.peggy.v1.QueryBatchFeeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryBatchFeeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryBatchFeeResponse}\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_pool_pb.BatchFees;\n      reader.readMessage(value,injective_peggy_v1_pool_pb.BatchFees.deserializeBinaryFromReader);\n      msg.addBatchfees(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryBatchFeeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryBatchFeeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBatchfeesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_peggy_v1_pool_pb.BatchFees.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated BatchFees batchFees = 1;\n * @return {!Array<!proto.injective.peggy.v1.BatchFees>}\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.prototype.getBatchfeesList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.BatchFees>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_pool_pb.BatchFees, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.BatchFees>} value\n * @return {!proto.injective.peggy.v1.QueryBatchFeeResponse} returns this\n*/\nproto.injective.peggy.v1.QueryBatchFeeResponse.prototype.setBatchfeesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.BatchFees=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.BatchFees}\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.prototype.addBatchfees = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.peggy.v1.BatchFees, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryBatchFeeResponse} returns this\n */\nproto.injective.peggy.v1.QueryBatchFeeResponse.prototype.clearBatchfeesList = function() {\n  return this.setBatchfeesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest;\n  return proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest} returns this\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrRequest.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    batch: (f = msg.getBatch()) && injective_peggy_v1_batch_pb.OutgoingTxBatch.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse;\n  return proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_batch_pb.OutgoingTxBatch;\n      reader.readMessage(value,injective_peggy_v1_batch_pb.OutgoingTxBatch.deserializeBinaryFromReader);\n      msg.setBatch(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBatch();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_batch_pb.OutgoingTxBatch.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional OutgoingTxBatch batch = 1;\n * @return {?proto.injective.peggy.v1.OutgoingTxBatch}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.prototype.getBatch = function() {\n  return /** @type{?proto.injective.peggy.v1.OutgoingTxBatch} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_batch_pb.OutgoingTxBatch, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.OutgoingTxBatch|undefined} value\n * @return {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse} returns this\n*/\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.prototype.setBatch = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse} returns this\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.prototype.clearBatch = function() {\n  return this.setBatch(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryLastPendingBatchRequestByAddrResponse.prototype.hasBatch = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest;\n  return proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryOutgoingTxBatchesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    batchesList: jspb.Message.toObjectList(msg.getBatchesList(),\n    injective_peggy_v1_batch_pb.OutgoingTxBatch.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse;\n  return proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_batch_pb.OutgoingTxBatch;\n      reader.readMessage(value,injective_peggy_v1_batch_pb.OutgoingTxBatch.deserializeBinaryFromReader);\n      msg.addBatches(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBatchesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_peggy_v1_batch_pb.OutgoingTxBatch.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated OutgoingTxBatch batches = 1;\n * @return {!Array<!proto.injective.peggy.v1.OutgoingTxBatch>}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.prototype.getBatchesList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.OutgoingTxBatch>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_batch_pb.OutgoingTxBatch, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.OutgoingTxBatch>} value\n * @return {!proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse} returns this\n*/\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.prototype.setBatchesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.OutgoingTxBatch=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.OutgoingTxBatch}\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.prototype.addBatches = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.peggy.v1.OutgoingTxBatch, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryOutgoingTxBatchesResponse} returns this\n */\nproto.injective.peggy.v1.QueryOutgoingTxBatchesResponse.prototype.clearBatchesList = function() {\n  return this.setBatchesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryBatchRequestByNonceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryBatchRequestByNonceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    contractAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceRequest}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryBatchRequestByNonceRequest;\n  return proto.injective.peggy.v1.QueryBatchRequestByNonceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryBatchRequestByNonceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceRequest}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContractAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryBatchRequestByNonceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryBatchRequestByNonceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceRequest} returns this\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.prototype.setNonce = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string contract_address = 2;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.prototype.getContractAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceRequest} returns this\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceRequest.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryBatchRequestByNonceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryBatchRequestByNonceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    batch: (f = msg.getBatch()) && injective_peggy_v1_batch_pb.OutgoingTxBatch.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceResponse}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryBatchRequestByNonceResponse;\n  return proto.injective.peggy.v1.QueryBatchRequestByNonceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryBatchRequestByNonceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceResponse}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_batch_pb.OutgoingTxBatch;\n      reader.readMessage(value,injective_peggy_v1_batch_pb.OutgoingTxBatch.deserializeBinaryFromReader);\n      msg.setBatch(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryBatchRequestByNonceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryBatchRequestByNonceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBatch();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_batch_pb.OutgoingTxBatch.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional OutgoingTxBatch batch = 1;\n * @return {?proto.injective.peggy.v1.OutgoingTxBatch}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.prototype.getBatch = function() {\n  return /** @type{?proto.injective.peggy.v1.OutgoingTxBatch} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_batch_pb.OutgoingTxBatch, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.OutgoingTxBatch|undefined} value\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceResponse} returns this\n*/\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.prototype.setBatch = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryBatchRequestByNonceResponse} returns this\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.prototype.clearBatch = function() {\n  return this.setBatch(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryBatchRequestByNonceResponse.prototype.hasBatch = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryBatchConfirmsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryBatchConfirmsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    contractAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsRequest}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryBatchConfirmsRequest;\n  return proto.injective.peggy.v1.QueryBatchConfirmsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryBatchConfirmsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsRequest}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContractAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryBatchConfirmsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryBatchConfirmsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getContractAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 nonce = 1;\n * @return {number}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsRequest} returns this\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.prototype.setNonce = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string contract_address = 2;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.prototype.getContractAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsRequest} returns this\n */\nproto.injective.peggy.v1.QueryBatchConfirmsRequest.prototype.setContractAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryBatchConfirmsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryBatchConfirmsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    confirmsList: jspb.Message.toObjectList(msg.getConfirmsList(),\n    injective_peggy_v1_msgs_pb.MsgConfirmBatch.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsResponse}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryBatchConfirmsResponse;\n  return proto.injective.peggy.v1.QueryBatchConfirmsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryBatchConfirmsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsResponse}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_msgs_pb.MsgConfirmBatch;\n      reader.readMessage(value,injective_peggy_v1_msgs_pb.MsgConfirmBatch.deserializeBinaryFromReader);\n      msg.addConfirms(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryBatchConfirmsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryBatchConfirmsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfirmsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_peggy_v1_msgs_pb.MsgConfirmBatch.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated MsgConfirmBatch confirms = 1;\n * @return {!Array<!proto.injective.peggy.v1.MsgConfirmBatch>}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.prototype.getConfirmsList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.MsgConfirmBatch>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_msgs_pb.MsgConfirmBatch, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.MsgConfirmBatch>} value\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsResponse} returns this\n*/\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.prototype.setConfirmsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.MsgConfirmBatch=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.MsgConfirmBatch}\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.prototype.addConfirms = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.peggy.v1.MsgConfirmBatch, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryBatchConfirmsResponse} returns this\n */\nproto.injective.peggy.v1.QueryBatchConfirmsResponse.prototype.clearConfirmsList = function() {\n  return this.setConfirmsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastEventByAddrRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastEventByAddrRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastEventByAddrRequest}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastEventByAddrRequest;\n  return proto.injective.peggy.v1.QueryLastEventByAddrRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastEventByAddrRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastEventByAddrRequest}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastEventByAddrRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastEventByAddrRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryLastEventByAddrRequest} returns this\n */\nproto.injective.peggy.v1.QueryLastEventByAddrRequest.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryLastEventByAddrResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryLastEventByAddrResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lastClaimEvent: (f = msg.getLastClaimEvent()) && injective_peggy_v1_types_pb.LastClaimEvent.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryLastEventByAddrResponse}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryLastEventByAddrResponse;\n  return proto.injective.peggy.v1.QueryLastEventByAddrResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryLastEventByAddrResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryLastEventByAddrResponse}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_types_pb.LastClaimEvent;\n      reader.readMessage(value,injective_peggy_v1_types_pb.LastClaimEvent.deserializeBinaryFromReader);\n      msg.setLastClaimEvent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryLastEventByAddrResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryLastEventByAddrResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastClaimEvent();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_types_pb.LastClaimEvent.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional LastClaimEvent last_claim_event = 1;\n * @return {?proto.injective.peggy.v1.LastClaimEvent}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.prototype.getLastClaimEvent = function() {\n  return /** @type{?proto.injective.peggy.v1.LastClaimEvent} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_types_pb.LastClaimEvent, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.LastClaimEvent|undefined} value\n * @return {!proto.injective.peggy.v1.QueryLastEventByAddrResponse} returns this\n*/\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.prototype.setLastClaimEvent = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryLastEventByAddrResponse} returns this\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.prototype.clearLastClaimEvent = function() {\n  return this.setLastClaimEvent(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryLastEventByAddrResponse.prototype.hasLastClaimEvent = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryERC20ToDenomRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryERC20ToDenomRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    erc20: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryERC20ToDenomRequest}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryERC20ToDenomRequest;\n  return proto.injective.peggy.v1.QueryERC20ToDenomRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryERC20ToDenomRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryERC20ToDenomRequest}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setErc20(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryERC20ToDenomRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryERC20ToDenomRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getErc20();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string erc20 = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.prototype.getErc20 = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryERC20ToDenomRequest} returns this\n */\nproto.injective.peggy.v1.QueryERC20ToDenomRequest.prototype.setErc20 = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryERC20ToDenomResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryERC20ToDenomResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    denom: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    cosmosOriginated: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryERC20ToDenomResponse}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryERC20ToDenomResponse;\n  return proto.injective.peggy.v1.QueryERC20ToDenomResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryERC20ToDenomResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryERC20ToDenomResponse}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDenom(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCosmosOriginated(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryERC20ToDenomResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryERC20ToDenomResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDenom();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCosmosOriginated();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string denom = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.prototype.getDenom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryERC20ToDenomResponse} returns this\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.prototype.setDenom = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool cosmos_originated = 2;\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.prototype.getCosmosOriginated = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.injective.peggy.v1.QueryERC20ToDenomResponse} returns this\n */\nproto.injective.peggy.v1.QueryERC20ToDenomResponse.prototype.setCosmosOriginated = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDenomToERC20Request.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDenomToERC20Request} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    denom: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDenomToERC20Request}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDenomToERC20Request;\n  return proto.injective.peggy.v1.QueryDenomToERC20Request.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDenomToERC20Request} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDenomToERC20Request}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDenom(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDenomToERC20Request.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDenomToERC20Request} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDenom();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string denom = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.prototype.getDenom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDenomToERC20Request} returns this\n */\nproto.injective.peggy.v1.QueryDenomToERC20Request.prototype.setDenom = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDenomToERC20Response.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDenomToERC20Response} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    erc20: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    cosmosOriginated: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDenomToERC20Response}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDenomToERC20Response;\n  return proto.injective.peggy.v1.QueryDenomToERC20Response.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDenomToERC20Response} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDenomToERC20Response}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setErc20(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCosmosOriginated(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDenomToERC20Response.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDenomToERC20Response} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getErc20();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCosmosOriginated();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string erc20 = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.prototype.getErc20 = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDenomToERC20Response} returns this\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.prototype.setErc20 = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool cosmos_originated = 2;\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.prototype.getCosmosOriginated = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.injective.peggy.v1.QueryDenomToERC20Response} returns this\n */\nproto.injective.peggy.v1.QueryDenomToERC20Response.prototype.setCosmosOriginated = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    validatorAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress;\n  return proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValidatorAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValidatorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string validator_address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.prototype.getValidatorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddress.prototype.setValidatorAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ethAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    orchestratorAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse;\n  return proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEthAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOrchestratorAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEthAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOrchestratorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string eth_address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.prototype.getEthAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.prototype.setEthAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string orchestrator_address = 2;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.prototype.getOrchestratorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByValidatorAddressResponse.prototype.setOrchestratorAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDelegateKeysByEthAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ethAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddress}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDelegateKeysByEthAddress;\n  return proto.injective.peggy.v1.QueryDelegateKeysByEthAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddress}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEthAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDelegateKeysByEthAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEthAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string eth_address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.prototype.getEthAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddress} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddress.prototype.setEthAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    validatorAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    orchestratorAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse;\n  return proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValidatorAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOrchestratorAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValidatorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOrchestratorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string validator_address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.prototype.getValidatorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.prototype.setValidatorAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string orchestrator_address = 2;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.prototype.getOrchestratorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByEthAddressResponse.prototype.setOrchestratorAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    orchestratorAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress;\n  return proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOrchestratorAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOrchestratorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string orchestrator_address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.prototype.getOrchestratorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddress.prototype.setOrchestratorAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    validatorAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    ethAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse;\n  return proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValidatorAddress(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEthAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValidatorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getEthAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string validator_address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.prototype.getValidatorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.prototype.setValidatorAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string eth_address = 2;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.prototype.getEthAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse} returns this\n */\nproto.injective.peggy.v1.QueryDelegateKeysByOrchestratorAddressResponse.prototype.setEthAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryPendingSendToEth.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryPendingSendToEth} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    senderAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEth}\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryPendingSendToEth;\n  return proto.injective.peggy.v1.QueryPendingSendToEth.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryPendingSendToEth} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEth}\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSenderAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryPendingSendToEth.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryPendingSendToEth} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSenderAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string sender_address = 1;\n * @return {string}\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.prototype.getSenderAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEth} returns this\n */\nproto.injective.peggy.v1.QueryPendingSendToEth.prototype.setSenderAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryPendingSendToEthResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryPendingSendToEthResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transfersInBatchesList: jspb.Message.toObjectList(msg.getTransfersInBatchesList(),\n    injective_peggy_v1_batch_pb.OutgoingTransferTx.toObject, includeInstance),\n    unbatchedTransfersList: jspb.Message.toObjectList(msg.getUnbatchedTransfersList(),\n    injective_peggy_v1_batch_pb.OutgoingTransferTx.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEthResponse}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryPendingSendToEthResponse;\n  return proto.injective.peggy.v1.QueryPendingSendToEthResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryPendingSendToEthResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEthResponse}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_batch_pb.OutgoingTransferTx;\n      reader.readMessage(value,injective_peggy_v1_batch_pb.OutgoingTransferTx.deserializeBinaryFromReader);\n      msg.addTransfersInBatches(value);\n      break;\n    case 2:\n      var value = new injective_peggy_v1_batch_pb.OutgoingTransferTx;\n      reader.readMessage(value,injective_peggy_v1_batch_pb.OutgoingTransferTx.deserializeBinaryFromReader);\n      msg.addUnbatchedTransfers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryPendingSendToEthResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryPendingSendToEthResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransfersInBatchesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      injective_peggy_v1_batch_pb.OutgoingTransferTx.serializeBinaryToWriter\n    );\n  }\n  f = message.getUnbatchedTransfersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      injective_peggy_v1_batch_pb.OutgoingTransferTx.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated OutgoingTransferTx transfers_in_batches = 1;\n * @return {!Array<!proto.injective.peggy.v1.OutgoingTransferTx>}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.getTransfersInBatchesList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.OutgoingTransferTx>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_batch_pb.OutgoingTransferTx, 1));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.OutgoingTransferTx>} value\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEthResponse} returns this\n*/\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.setTransfersInBatchesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.OutgoingTransferTx=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.OutgoingTransferTx}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.addTransfersInBatches = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective.peggy.v1.OutgoingTransferTx, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEthResponse} returns this\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.clearTransfersInBatchesList = function() {\n  return this.setTransfersInBatchesList([]);\n};\n\n\n/**\n * repeated OutgoingTransferTx unbatched_transfers = 2;\n * @return {!Array<!proto.injective.peggy.v1.OutgoingTransferTx>}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.getUnbatchedTransfersList = function() {\n  return /** @type{!Array<!proto.injective.peggy.v1.OutgoingTransferTx>} */ (\n    jspb.Message.getRepeatedWrapperField(this, injective_peggy_v1_batch_pb.OutgoingTransferTx, 2));\n};\n\n\n/**\n * @param {!Array<!proto.injective.peggy.v1.OutgoingTransferTx>} value\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEthResponse} returns this\n*/\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.setUnbatchedTransfersList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.injective.peggy.v1.OutgoingTransferTx=} opt_value\n * @param {number=} opt_index\n * @return {!proto.injective.peggy.v1.OutgoingTransferTx}\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.addUnbatchedTransfers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective.peggy.v1.OutgoingTransferTx, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.injective.peggy.v1.QueryPendingSendToEthResponse} returns this\n */\nproto.injective.peggy.v1.QueryPendingSendToEthResponse.prototype.clearUnbatchedTransfersList = function() {\n  return this.setUnbatchedTransfersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryModuleStateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryModuleStateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryModuleStateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryModuleStateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryModuleStateRequest}\n */\nproto.injective.peggy.v1.QueryModuleStateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryModuleStateRequest;\n  return proto.injective.peggy.v1.QueryModuleStateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryModuleStateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryModuleStateRequest}\n */\nproto.injective.peggy.v1.QueryModuleStateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryModuleStateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryModuleStateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryModuleStateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryModuleStateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.injective.peggy.v1.QueryModuleStateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.injective.peggy.v1.QueryModuleStateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    state: (f = msg.getState()) && injective_peggy_v1_genesis_pb.GenesisState.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.injective.peggy.v1.QueryModuleStateResponse}\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.injective.peggy.v1.QueryModuleStateResponse;\n  return proto.injective.peggy.v1.QueryModuleStateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.injective.peggy.v1.QueryModuleStateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.injective.peggy.v1.QueryModuleStateResponse}\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new injective_peggy_v1_genesis_pb.GenesisState;\n      reader.readMessage(value,injective_peggy_v1_genesis_pb.GenesisState.deserializeBinaryFromReader);\n      msg.setState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.injective.peggy.v1.QueryModuleStateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.injective.peggy.v1.QueryModuleStateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getState();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      injective_peggy_v1_genesis_pb.GenesisState.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional GenesisState state = 1;\n * @return {?proto.injective.peggy.v1.GenesisState}\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.prototype.getState = function() {\n  return /** @type{?proto.injective.peggy.v1.GenesisState} */ (\n    jspb.Message.getWrapperField(this, injective_peggy_v1_genesis_pb.GenesisState, 1));\n};\n\n\n/**\n * @param {?proto.injective.peggy.v1.GenesisState|undefined} value\n * @return {!proto.injective.peggy.v1.QueryModuleStateResponse} returns this\n*/\nproto.injective.peggy.v1.QueryModuleStateResponse.prototype.setState = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.injective.peggy.v1.QueryModuleStateResponse} returns this\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.prototype.clearState = function() {\n  return this.setState(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.injective.peggy.v1.QueryModuleStateResponse.prototype.hasState = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\ngoog.object.extend(exports, proto.injective.peggy.v1);\n"],"names":["jspb","goog","global","this","window","self","Function","call","injective_peggy_v1_genesis_pb","object","extend","proto","injective_peggy_v1_types_pb","injective_peggy_v1_msgs_pb","injective_peggy_v1_pool_pb","injective_peggy_v1_batch_pb","google_api_annotations_pb","gogoproto_gogo_pb","exportSymbol","injective","peggy","v1","QueryParamsRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","QueryParamsResponse","QueryCurrentValsetRequest","QueryCurrentValsetResponse","QueryValsetRequestRequest","QueryValsetRequestResponse","QueryValsetConfirmRequest","QueryValsetConfirmResponse","QueryValsetConfirmsByNonceRequest","QueryValsetConfirmsByNonceResponse","repeatedFields_","QueryLastValsetRequestsRequest","QueryLastValsetRequestsResponse","QueryLastPendingValsetRequestByAddrRequest","QueryLastPendingValsetRequestByAddrResponse","QueryBatchFeeRequest","QueryBatchFeeResponse","QueryLastPendingBatchRequestByAddrRequest","QueryLastPendingBatchRequestByAddrResponse","QueryOutgoingTxBatchesRequest","QueryOutgoingTxBatchesResponse","QueryBatchRequestByNonceRequest","QueryBatchRequestByNonceResponse","QueryBatchConfirmsRequest","QueryBatchConfirmsResponse","QueryLastEventByAddrRequest","QueryLastEventByAddrResponse","QueryERC20ToDenomRequest","QueryERC20ToDenomResponse","QueryDenomToERC20Request","QueryDenomToERC20Response","QueryDelegateKeysByValidatorAddress","QueryDelegateKeysByValidatorAddressResponse","QueryDelegateKeysByEthAddress","QueryDelegateKeysByEthAddressResponse","QueryDelegateKeysByOrchestratorAddress","QueryDelegateKeysByOrchestratorAddressResponse","QueryPendingSendToEth","QueryPendingSendToEthResponse","QueryModuleStateRequest","QueryModuleStateResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","params","getParams","Params","value","readMessage","setParams","writeMessage","getWrapperField","setWrapperField","clearParams","undefined","hasParams","getField","valset","getValset","Valset","setValset","clearValset","hasValset","nonce","getFieldWithDefault","readUint64","setNonce","getNonce","writeUint64","setProto3IntField","address","readString","setAddress","getAddress","length","writeString","setProto3StringField","confirm","getConfirm","MsgValsetConfirm","setConfirm","clearConfirm","hasConfirm","confirmsList","toObjectList","getConfirmsList","addConfirms","writeRepeatedMessage","getRepeatedWrapperField","setConfirmsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearConfirmsList","valsetsList","getValsetsList","addValsets","setValsetsList","clearValsetsList","batchfeesList","getBatchfeesList","BatchFees","addBatchfees","setBatchfeesList","clearBatchfeesList","batch","getBatch","OutgoingTxBatch","setBatch","clearBatch","hasBatch","batchesList","getBatchesList","addBatches","setBatchesList","clearBatchesList","contractAddress","setContractAddress","getContractAddress","MsgConfirmBatch","lastClaimEvent","getLastClaimEvent","LastClaimEvent","setLastClaimEvent","clearLastClaimEvent","hasLastClaimEvent","erc20","setErc20","getErc20","denom","cosmosOriginated","getBooleanFieldWithDefault","setDenom","readBool","setCosmosOriginated","getDenom","getCosmosOriginated","writeBool","setProto3BooleanField","validatorAddress","setValidatorAddress","getValidatorAddress","ethAddress","orchestratorAddress","setEthAddress","setOrchestratorAddress","getEthAddress","getOrchestratorAddress","senderAddress","setSenderAddress","getSenderAddress","transfersInBatchesList","getTransfersInBatchesList","OutgoingTransferTx","unbatchedTransfersList","getUnbatchedTransfersList","addTransfersInBatches","addUnbatchedTransfers","setTransfersInBatchesList","clearTransfersInBatchesList","setUnbatchedTransfersList","clearUnbatchedTransfersList","state","getState","GenesisState","setState","clearState","hasState","exports"],"sourceRoot":""}