{"version":3,"file":"7bc69d0f-22c6e18333e987b6ae90.js","mappings":"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","sources":["webpack://wormhole-usdc-demo/./node_modules/@injectivelabs/chain-api/tendermint/abci/types_pb.js"],"sourcesContent":["// source: tendermint/abci/types.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar tendermint_crypto_proof_pb = require('../../tendermint/crypto/proof_pb.js');\ngoog.object.extend(proto, tendermint_crypto_proof_pb);\nvar tendermint_types_types_pb = require('../../tendermint/types/types_pb.js');\ngoog.object.extend(proto, tendermint_types_types_pb);\nvar tendermint_crypto_keys_pb = require('../../tendermint/crypto/keys_pb.js');\ngoog.object.extend(proto, tendermint_crypto_keys_pb);\nvar tendermint_types_params_pb = require('../../tendermint/types/params_pb.js');\ngoog.object.extend(proto, tendermint_types_params_pb);\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\ngoog.exportSymbol('proto.tendermint.abci.BlockParams', null, global);\ngoog.exportSymbol('proto.tendermint.abci.CheckTxType', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ConsensusParams', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Event', null, global);\ngoog.exportSymbol('proto.tendermint.abci.EventAttribute', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Evidence', null, global);\ngoog.exportSymbol('proto.tendermint.abci.EvidenceType', null, global);\ngoog.exportSymbol('proto.tendermint.abci.LastCommitInfo', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Request', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Request.ValueCase', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestApplySnapshotChunk', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestBeginBlock', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestCheckTx', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestCommit', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestDeliverTx', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestEcho', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestEndBlock', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestFlush', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestInfo', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestInitChain', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestListSnapshots', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestLoadSnapshotChunk', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestOfferSnapshot', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestQuery', null, global);\ngoog.exportSymbol('proto.tendermint.abci.RequestSetOption', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Response', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Response.ValueCase', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseApplySnapshotChunk', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseApplySnapshotChunk.Result', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseBeginBlock', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseCheckTx', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseCommit', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseDeliverTx', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseEcho', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseEndBlock', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseException', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseFlush', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseInfo', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseInitChain', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseListSnapshots', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseLoadSnapshotChunk', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseOfferSnapshot', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseOfferSnapshot.Result', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseQuery', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ResponseSetOption', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Snapshot', null, global);\ngoog.exportSymbol('proto.tendermint.abci.TxResult', null, global);\ngoog.exportSymbol('proto.tendermint.abci.Validator', null, global);\ngoog.exportSymbol('proto.tendermint.abci.ValidatorUpdate', null, global);\ngoog.exportSymbol('proto.tendermint.abci.VoteInfo', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.Request = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tendermint.abci.Request.oneofGroups_);\n};\ngoog.inherits(proto.tendermint.abci.Request, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.Request.displayName = 'proto.tendermint.abci.Request';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestEcho = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestEcho, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestEcho.displayName = 'proto.tendermint.abci.RequestEcho';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestFlush = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestFlush, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestFlush.displayName = 'proto.tendermint.abci.RequestFlush';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestInfo.displayName = 'proto.tendermint.abci.RequestInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestSetOption = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestSetOption, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestSetOption.displayName = 'proto.tendermint.abci.RequestSetOption';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestInitChain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.RequestInitChain.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestInitChain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestInitChain.displayName = 'proto.tendermint.abci.RequestInitChain';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestQuery = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestQuery, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestQuery.displayName = 'proto.tendermint.abci.RequestQuery';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestBeginBlock = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.RequestBeginBlock.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestBeginBlock, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestBeginBlock.displayName = 'proto.tendermint.abci.RequestBeginBlock';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestCheckTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestCheckTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestCheckTx.displayName = 'proto.tendermint.abci.RequestCheckTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestDeliverTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestDeliverTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestDeliverTx.displayName = 'proto.tendermint.abci.RequestDeliverTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestEndBlock = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestEndBlock, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestEndBlock.displayName = 'proto.tendermint.abci.RequestEndBlock';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestCommit = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestCommit, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestCommit.displayName = 'proto.tendermint.abci.RequestCommit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestListSnapshots = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestListSnapshots, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestListSnapshots.displayName = 'proto.tendermint.abci.RequestListSnapshots';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestOfferSnapshot = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestOfferSnapshot, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestOfferSnapshot.displayName = 'proto.tendermint.abci.RequestOfferSnapshot';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestLoadSnapshotChunk, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestLoadSnapshotChunk.displayName = 'proto.tendermint.abci.RequestLoadSnapshotChunk';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.RequestApplySnapshotChunk = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.RequestApplySnapshotChunk, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.RequestApplySnapshotChunk.displayName = 'proto.tendermint.abci.RequestApplySnapshotChunk';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.Response = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tendermint.abci.Response.oneofGroups_);\n};\ngoog.inherits(proto.tendermint.abci.Response, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.Response.displayName = 'proto.tendermint.abci.Response';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseException = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseException, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseException.displayName = 'proto.tendermint.abci.ResponseException';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseEcho = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseEcho, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseEcho.displayName = 'proto.tendermint.abci.ResponseEcho';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseFlush = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseFlush, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseFlush.displayName = 'proto.tendermint.abci.ResponseFlush';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseInfo.displayName = 'proto.tendermint.abci.ResponseInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseSetOption = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseSetOption, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseSetOption.displayName = 'proto.tendermint.abci.ResponseSetOption';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseInitChain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.ResponseInitChain.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseInitChain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseInitChain.displayName = 'proto.tendermint.abci.ResponseInitChain';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseQuery = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseQuery, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseQuery.displayName = 'proto.tendermint.abci.ResponseQuery';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseBeginBlock = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.ResponseBeginBlock.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseBeginBlock, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseBeginBlock.displayName = 'proto.tendermint.abci.ResponseBeginBlock';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseCheckTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.ResponseCheckTx.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseCheckTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseCheckTx.displayName = 'proto.tendermint.abci.ResponseCheckTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseDeliverTx = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.ResponseDeliverTx.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseDeliverTx, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseDeliverTx.displayName = 'proto.tendermint.abci.ResponseDeliverTx';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseEndBlock = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.ResponseEndBlock.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseEndBlock, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseEndBlock.displayName = 'proto.tendermint.abci.ResponseEndBlock';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseCommit = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseCommit, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseCommit.displayName = 'proto.tendermint.abci.ResponseCommit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseListSnapshots = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.ResponseListSnapshots.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseListSnapshots, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseListSnapshots.displayName = 'proto.tendermint.abci.ResponseListSnapshots';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseOfferSnapshot = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseOfferSnapshot, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseOfferSnapshot.displayName = 'proto.tendermint.abci.ResponseOfferSnapshot';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseLoadSnapshotChunk, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseLoadSnapshotChunk.displayName = 'proto.tendermint.abci.ResponseLoadSnapshotChunk';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.ResponseApplySnapshotChunk.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.ResponseApplySnapshotChunk, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ResponseApplySnapshotChunk.displayName = 'proto.tendermint.abci.ResponseApplySnapshotChunk';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ConsensusParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ConsensusParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ConsensusParams.displayName = 'proto.tendermint.abci.ConsensusParams';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.BlockParams = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.BlockParams, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.BlockParams.displayName = 'proto.tendermint.abci.BlockParams';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.LastCommitInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.LastCommitInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.LastCommitInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.LastCommitInfo.displayName = 'proto.tendermint.abci.LastCommitInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.Event = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.abci.Event.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.abci.Event, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.Event.displayName = 'proto.tendermint.abci.Event';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.EventAttribute = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.EventAttribute, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.EventAttribute.displayName = 'proto.tendermint.abci.EventAttribute';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.TxResult = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.TxResult, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.TxResult.displayName = 'proto.tendermint.abci.TxResult';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.Validator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.Validator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.Validator.displayName = 'proto.tendermint.abci.Validator';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.ValidatorUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.ValidatorUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.ValidatorUpdate.displayName = 'proto.tendermint.abci.ValidatorUpdate';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.VoteInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.VoteInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.VoteInfo.displayName = 'proto.tendermint.abci.VoteInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.Evidence = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.Evidence, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.Evidence.displayName = 'proto.tendermint.abci.Evidence';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.abci.Snapshot = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.abci.Snapshot, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.abci.Snapshot.displayName = 'proto.tendermint.abci.Snapshot';\n}\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.tendermint.abci.Request.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]];\n\n/**\n * @enum {number}\n */\nproto.tendermint.abci.Request.ValueCase = {\n  VALUE_NOT_SET: 0,\n  ECHO: 1,\n  FLUSH: 2,\n  INFO: 3,\n  SET_OPTION: 4,\n  INIT_CHAIN: 5,\n  QUERY: 6,\n  BEGIN_BLOCK: 7,\n  CHECK_TX: 8,\n  DELIVER_TX: 9,\n  END_BLOCK: 10,\n  COMMIT: 11,\n  LIST_SNAPSHOTS: 12,\n  OFFER_SNAPSHOT: 13,\n  LOAD_SNAPSHOT_CHUNK: 14,\n  APPLY_SNAPSHOT_CHUNK: 15\n};\n\n/**\n * @return {proto.tendermint.abci.Request.ValueCase}\n */\nproto.tendermint.abci.Request.prototype.getValueCase = function() {\n  return /** @type {proto.tendermint.abci.Request.ValueCase} */(jspb.Message.computeOneofCase(this, proto.tendermint.abci.Request.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.Request.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.Request.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.Request} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Request.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    echo: (f = msg.getEcho()) && proto.tendermint.abci.RequestEcho.toObject(includeInstance, f),\n    flush: (f = msg.getFlush()) && proto.tendermint.abci.RequestFlush.toObject(includeInstance, f),\n    info: (f = msg.getInfo()) && proto.tendermint.abci.RequestInfo.toObject(includeInstance, f),\n    setOption: (f = msg.getSetOption()) && proto.tendermint.abci.RequestSetOption.toObject(includeInstance, f),\n    initChain: (f = msg.getInitChain()) && proto.tendermint.abci.RequestInitChain.toObject(includeInstance, f),\n    query: (f = msg.getQuery()) && proto.tendermint.abci.RequestQuery.toObject(includeInstance, f),\n    beginBlock: (f = msg.getBeginBlock()) && proto.tendermint.abci.RequestBeginBlock.toObject(includeInstance, f),\n    checkTx: (f = msg.getCheckTx()) && proto.tendermint.abci.RequestCheckTx.toObject(includeInstance, f),\n    deliverTx: (f = msg.getDeliverTx()) && proto.tendermint.abci.RequestDeliverTx.toObject(includeInstance, f),\n    endBlock: (f = msg.getEndBlock()) && proto.tendermint.abci.RequestEndBlock.toObject(includeInstance, f),\n    commit: (f = msg.getCommit()) && proto.tendermint.abci.RequestCommit.toObject(includeInstance, f),\n    listSnapshots: (f = msg.getListSnapshots()) && proto.tendermint.abci.RequestListSnapshots.toObject(includeInstance, f),\n    offerSnapshot: (f = msg.getOfferSnapshot()) && proto.tendermint.abci.RequestOfferSnapshot.toObject(includeInstance, f),\n    loadSnapshotChunk: (f = msg.getLoadSnapshotChunk()) && proto.tendermint.abci.RequestLoadSnapshotChunk.toObject(includeInstance, f),\n    applySnapshotChunk: (f = msg.getApplySnapshotChunk()) && proto.tendermint.abci.RequestApplySnapshotChunk.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.Request}\n */\nproto.tendermint.abci.Request.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.Request;\n  return proto.tendermint.abci.Request.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.Request} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.Request}\n */\nproto.tendermint.abci.Request.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.RequestEcho;\n      reader.readMessage(value,proto.tendermint.abci.RequestEcho.deserializeBinaryFromReader);\n      msg.setEcho(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.abci.RequestFlush;\n      reader.readMessage(value,proto.tendermint.abci.RequestFlush.deserializeBinaryFromReader);\n      msg.setFlush(value);\n      break;\n    case 3:\n      var value = new proto.tendermint.abci.RequestInfo;\n      reader.readMessage(value,proto.tendermint.abci.RequestInfo.deserializeBinaryFromReader);\n      msg.setInfo(value);\n      break;\n    case 4:\n      var value = new proto.tendermint.abci.RequestSetOption;\n      reader.readMessage(value,proto.tendermint.abci.RequestSetOption.deserializeBinaryFromReader);\n      msg.setSetOption(value);\n      break;\n    case 5:\n      var value = new proto.tendermint.abci.RequestInitChain;\n      reader.readMessage(value,proto.tendermint.abci.RequestInitChain.deserializeBinaryFromReader);\n      msg.setInitChain(value);\n      break;\n    case 6:\n      var value = new proto.tendermint.abci.RequestQuery;\n      reader.readMessage(value,proto.tendermint.abci.RequestQuery.deserializeBinaryFromReader);\n      msg.setQuery(value);\n      break;\n    case 7:\n      var value = new proto.tendermint.abci.RequestBeginBlock;\n      reader.readMessage(value,proto.tendermint.abci.RequestBeginBlock.deserializeBinaryFromReader);\n      msg.setBeginBlock(value);\n      break;\n    case 8:\n      var value = new proto.tendermint.abci.RequestCheckTx;\n      reader.readMessage(value,proto.tendermint.abci.RequestCheckTx.deserializeBinaryFromReader);\n      msg.setCheckTx(value);\n      break;\n    case 9:\n      var value = new proto.tendermint.abci.RequestDeliverTx;\n      reader.readMessage(value,proto.tendermint.abci.RequestDeliverTx.deserializeBinaryFromReader);\n      msg.setDeliverTx(value);\n      break;\n    case 10:\n      var value = new proto.tendermint.abci.RequestEndBlock;\n      reader.readMessage(value,proto.tendermint.abci.RequestEndBlock.deserializeBinaryFromReader);\n      msg.setEndBlock(value);\n      break;\n    case 11:\n      var value = new proto.tendermint.abci.RequestCommit;\n      reader.readMessage(value,proto.tendermint.abci.RequestCommit.deserializeBinaryFromReader);\n      msg.setCommit(value);\n      break;\n    case 12:\n      var value = new proto.tendermint.abci.RequestListSnapshots;\n      reader.readMessage(value,proto.tendermint.abci.RequestListSnapshots.deserializeBinaryFromReader);\n      msg.setListSnapshots(value);\n      break;\n    case 13:\n      var value = new proto.tendermint.abci.RequestOfferSnapshot;\n      reader.readMessage(value,proto.tendermint.abci.RequestOfferSnapshot.deserializeBinaryFromReader);\n      msg.setOfferSnapshot(value);\n      break;\n    case 14:\n      var value = new proto.tendermint.abci.RequestLoadSnapshotChunk;\n      reader.readMessage(value,proto.tendermint.abci.RequestLoadSnapshotChunk.deserializeBinaryFromReader);\n      msg.setLoadSnapshotChunk(value);\n      break;\n    case 15:\n      var value = new proto.tendermint.abci.RequestApplySnapshotChunk;\n      reader.readMessage(value,proto.tendermint.abci.RequestApplySnapshotChunk.deserializeBinaryFromReader);\n      msg.setApplySnapshotChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Request.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.Request.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.Request} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Request.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEcho();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.abci.RequestEcho.serializeBinaryToWriter\n    );\n  }\n  f = message.getFlush();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tendermint.abci.RequestFlush.serializeBinaryToWriter\n    );\n  }\n  f = message.getInfo();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.tendermint.abci.RequestInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getSetOption();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.tendermint.abci.RequestSetOption.serializeBinaryToWriter\n    );\n  }\n  f = message.getInitChain();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.tendermint.abci.RequestInitChain.serializeBinaryToWriter\n    );\n  }\n  f = message.getQuery();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.tendermint.abci.RequestQuery.serializeBinaryToWriter\n    );\n  }\n  f = message.getBeginBlock();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.tendermint.abci.RequestBeginBlock.serializeBinaryToWriter\n    );\n  }\n  f = message.getCheckTx();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.tendermint.abci.RequestCheckTx.serializeBinaryToWriter\n    );\n  }\n  f = message.getDeliverTx();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.tendermint.abci.RequestDeliverTx.serializeBinaryToWriter\n    );\n  }\n  f = message.getEndBlock();\n  if (f != null) {\n    writer.writeMessage(\n      10,\n      f,\n      proto.tendermint.abci.RequestEndBlock.serializeBinaryToWriter\n    );\n  }\n  f = message.getCommit();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.tendermint.abci.RequestCommit.serializeBinaryToWriter\n    );\n  }\n  f = message.getListSnapshots();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.tendermint.abci.RequestListSnapshots.serializeBinaryToWriter\n    );\n  }\n  f = message.getOfferSnapshot();\n  if (f != null) {\n    writer.writeMessage(\n      13,\n      f,\n      proto.tendermint.abci.RequestOfferSnapshot.serializeBinaryToWriter\n    );\n  }\n  f = message.getLoadSnapshotChunk();\n  if (f != null) {\n    writer.writeMessage(\n      14,\n      f,\n      proto.tendermint.abci.RequestLoadSnapshotChunk.serializeBinaryToWriter\n    );\n  }\n  f = message.getApplySnapshotChunk();\n  if (f != null) {\n    writer.writeMessage(\n      15,\n      f,\n      proto.tendermint.abci.RequestApplySnapshotChunk.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional RequestEcho echo = 1;\n * @return {?proto.tendermint.abci.RequestEcho}\n */\nproto.tendermint.abci.Request.prototype.getEcho = function() {\n  return /** @type{?proto.tendermint.abci.RequestEcho} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestEcho, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestEcho|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setEcho = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearEcho = function() {\n  return this.setEcho(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasEcho = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional RequestFlush flush = 2;\n * @return {?proto.tendermint.abci.RequestFlush}\n */\nproto.tendermint.abci.Request.prototype.getFlush = function() {\n  return /** @type{?proto.tendermint.abci.RequestFlush} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestFlush, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestFlush|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setFlush = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearFlush = function() {\n  return this.setFlush(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasFlush = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional RequestInfo info = 3;\n * @return {?proto.tendermint.abci.RequestInfo}\n */\nproto.tendermint.abci.Request.prototype.getInfo = function() {\n  return /** @type{?proto.tendermint.abci.RequestInfo} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestInfo, 3));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestInfo|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setInfo = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearInfo = function() {\n  return this.setInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasInfo = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional RequestSetOption set_option = 4;\n * @return {?proto.tendermint.abci.RequestSetOption}\n */\nproto.tendermint.abci.Request.prototype.getSetOption = function() {\n  return /** @type{?proto.tendermint.abci.RequestSetOption} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestSetOption, 4));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestSetOption|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setSetOption = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearSetOption = function() {\n  return this.setSetOption(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasSetOption = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional RequestInitChain init_chain = 5;\n * @return {?proto.tendermint.abci.RequestInitChain}\n */\nproto.tendermint.abci.Request.prototype.getInitChain = function() {\n  return /** @type{?proto.tendermint.abci.RequestInitChain} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestInitChain, 5));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestInitChain|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setInitChain = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearInitChain = function() {\n  return this.setInitChain(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasInitChain = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional RequestQuery query = 6;\n * @return {?proto.tendermint.abci.RequestQuery}\n */\nproto.tendermint.abci.Request.prototype.getQuery = function() {\n  return /** @type{?proto.tendermint.abci.RequestQuery} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestQuery, 6));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestQuery|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setQuery = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 6, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearQuery = function() {\n  return this.setQuery(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasQuery = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional RequestBeginBlock begin_block = 7;\n * @return {?proto.tendermint.abci.RequestBeginBlock}\n */\nproto.tendermint.abci.Request.prototype.getBeginBlock = function() {\n  return /** @type{?proto.tendermint.abci.RequestBeginBlock} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestBeginBlock, 7));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestBeginBlock|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setBeginBlock = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearBeginBlock = function() {\n  return this.setBeginBlock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasBeginBlock = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional RequestCheckTx check_tx = 8;\n * @return {?proto.tendermint.abci.RequestCheckTx}\n */\nproto.tendermint.abci.Request.prototype.getCheckTx = function() {\n  return /** @type{?proto.tendermint.abci.RequestCheckTx} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestCheckTx, 8));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestCheckTx|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setCheckTx = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 8, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearCheckTx = function() {\n  return this.setCheckTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasCheckTx = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional RequestDeliverTx deliver_tx = 9;\n * @return {?proto.tendermint.abci.RequestDeliverTx}\n */\nproto.tendermint.abci.Request.prototype.getDeliverTx = function() {\n  return /** @type{?proto.tendermint.abci.RequestDeliverTx} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestDeliverTx, 9));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestDeliverTx|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setDeliverTx = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 9, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearDeliverTx = function() {\n  return this.setDeliverTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasDeliverTx = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional RequestEndBlock end_block = 10;\n * @return {?proto.tendermint.abci.RequestEndBlock}\n */\nproto.tendermint.abci.Request.prototype.getEndBlock = function() {\n  return /** @type{?proto.tendermint.abci.RequestEndBlock} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestEndBlock, 10));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestEndBlock|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setEndBlock = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 10, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearEndBlock = function() {\n  return this.setEndBlock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasEndBlock = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional RequestCommit commit = 11;\n * @return {?proto.tendermint.abci.RequestCommit}\n */\nproto.tendermint.abci.Request.prototype.getCommit = function() {\n  return /** @type{?proto.tendermint.abci.RequestCommit} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestCommit, 11));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestCommit|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setCommit = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 11, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearCommit = function() {\n  return this.setCommit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasCommit = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional RequestListSnapshots list_snapshots = 12;\n * @return {?proto.tendermint.abci.RequestListSnapshots}\n */\nproto.tendermint.abci.Request.prototype.getListSnapshots = function() {\n  return /** @type{?proto.tendermint.abci.RequestListSnapshots} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestListSnapshots, 12));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestListSnapshots|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setListSnapshots = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 12, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearListSnapshots = function() {\n  return this.setListSnapshots(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasListSnapshots = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional RequestOfferSnapshot offer_snapshot = 13;\n * @return {?proto.tendermint.abci.RequestOfferSnapshot}\n */\nproto.tendermint.abci.Request.prototype.getOfferSnapshot = function() {\n  return /** @type{?proto.tendermint.abci.RequestOfferSnapshot} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestOfferSnapshot, 13));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestOfferSnapshot|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setOfferSnapshot = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 13, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearOfferSnapshot = function() {\n  return this.setOfferSnapshot(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasOfferSnapshot = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional RequestLoadSnapshotChunk load_snapshot_chunk = 14;\n * @return {?proto.tendermint.abci.RequestLoadSnapshotChunk}\n */\nproto.tendermint.abci.Request.prototype.getLoadSnapshotChunk = function() {\n  return /** @type{?proto.tendermint.abci.RequestLoadSnapshotChunk} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestLoadSnapshotChunk, 14));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestLoadSnapshotChunk|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setLoadSnapshotChunk = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 14, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearLoadSnapshotChunk = function() {\n  return this.setLoadSnapshotChunk(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasLoadSnapshotChunk = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional RequestApplySnapshotChunk apply_snapshot_chunk = 15;\n * @return {?proto.tendermint.abci.RequestApplySnapshotChunk}\n */\nproto.tendermint.abci.Request.prototype.getApplySnapshotChunk = function() {\n  return /** @type{?proto.tendermint.abci.RequestApplySnapshotChunk} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.RequestApplySnapshotChunk, 15));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.RequestApplySnapshotChunk|undefined} value\n * @return {!proto.tendermint.abci.Request} returns this\n*/\nproto.tendermint.abci.Request.prototype.setApplySnapshotChunk = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 15, proto.tendermint.abci.Request.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Request} returns this\n */\nproto.tendermint.abci.Request.prototype.clearApplySnapshotChunk = function() {\n  return this.setApplySnapshotChunk(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Request.prototype.hasApplySnapshotChunk = function() {\n  return jspb.Message.getField(this, 15) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestEcho.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestEcho.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestEcho} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestEcho.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestEcho}\n */\nproto.tendermint.abci.RequestEcho.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestEcho;\n  return proto.tendermint.abci.RequestEcho.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestEcho} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestEcho}\n */\nproto.tendermint.abci.RequestEcho.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestEcho.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestEcho.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestEcho} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestEcho.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.tendermint.abci.RequestEcho.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.RequestEcho} returns this\n */\nproto.tendermint.abci.RequestEcho.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestFlush.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestFlush.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestFlush} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestFlush.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestFlush}\n */\nproto.tendermint.abci.RequestFlush.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestFlush;\n  return proto.tendermint.abci.RequestFlush.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestFlush} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestFlush}\n */\nproto.tendermint.abci.RequestFlush.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestFlush.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestFlush.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestFlush} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestFlush.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    version: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    blockVersion: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    p2pVersion: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestInfo}\n */\nproto.tendermint.abci.RequestInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestInfo;\n  return proto.tendermint.abci.RequestInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestInfo}\n */\nproto.tendermint.abci.RequestInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlockVersion(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setP2pVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBlockVersion();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getP2pVersion();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string version = 1;\n * @return {string}\n */\nproto.tendermint.abci.RequestInfo.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.RequestInfo} returns this\n */\nproto.tendermint.abci.RequestInfo.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 block_version = 2;\n * @return {number}\n */\nproto.tendermint.abci.RequestInfo.prototype.getBlockVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestInfo} returns this\n */\nproto.tendermint.abci.RequestInfo.prototype.setBlockVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 p2p_version = 3;\n * @return {number}\n */\nproto.tendermint.abci.RequestInfo.prototype.getP2pVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestInfo} returns this\n */\nproto.tendermint.abci.RequestInfo.prototype.setP2pVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestSetOption.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestSetOption.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestSetOption} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestSetOption.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    value: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestSetOption}\n */\nproto.tendermint.abci.RequestSetOption.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestSetOption;\n  return proto.tendermint.abci.RequestSetOption.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestSetOption} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestSetOption}\n */\nproto.tendermint.abci.RequestSetOption.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestSetOption.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestSetOption.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestSetOption} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestSetOption.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key = 1;\n * @return {string}\n */\nproto.tendermint.abci.RequestSetOption.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.RequestSetOption} returns this\n */\nproto.tendermint.abci.RequestSetOption.prototype.setKey = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string value = 2;\n * @return {string}\n */\nproto.tendermint.abci.RequestSetOption.prototype.getValue = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.RequestSetOption} returns this\n */\nproto.tendermint.abci.RequestSetOption.prototype.setValue = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.RequestInitChain.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestInitChain.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestInitChain.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestInitChain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestInitChain.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    chainId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    consensusParams: (f = msg.getConsensusParams()) && proto.tendermint.abci.ConsensusParams.toObject(includeInstance, f),\n    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),\n    proto.tendermint.abci.ValidatorUpdate.toObject, includeInstance),\n    appStateBytes: msg.getAppStateBytes_asB64(),\n    initialHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestInitChain}\n */\nproto.tendermint.abci.RequestInitChain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestInitChain;\n  return proto.tendermint.abci.RequestInitChain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestInitChain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestInitChain}\n */\nproto.tendermint.abci.RequestInitChain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setTime(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChainId(value);\n      break;\n    case 3:\n      var value = new proto.tendermint.abci.ConsensusParams;\n      reader.readMessage(value,proto.tendermint.abci.ConsensusParams.deserializeBinaryFromReader);\n      msg.setConsensusParams(value);\n      break;\n    case 4:\n      var value = new proto.tendermint.abci.ValidatorUpdate;\n      reader.readMessage(value,proto.tendermint.abci.ValidatorUpdate.deserializeBinaryFromReader);\n      msg.addValidators(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAppStateBytes(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setInitialHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestInitChain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestInitChain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestInitChain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestInitChain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTime();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getChainId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getConsensusParams();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.tendermint.abci.ConsensusParams.serializeBinaryToWriter\n    );\n  }\n  f = message.getValidatorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.tendermint.abci.ValidatorUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getAppStateBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getInitialHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional google.protobuf.Timestamp time = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getTime = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n*/\nproto.tendermint.abci.RequestInitChain.prototype.setTime = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n */\nproto.tendermint.abci.RequestInitChain.prototype.clearTime = function() {\n  return this.setTime(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.RequestInitChain.prototype.hasTime = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string chain_id = 2;\n * @return {string}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getChainId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n */\nproto.tendermint.abci.RequestInitChain.prototype.setChainId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional ConsensusParams consensus_params = 3;\n * @return {?proto.tendermint.abci.ConsensusParams}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getConsensusParams = function() {\n  return /** @type{?proto.tendermint.abci.ConsensusParams} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ConsensusParams, 3));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ConsensusParams|undefined} value\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n*/\nproto.tendermint.abci.RequestInitChain.prototype.setConsensusParams = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n */\nproto.tendermint.abci.RequestInitChain.prototype.clearConsensusParams = function() {\n  return this.setConsensusParams(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.RequestInitChain.prototype.hasConsensusParams = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated ValidatorUpdate validators = 4;\n * @return {!Array<!proto.tendermint.abci.ValidatorUpdate>}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getValidatorsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.ValidatorUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.ValidatorUpdate, 4));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.ValidatorUpdate>} value\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n*/\nproto.tendermint.abci.RequestInitChain.prototype.setValidatorsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.ValidatorUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.ValidatorUpdate}\n */\nproto.tendermint.abci.RequestInitChain.prototype.addValidators = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tendermint.abci.ValidatorUpdate, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n */\nproto.tendermint.abci.RequestInitChain.prototype.clearValidatorsList = function() {\n  return this.setValidatorsList([]);\n};\n\n\n/**\n * optional bytes app_state_bytes = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getAppStateBytes = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes app_state_bytes = 5;\n * This is a type-conversion wrapper around `getAppStateBytes()`\n * @return {string}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getAppStateBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAppStateBytes()));\n};\n\n\n/**\n * optional bytes app_state_bytes = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAppStateBytes()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getAppStateBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAppStateBytes()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n */\nproto.tendermint.abci.RequestInitChain.prototype.setAppStateBytes = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional int64 initial_height = 6;\n * @return {number}\n */\nproto.tendermint.abci.RequestInitChain.prototype.getInitialHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestInitChain} returns this\n */\nproto.tendermint.abci.RequestInitChain.prototype.setInitialHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestQuery.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestQuery.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestQuery} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestQuery.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    data: msg.getData_asB64(),\n    path: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    height: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    prove: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestQuery}\n */\nproto.tendermint.abci.RequestQuery.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestQuery;\n  return proto.tendermint.abci.RequestQuery.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestQuery} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestQuery}\n */\nproto.tendermint.abci.RequestQuery.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPath(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setHeight(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setProve(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestQuery.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestQuery.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestQuery} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestQuery.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getProve();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes data = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.RequestQuery.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes data = 1;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.tendermint.abci.RequestQuery.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestQuery.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.RequestQuery} returns this\n */\nproto.tendermint.abci.RequestQuery.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string path = 2;\n * @return {string}\n */\nproto.tendermint.abci.RequestQuery.prototype.getPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.RequestQuery} returns this\n */\nproto.tendermint.abci.RequestQuery.prototype.setPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 height = 3;\n * @return {number}\n */\nproto.tendermint.abci.RequestQuery.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestQuery} returns this\n */\nproto.tendermint.abci.RequestQuery.prototype.setHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bool prove = 4;\n * @return {boolean}\n */\nproto.tendermint.abci.RequestQuery.prototype.getProve = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.tendermint.abci.RequestQuery} returns this\n */\nproto.tendermint.abci.RequestQuery.prototype.setProve = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.RequestBeginBlock.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestBeginBlock.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestBeginBlock} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestBeginBlock.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    header: (f = msg.getHeader()) && tendermint_types_types_pb.Header.toObject(includeInstance, f),\n    lastCommitInfo: (f = msg.getLastCommitInfo()) && proto.tendermint.abci.LastCommitInfo.toObject(includeInstance, f),\n    byzantineValidatorsList: jspb.Message.toObjectList(msg.getByzantineValidatorsList(),\n    proto.tendermint.abci.Evidence.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestBeginBlock}\n */\nproto.tendermint.abci.RequestBeginBlock.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestBeginBlock;\n  return proto.tendermint.abci.RequestBeginBlock.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestBeginBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestBeginBlock}\n */\nproto.tendermint.abci.RequestBeginBlock.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = new tendermint_types_types_pb.Header;\n      reader.readMessage(value,tendermint_types_types_pb.Header.deserializeBinaryFromReader);\n      msg.setHeader(value);\n      break;\n    case 3:\n      var value = new proto.tendermint.abci.LastCommitInfo;\n      reader.readMessage(value,proto.tendermint.abci.LastCommitInfo.deserializeBinaryFromReader);\n      msg.setLastCommitInfo(value);\n      break;\n    case 4:\n      var value = new proto.tendermint.abci.Evidence;\n      reader.readMessage(value,proto.tendermint.abci.Evidence.deserializeBinaryFromReader);\n      msg.addByzantineValidators(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestBeginBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestBeginBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestBeginBlock.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getHeader();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      tendermint_types_types_pb.Header.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastCommitInfo();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.tendermint.abci.LastCommitInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getByzantineValidatorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.tendermint.abci.Evidence.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.RequestBeginBlock} returns this\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.setHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional tendermint.types.Header header = 2;\n * @return {?proto.tendermint.types.Header}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.getHeader = function() {\n  return /** @type{?proto.tendermint.types.Header} */ (\n    jspb.Message.getWrapperField(this, tendermint_types_types_pb.Header, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.types.Header|undefined} value\n * @return {!proto.tendermint.abci.RequestBeginBlock} returns this\n*/\nproto.tendermint.abci.RequestBeginBlock.prototype.setHeader = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.RequestBeginBlock} returns this\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.clearHeader = function() {\n  return this.setHeader(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.hasHeader = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional LastCommitInfo last_commit_info = 3;\n * @return {?proto.tendermint.abci.LastCommitInfo}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.getLastCommitInfo = function() {\n  return /** @type{?proto.tendermint.abci.LastCommitInfo} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.LastCommitInfo, 3));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.LastCommitInfo|undefined} value\n * @return {!proto.tendermint.abci.RequestBeginBlock} returns this\n*/\nproto.tendermint.abci.RequestBeginBlock.prototype.setLastCommitInfo = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.RequestBeginBlock} returns this\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.clearLastCommitInfo = function() {\n  return this.setLastCommitInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.hasLastCommitInfo = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated Evidence byzantine_validators = 4;\n * @return {!Array<!proto.tendermint.abci.Evidence>}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.getByzantineValidatorsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.Evidence>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.Evidence, 4));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.Evidence>} value\n * @return {!proto.tendermint.abci.RequestBeginBlock} returns this\n*/\nproto.tendermint.abci.RequestBeginBlock.prototype.setByzantineValidatorsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.Evidence=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.Evidence}\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.addByzantineValidators = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tendermint.abci.Evidence, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.RequestBeginBlock} returns this\n */\nproto.tendermint.abci.RequestBeginBlock.prototype.clearByzantineValidatorsList = function() {\n  return this.setByzantineValidatorsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestCheckTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestCheckTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestCheckTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestCheckTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    tx: msg.getTx_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestCheckTx}\n */\nproto.tendermint.abci.RequestCheckTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestCheckTx;\n  return proto.tendermint.abci.RequestCheckTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestCheckTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestCheckTx}\n */\nproto.tendermint.abci.RequestCheckTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTx(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.tendermint.abci.CheckTxType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestCheckTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestCheckTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestCheckTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestCheckTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTx_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes tx = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.RequestCheckTx.prototype.getTx = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes tx = 1;\n * This is a type-conversion wrapper around `getTx()`\n * @return {string}\n */\nproto.tendermint.abci.RequestCheckTx.prototype.getTx_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTx()));\n};\n\n\n/**\n * optional bytes tx = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTx()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestCheckTx.prototype.getTx_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTx()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.RequestCheckTx} returns this\n */\nproto.tendermint.abci.RequestCheckTx.prototype.setTx = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional CheckTxType type = 2;\n * @return {!proto.tendermint.abci.CheckTxType}\n */\nproto.tendermint.abci.RequestCheckTx.prototype.getType = function() {\n  return /** @type {!proto.tendermint.abci.CheckTxType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!proto.tendermint.abci.CheckTxType} value\n * @return {!proto.tendermint.abci.RequestCheckTx} returns this\n */\nproto.tendermint.abci.RequestCheckTx.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestDeliverTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestDeliverTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestDeliverTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestDeliverTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    tx: msg.getTx_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestDeliverTx}\n */\nproto.tendermint.abci.RequestDeliverTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestDeliverTx;\n  return proto.tendermint.abci.RequestDeliverTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestDeliverTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestDeliverTx}\n */\nproto.tendermint.abci.RequestDeliverTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTx(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestDeliverTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestDeliverTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestDeliverTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestDeliverTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTx_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes tx = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.RequestDeliverTx.prototype.getTx = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes tx = 1;\n * This is a type-conversion wrapper around `getTx()`\n * @return {string}\n */\nproto.tendermint.abci.RequestDeliverTx.prototype.getTx_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTx()));\n};\n\n\n/**\n * optional bytes tx = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTx()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestDeliverTx.prototype.getTx_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTx()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.RequestDeliverTx} returns this\n */\nproto.tendermint.abci.RequestDeliverTx.prototype.setTx = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestEndBlock.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestEndBlock.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestEndBlock} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestEndBlock.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    height: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestEndBlock}\n */\nproto.tendermint.abci.RequestEndBlock.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestEndBlock;\n  return proto.tendermint.abci.RequestEndBlock.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestEndBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestEndBlock}\n */\nproto.tendermint.abci.RequestEndBlock.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestEndBlock.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestEndBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestEndBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestEndBlock.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 height = 1;\n * @return {number}\n */\nproto.tendermint.abci.RequestEndBlock.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestEndBlock} returns this\n */\nproto.tendermint.abci.RequestEndBlock.prototype.setHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestCommit.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestCommit.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestCommit} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestCommit.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestCommit}\n */\nproto.tendermint.abci.RequestCommit.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestCommit;\n  return proto.tendermint.abci.RequestCommit.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestCommit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestCommit}\n */\nproto.tendermint.abci.RequestCommit.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestCommit.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestCommit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestCommit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestCommit.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestListSnapshots.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestListSnapshots.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestListSnapshots} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestListSnapshots.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestListSnapshots}\n */\nproto.tendermint.abci.RequestListSnapshots.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestListSnapshots;\n  return proto.tendermint.abci.RequestListSnapshots.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestListSnapshots} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestListSnapshots}\n */\nproto.tendermint.abci.RequestListSnapshots.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestListSnapshots.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestListSnapshots.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestListSnapshots} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestListSnapshots.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestOfferSnapshot.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestOfferSnapshot} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestOfferSnapshot.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    snapshot: (f = msg.getSnapshot()) && proto.tendermint.abci.Snapshot.toObject(includeInstance, f),\n    appHash: msg.getAppHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestOfferSnapshot}\n */\nproto.tendermint.abci.RequestOfferSnapshot.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestOfferSnapshot;\n  return proto.tendermint.abci.RequestOfferSnapshot.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestOfferSnapshot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestOfferSnapshot}\n */\nproto.tendermint.abci.RequestOfferSnapshot.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.Snapshot;\n      reader.readMessage(value,proto.tendermint.abci.Snapshot.deserializeBinaryFromReader);\n      msg.setSnapshot(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAppHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestOfferSnapshot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestOfferSnapshot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestOfferSnapshot.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSnapshot();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.abci.Snapshot.serializeBinaryToWriter\n    );\n  }\n  f = message.getAppHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Snapshot snapshot = 1;\n * @return {?proto.tendermint.abci.Snapshot}\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.getSnapshot = function() {\n  return /** @type{?proto.tendermint.abci.Snapshot} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.Snapshot, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.Snapshot|undefined} value\n * @return {!proto.tendermint.abci.RequestOfferSnapshot} returns this\n*/\nproto.tendermint.abci.RequestOfferSnapshot.prototype.setSnapshot = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.RequestOfferSnapshot} returns this\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.clearSnapshot = function() {\n  return this.setSnapshot(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.hasSnapshot = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes app_hash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.getAppHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes app_hash = 2;\n * This is a type-conversion wrapper around `getAppHash()`\n * @return {string}\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.getAppHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAppHash()));\n};\n\n\n/**\n * optional bytes app_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAppHash()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.getAppHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAppHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.RequestOfferSnapshot} returns this\n */\nproto.tendermint.abci.RequestOfferSnapshot.prototype.setAppHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestLoadSnapshotChunk.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestLoadSnapshotChunk} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    height: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    format: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    chunk: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestLoadSnapshotChunk}\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestLoadSnapshotChunk;\n  return proto.tendermint.abci.RequestLoadSnapshotChunk.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestLoadSnapshotChunk} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestLoadSnapshotChunk}\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHeight(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFormat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestLoadSnapshotChunk.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestLoadSnapshotChunk} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getFormat();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getChunk();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 height = 1;\n * @return {number}\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestLoadSnapshotChunk} returns this\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.setHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint32 format = 2;\n * @return {number}\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.getFormat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestLoadSnapshotChunk} returns this\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.setFormat = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint32 chunk = 3;\n * @return {number}\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.getChunk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestLoadSnapshotChunk} returns this\n */\nproto.tendermint.abci.RequestLoadSnapshotChunk.prototype.setChunk = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.RequestApplySnapshotChunk.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.RequestApplySnapshotChunk} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    index: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chunk: msg.getChunk_asB64(),\n    sender: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.RequestApplySnapshotChunk}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.RequestApplySnapshotChunk;\n  return proto.tendermint.abci.RequestApplySnapshotChunk.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.RequestApplySnapshotChunk} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.RequestApplySnapshotChunk}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndex(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChunk(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSender(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.RequestApplySnapshotChunk.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.RequestApplySnapshotChunk} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getChunk_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getSender();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 index = 1;\n * @return {number}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.getIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.RequestApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.setIndex = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes chunk = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.getChunk = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chunk = 2;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.getChunk_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChunk()));\n};\n\n\n/**\n * optional bytes chunk = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.getChunk_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChunk()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.RequestApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.setChunk = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional string sender = 3;\n * @return {string}\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.getSender = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.RequestApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.RequestApplySnapshotChunk.prototype.setSender = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.tendermint.abci.Response.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]];\n\n/**\n * @enum {number}\n */\nproto.tendermint.abci.Response.ValueCase = {\n  VALUE_NOT_SET: 0,\n  EXCEPTION: 1,\n  ECHO: 2,\n  FLUSH: 3,\n  INFO: 4,\n  SET_OPTION: 5,\n  INIT_CHAIN: 6,\n  QUERY: 7,\n  BEGIN_BLOCK: 8,\n  CHECK_TX: 9,\n  DELIVER_TX: 10,\n  END_BLOCK: 11,\n  COMMIT: 12,\n  LIST_SNAPSHOTS: 13,\n  OFFER_SNAPSHOT: 14,\n  LOAD_SNAPSHOT_CHUNK: 15,\n  APPLY_SNAPSHOT_CHUNK: 16\n};\n\n/**\n * @return {proto.tendermint.abci.Response.ValueCase}\n */\nproto.tendermint.abci.Response.prototype.getValueCase = function() {\n  return /** @type {proto.tendermint.abci.Response.ValueCase} */(jspb.Message.computeOneofCase(this, proto.tendermint.abci.Response.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.Response.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.Response.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.Response} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Response.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    exception: (f = msg.getException()) && proto.tendermint.abci.ResponseException.toObject(includeInstance, f),\n    echo: (f = msg.getEcho()) && proto.tendermint.abci.ResponseEcho.toObject(includeInstance, f),\n    flush: (f = msg.getFlush()) && proto.tendermint.abci.ResponseFlush.toObject(includeInstance, f),\n    info: (f = msg.getInfo()) && proto.tendermint.abci.ResponseInfo.toObject(includeInstance, f),\n    setOption: (f = msg.getSetOption()) && proto.tendermint.abci.ResponseSetOption.toObject(includeInstance, f),\n    initChain: (f = msg.getInitChain()) && proto.tendermint.abci.ResponseInitChain.toObject(includeInstance, f),\n    query: (f = msg.getQuery()) && proto.tendermint.abci.ResponseQuery.toObject(includeInstance, f),\n    beginBlock: (f = msg.getBeginBlock()) && proto.tendermint.abci.ResponseBeginBlock.toObject(includeInstance, f),\n    checkTx: (f = msg.getCheckTx()) && proto.tendermint.abci.ResponseCheckTx.toObject(includeInstance, f),\n    deliverTx: (f = msg.getDeliverTx()) && proto.tendermint.abci.ResponseDeliverTx.toObject(includeInstance, f),\n    endBlock: (f = msg.getEndBlock()) && proto.tendermint.abci.ResponseEndBlock.toObject(includeInstance, f),\n    commit: (f = msg.getCommit()) && proto.tendermint.abci.ResponseCommit.toObject(includeInstance, f),\n    listSnapshots: (f = msg.getListSnapshots()) && proto.tendermint.abci.ResponseListSnapshots.toObject(includeInstance, f),\n    offerSnapshot: (f = msg.getOfferSnapshot()) && proto.tendermint.abci.ResponseOfferSnapshot.toObject(includeInstance, f),\n    loadSnapshotChunk: (f = msg.getLoadSnapshotChunk()) && proto.tendermint.abci.ResponseLoadSnapshotChunk.toObject(includeInstance, f),\n    applySnapshotChunk: (f = msg.getApplySnapshotChunk()) && proto.tendermint.abci.ResponseApplySnapshotChunk.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.Response}\n */\nproto.tendermint.abci.Response.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.Response;\n  return proto.tendermint.abci.Response.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.Response} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.Response}\n */\nproto.tendermint.abci.Response.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.ResponseException;\n      reader.readMessage(value,proto.tendermint.abci.ResponseException.deserializeBinaryFromReader);\n      msg.setException(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.abci.ResponseEcho;\n      reader.readMessage(value,proto.tendermint.abci.ResponseEcho.deserializeBinaryFromReader);\n      msg.setEcho(value);\n      break;\n    case 3:\n      var value = new proto.tendermint.abci.ResponseFlush;\n      reader.readMessage(value,proto.tendermint.abci.ResponseFlush.deserializeBinaryFromReader);\n      msg.setFlush(value);\n      break;\n    case 4:\n      var value = new proto.tendermint.abci.ResponseInfo;\n      reader.readMessage(value,proto.tendermint.abci.ResponseInfo.deserializeBinaryFromReader);\n      msg.setInfo(value);\n      break;\n    case 5:\n      var value = new proto.tendermint.abci.ResponseSetOption;\n      reader.readMessage(value,proto.tendermint.abci.ResponseSetOption.deserializeBinaryFromReader);\n      msg.setSetOption(value);\n      break;\n    case 6:\n      var value = new proto.tendermint.abci.ResponseInitChain;\n      reader.readMessage(value,proto.tendermint.abci.ResponseInitChain.deserializeBinaryFromReader);\n      msg.setInitChain(value);\n      break;\n    case 7:\n      var value = new proto.tendermint.abci.ResponseQuery;\n      reader.readMessage(value,proto.tendermint.abci.ResponseQuery.deserializeBinaryFromReader);\n      msg.setQuery(value);\n      break;\n    case 8:\n      var value = new proto.tendermint.abci.ResponseBeginBlock;\n      reader.readMessage(value,proto.tendermint.abci.ResponseBeginBlock.deserializeBinaryFromReader);\n      msg.setBeginBlock(value);\n      break;\n    case 9:\n      var value = new proto.tendermint.abci.ResponseCheckTx;\n      reader.readMessage(value,proto.tendermint.abci.ResponseCheckTx.deserializeBinaryFromReader);\n      msg.setCheckTx(value);\n      break;\n    case 10:\n      var value = new proto.tendermint.abci.ResponseDeliverTx;\n      reader.readMessage(value,proto.tendermint.abci.ResponseDeliverTx.deserializeBinaryFromReader);\n      msg.setDeliverTx(value);\n      break;\n    case 11:\n      var value = new proto.tendermint.abci.ResponseEndBlock;\n      reader.readMessage(value,proto.tendermint.abci.ResponseEndBlock.deserializeBinaryFromReader);\n      msg.setEndBlock(value);\n      break;\n    case 12:\n      var value = new proto.tendermint.abci.ResponseCommit;\n      reader.readMessage(value,proto.tendermint.abci.ResponseCommit.deserializeBinaryFromReader);\n      msg.setCommit(value);\n      break;\n    case 13:\n      var value = new proto.tendermint.abci.ResponseListSnapshots;\n      reader.readMessage(value,proto.tendermint.abci.ResponseListSnapshots.deserializeBinaryFromReader);\n      msg.setListSnapshots(value);\n      break;\n    case 14:\n      var value = new proto.tendermint.abci.ResponseOfferSnapshot;\n      reader.readMessage(value,proto.tendermint.abci.ResponseOfferSnapshot.deserializeBinaryFromReader);\n      msg.setOfferSnapshot(value);\n      break;\n    case 15:\n      var value = new proto.tendermint.abci.ResponseLoadSnapshotChunk;\n      reader.readMessage(value,proto.tendermint.abci.ResponseLoadSnapshotChunk.deserializeBinaryFromReader);\n      msg.setLoadSnapshotChunk(value);\n      break;\n    case 16:\n      var value = new proto.tendermint.abci.ResponseApplySnapshotChunk;\n      reader.readMessage(value,proto.tendermint.abci.ResponseApplySnapshotChunk.deserializeBinaryFromReader);\n      msg.setApplySnapshotChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Response.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.Response.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.Response} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Response.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getException();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.abci.ResponseException.serializeBinaryToWriter\n    );\n  }\n  f = message.getEcho();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tendermint.abci.ResponseEcho.serializeBinaryToWriter\n    );\n  }\n  f = message.getFlush();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.tendermint.abci.ResponseFlush.serializeBinaryToWriter\n    );\n  }\n  f = message.getInfo();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.tendermint.abci.ResponseInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getSetOption();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.tendermint.abci.ResponseSetOption.serializeBinaryToWriter\n    );\n  }\n  f = message.getInitChain();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.tendermint.abci.ResponseInitChain.serializeBinaryToWriter\n    );\n  }\n  f = message.getQuery();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.tendermint.abci.ResponseQuery.serializeBinaryToWriter\n    );\n  }\n  f = message.getBeginBlock();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.tendermint.abci.ResponseBeginBlock.serializeBinaryToWriter\n    );\n  }\n  f = message.getCheckTx();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.tendermint.abci.ResponseCheckTx.serializeBinaryToWriter\n    );\n  }\n  f = message.getDeliverTx();\n  if (f != null) {\n    writer.writeMessage(\n      10,\n      f,\n      proto.tendermint.abci.ResponseDeliverTx.serializeBinaryToWriter\n    );\n  }\n  f = message.getEndBlock();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.tendermint.abci.ResponseEndBlock.serializeBinaryToWriter\n    );\n  }\n  f = message.getCommit();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.tendermint.abci.ResponseCommit.serializeBinaryToWriter\n    );\n  }\n  f = message.getListSnapshots();\n  if (f != null) {\n    writer.writeMessage(\n      13,\n      f,\n      proto.tendermint.abci.ResponseListSnapshots.serializeBinaryToWriter\n    );\n  }\n  f = message.getOfferSnapshot();\n  if (f != null) {\n    writer.writeMessage(\n      14,\n      f,\n      proto.tendermint.abci.ResponseOfferSnapshot.serializeBinaryToWriter\n    );\n  }\n  f = message.getLoadSnapshotChunk();\n  if (f != null) {\n    writer.writeMessage(\n      15,\n      f,\n      proto.tendermint.abci.ResponseLoadSnapshotChunk.serializeBinaryToWriter\n    );\n  }\n  f = message.getApplySnapshotChunk();\n  if (f != null) {\n    writer.writeMessage(\n      16,\n      f,\n      proto.tendermint.abci.ResponseApplySnapshotChunk.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ResponseException exception = 1;\n * @return {?proto.tendermint.abci.ResponseException}\n */\nproto.tendermint.abci.Response.prototype.getException = function() {\n  return /** @type{?proto.tendermint.abci.ResponseException} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseException, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseException|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setException = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearException = function() {\n  return this.setException(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasException = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ResponseEcho echo = 2;\n * @return {?proto.tendermint.abci.ResponseEcho}\n */\nproto.tendermint.abci.Response.prototype.getEcho = function() {\n  return /** @type{?proto.tendermint.abci.ResponseEcho} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseEcho, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseEcho|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setEcho = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearEcho = function() {\n  return this.setEcho(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasEcho = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional ResponseFlush flush = 3;\n * @return {?proto.tendermint.abci.ResponseFlush}\n */\nproto.tendermint.abci.Response.prototype.getFlush = function() {\n  return /** @type{?proto.tendermint.abci.ResponseFlush} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseFlush, 3));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseFlush|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setFlush = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearFlush = function() {\n  return this.setFlush(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasFlush = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ResponseInfo info = 4;\n * @return {?proto.tendermint.abci.ResponseInfo}\n */\nproto.tendermint.abci.Response.prototype.getInfo = function() {\n  return /** @type{?proto.tendermint.abci.ResponseInfo} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseInfo, 4));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseInfo|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setInfo = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearInfo = function() {\n  return this.setInfo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasInfo = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional ResponseSetOption set_option = 5;\n * @return {?proto.tendermint.abci.ResponseSetOption}\n */\nproto.tendermint.abci.Response.prototype.getSetOption = function() {\n  return /** @type{?proto.tendermint.abci.ResponseSetOption} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseSetOption, 5));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseSetOption|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setSetOption = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearSetOption = function() {\n  return this.setSetOption(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasSetOption = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional ResponseInitChain init_chain = 6;\n * @return {?proto.tendermint.abci.ResponseInitChain}\n */\nproto.tendermint.abci.Response.prototype.getInitChain = function() {\n  return /** @type{?proto.tendermint.abci.ResponseInitChain} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseInitChain, 6));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseInitChain|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setInitChain = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 6, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearInitChain = function() {\n  return this.setInitChain(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasInitChain = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional ResponseQuery query = 7;\n * @return {?proto.tendermint.abci.ResponseQuery}\n */\nproto.tendermint.abci.Response.prototype.getQuery = function() {\n  return /** @type{?proto.tendermint.abci.ResponseQuery} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseQuery, 7));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseQuery|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setQuery = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearQuery = function() {\n  return this.setQuery(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasQuery = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional ResponseBeginBlock begin_block = 8;\n * @return {?proto.tendermint.abci.ResponseBeginBlock}\n */\nproto.tendermint.abci.Response.prototype.getBeginBlock = function() {\n  return /** @type{?proto.tendermint.abci.ResponseBeginBlock} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseBeginBlock, 8));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseBeginBlock|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setBeginBlock = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 8, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearBeginBlock = function() {\n  return this.setBeginBlock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasBeginBlock = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional ResponseCheckTx check_tx = 9;\n * @return {?proto.tendermint.abci.ResponseCheckTx}\n */\nproto.tendermint.abci.Response.prototype.getCheckTx = function() {\n  return /** @type{?proto.tendermint.abci.ResponseCheckTx} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseCheckTx, 9));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseCheckTx|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setCheckTx = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 9, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearCheckTx = function() {\n  return this.setCheckTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasCheckTx = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional ResponseDeliverTx deliver_tx = 10;\n * @return {?proto.tendermint.abci.ResponseDeliverTx}\n */\nproto.tendermint.abci.Response.prototype.getDeliverTx = function() {\n  return /** @type{?proto.tendermint.abci.ResponseDeliverTx} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseDeliverTx, 10));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseDeliverTx|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setDeliverTx = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 10, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearDeliverTx = function() {\n  return this.setDeliverTx(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasDeliverTx = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional ResponseEndBlock end_block = 11;\n * @return {?proto.tendermint.abci.ResponseEndBlock}\n */\nproto.tendermint.abci.Response.prototype.getEndBlock = function() {\n  return /** @type{?proto.tendermint.abci.ResponseEndBlock} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseEndBlock, 11));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseEndBlock|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setEndBlock = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 11, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearEndBlock = function() {\n  return this.setEndBlock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasEndBlock = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional ResponseCommit commit = 12;\n * @return {?proto.tendermint.abci.ResponseCommit}\n */\nproto.tendermint.abci.Response.prototype.getCommit = function() {\n  return /** @type{?proto.tendermint.abci.ResponseCommit} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseCommit, 12));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseCommit|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setCommit = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 12, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearCommit = function() {\n  return this.setCommit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasCommit = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional ResponseListSnapshots list_snapshots = 13;\n * @return {?proto.tendermint.abci.ResponseListSnapshots}\n */\nproto.tendermint.abci.Response.prototype.getListSnapshots = function() {\n  return /** @type{?proto.tendermint.abci.ResponseListSnapshots} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseListSnapshots, 13));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseListSnapshots|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setListSnapshots = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 13, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearListSnapshots = function() {\n  return this.setListSnapshots(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasListSnapshots = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional ResponseOfferSnapshot offer_snapshot = 14;\n * @return {?proto.tendermint.abci.ResponseOfferSnapshot}\n */\nproto.tendermint.abci.Response.prototype.getOfferSnapshot = function() {\n  return /** @type{?proto.tendermint.abci.ResponseOfferSnapshot} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseOfferSnapshot, 14));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseOfferSnapshot|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setOfferSnapshot = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 14, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearOfferSnapshot = function() {\n  return this.setOfferSnapshot(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasOfferSnapshot = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional ResponseLoadSnapshotChunk load_snapshot_chunk = 15;\n * @return {?proto.tendermint.abci.ResponseLoadSnapshotChunk}\n */\nproto.tendermint.abci.Response.prototype.getLoadSnapshotChunk = function() {\n  return /** @type{?proto.tendermint.abci.ResponseLoadSnapshotChunk} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseLoadSnapshotChunk, 15));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseLoadSnapshotChunk|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setLoadSnapshotChunk = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 15, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearLoadSnapshotChunk = function() {\n  return this.setLoadSnapshotChunk(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasLoadSnapshotChunk = function() {\n  return jspb.Message.getField(this, 15) != null;\n};\n\n\n/**\n * optional ResponseApplySnapshotChunk apply_snapshot_chunk = 16;\n * @return {?proto.tendermint.abci.ResponseApplySnapshotChunk}\n */\nproto.tendermint.abci.Response.prototype.getApplySnapshotChunk = function() {\n  return /** @type{?proto.tendermint.abci.ResponseApplySnapshotChunk} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseApplySnapshotChunk, 16));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseApplySnapshotChunk|undefined} value\n * @return {!proto.tendermint.abci.Response} returns this\n*/\nproto.tendermint.abci.Response.prototype.setApplySnapshotChunk = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 16, proto.tendermint.abci.Response.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Response} returns this\n */\nproto.tendermint.abci.Response.prototype.clearApplySnapshotChunk = function() {\n  return this.setApplySnapshotChunk(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Response.prototype.hasApplySnapshotChunk = function() {\n  return jspb.Message.getField(this, 16) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseException.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseException.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseException} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseException.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    error: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseException}\n */\nproto.tendermint.abci.ResponseException.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseException;\n  return proto.tendermint.abci.ResponseException.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseException} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseException}\n */\nproto.tendermint.abci.ResponseException.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseException.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseException.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseException} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseException.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.tendermint.abci.ResponseException.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseException} returns this\n */\nproto.tendermint.abci.ResponseException.prototype.setError = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseEcho.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseEcho.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseEcho} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseEcho.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseEcho}\n */\nproto.tendermint.abci.ResponseEcho.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseEcho;\n  return proto.tendermint.abci.ResponseEcho.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseEcho} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseEcho}\n */\nproto.tendermint.abci.ResponseEcho.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseEcho.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseEcho.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseEcho} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseEcho.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.tendermint.abci.ResponseEcho.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseEcho} returns this\n */\nproto.tendermint.abci.ResponseEcho.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseFlush.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseFlush.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseFlush} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseFlush.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseFlush}\n */\nproto.tendermint.abci.ResponseFlush.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseFlush;\n  return proto.tendermint.abci.ResponseFlush.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseFlush} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseFlush}\n */\nproto.tendermint.abci.ResponseFlush.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseFlush.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseFlush.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseFlush} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseFlush.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    data: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    appVersion: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    lastBlockHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    lastBlockAppHash: msg.getLastBlockAppHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseInfo}\n */\nproto.tendermint.abci.ResponseInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseInfo;\n  return proto.tendermint.abci.ResponseInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseInfo}\n */\nproto.tendermint.abci.ResponseInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setData(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAppVersion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLastBlockHeight(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastBlockAppHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getData();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAppVersion();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getLastBlockHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getLastBlockAppHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string data = 1;\n * @return {string}\n */\nproto.tendermint.abci.ResponseInfo.prototype.getData = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseInfo} returns this\n */\nproto.tendermint.abci.ResponseInfo.prototype.setData = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string version = 2;\n * @return {string}\n */\nproto.tendermint.abci.ResponseInfo.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseInfo} returns this\n */\nproto.tendermint.abci.ResponseInfo.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional uint64 app_version = 3;\n * @return {number}\n */\nproto.tendermint.abci.ResponseInfo.prototype.getAppVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseInfo} returns this\n */\nproto.tendermint.abci.ResponseInfo.prototype.setAppVersion = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 last_block_height = 4;\n * @return {number}\n */\nproto.tendermint.abci.ResponseInfo.prototype.getLastBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseInfo} returns this\n */\nproto.tendermint.abci.ResponseInfo.prototype.setLastBlockHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bytes last_block_app_hash = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseInfo.prototype.getLastBlockAppHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes last_block_app_hash = 5;\n * This is a type-conversion wrapper around `getLastBlockAppHash()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseInfo.prototype.getLastBlockAppHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastBlockAppHash()));\n};\n\n\n/**\n * optional bytes last_block_app_hash = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastBlockAppHash()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseInfo.prototype.getLastBlockAppHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastBlockAppHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseInfo} returns this\n */\nproto.tendermint.abci.ResponseInfo.prototype.setLastBlockAppHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseSetOption.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseSetOption.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseSetOption} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseSetOption.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    log: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    info: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseSetOption}\n */\nproto.tendermint.abci.ResponseSetOption.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseSetOption;\n  return proto.tendermint.abci.ResponseSetOption.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseSetOption} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseSetOption}\n */\nproto.tendermint.abci.ResponseSetOption.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLog(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseSetOption.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseSetOption.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseSetOption} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseSetOption.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getLog();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInfo();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 code = 1;\n * @return {number}\n */\nproto.tendermint.abci.ResponseSetOption.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseSetOption} returns this\n */\nproto.tendermint.abci.ResponseSetOption.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string log = 3;\n * @return {string}\n */\nproto.tendermint.abci.ResponseSetOption.prototype.getLog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseSetOption} returns this\n */\nproto.tendermint.abci.ResponseSetOption.prototype.setLog = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string info = 4;\n * @return {string}\n */\nproto.tendermint.abci.ResponseSetOption.prototype.getInfo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseSetOption} returns this\n */\nproto.tendermint.abci.ResponseSetOption.prototype.setInfo = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.ResponseInitChain.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseInitChain.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseInitChain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseInitChain.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    consensusParams: (f = msg.getConsensusParams()) && proto.tendermint.abci.ConsensusParams.toObject(includeInstance, f),\n    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),\n    proto.tendermint.abci.ValidatorUpdate.toObject, includeInstance),\n    appHash: msg.getAppHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseInitChain}\n */\nproto.tendermint.abci.ResponseInitChain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseInitChain;\n  return proto.tendermint.abci.ResponseInitChain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseInitChain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseInitChain}\n */\nproto.tendermint.abci.ResponseInitChain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.ConsensusParams;\n      reader.readMessage(value,proto.tendermint.abci.ConsensusParams.deserializeBinaryFromReader);\n      msg.setConsensusParams(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.abci.ValidatorUpdate;\n      reader.readMessage(value,proto.tendermint.abci.ValidatorUpdate.deserializeBinaryFromReader);\n      msg.addValidators(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAppHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseInitChain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseInitChain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseInitChain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConsensusParams();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.abci.ConsensusParams.serializeBinaryToWriter\n    );\n  }\n  f = message.getValidatorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.tendermint.abci.ValidatorUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getAppHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ConsensusParams consensus_params = 1;\n * @return {?proto.tendermint.abci.ConsensusParams}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.getConsensusParams = function() {\n  return /** @type{?proto.tendermint.abci.ConsensusParams} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ConsensusParams, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ConsensusParams|undefined} value\n * @return {!proto.tendermint.abci.ResponseInitChain} returns this\n*/\nproto.tendermint.abci.ResponseInitChain.prototype.setConsensusParams = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ResponseInitChain} returns this\n */\nproto.tendermint.abci.ResponseInitChain.prototype.clearConsensusParams = function() {\n  return this.setConsensusParams(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.hasConsensusParams = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated ValidatorUpdate validators = 2;\n * @return {!Array<!proto.tendermint.abci.ValidatorUpdate>}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.getValidatorsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.ValidatorUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.ValidatorUpdate, 2));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.ValidatorUpdate>} value\n * @return {!proto.tendermint.abci.ResponseInitChain} returns this\n*/\nproto.tendermint.abci.ResponseInitChain.prototype.setValidatorsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.ValidatorUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.ValidatorUpdate}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.addValidators = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tendermint.abci.ValidatorUpdate, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseInitChain} returns this\n */\nproto.tendermint.abci.ResponseInitChain.prototype.clearValidatorsList = function() {\n  return this.setValidatorsList([]);\n};\n\n\n/**\n * optional bytes app_hash = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.getAppHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes app_hash = 3;\n * This is a type-conversion wrapper around `getAppHash()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.getAppHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAppHash()));\n};\n\n\n/**\n * optional bytes app_hash = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAppHash()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseInitChain.prototype.getAppHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAppHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseInitChain} returns this\n */\nproto.tendermint.abci.ResponseInitChain.prototype.setAppHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseQuery.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseQuery.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseQuery} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseQuery.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    log: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    info: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    index: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    key: msg.getKey_asB64(),\n    value: msg.getValue_asB64(),\n    proofOps: (f = msg.getProofOps()) && tendermint_crypto_proof_pb.ProofOps.toObject(includeInstance, f),\n    height: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    codespace: jspb.Message.getFieldWithDefault(msg, 10, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseQuery}\n */\nproto.tendermint.abci.ResponseQuery.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseQuery;\n  return proto.tendermint.abci.ResponseQuery.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseQuery} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseQuery}\n */\nproto.tendermint.abci.ResponseQuery.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLog(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfo(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setIndex(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setKey(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 8:\n      var value = new tendermint_crypto_proof_pb.ProofOps;\n      reader.readMessage(value,tendermint_crypto_proof_pb.ProofOps.deserializeBinaryFromReader);\n      msg.setProofOps(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setHeight(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCodespace(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseQuery.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseQuery.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseQuery} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseQuery.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getLog();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInfo();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getIndex();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n  f = message.getProofOps();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      tendermint_crypto_proof_pb.ProofOps.serializeBinaryToWriter\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getCodespace();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 code = 1;\n * @return {number}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string log = 3;\n * @return {string}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getLog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setLog = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string info = 4;\n * @return {string}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getInfo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setInfo = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 index = 5;\n * @return {number}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setIndex = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional bytes key = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes key = 6;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getKey()));\n};\n\n\n/**\n * optional bytes key = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional bytes value = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes value = 7;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setValue = function(value) {\n  return jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n/**\n * optional tendermint.crypto.ProofOps proof_ops = 8;\n * @return {?proto.tendermint.crypto.ProofOps}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getProofOps = function() {\n  return /** @type{?proto.tendermint.crypto.ProofOps} */ (\n    jspb.Message.getWrapperField(this, tendermint_crypto_proof_pb.ProofOps, 8));\n};\n\n\n/**\n * @param {?proto.tendermint.crypto.ProofOps|undefined} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n*/\nproto.tendermint.abci.ResponseQuery.prototype.setProofOps = function(value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.clearProofOps = function() {\n  return this.setProofOps(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ResponseQuery.prototype.hasProofOps = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional int64 height = 9;\n * @return {number}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional string codespace = 10;\n * @return {string}\n */\nproto.tendermint.abci.ResponseQuery.prototype.getCodespace = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseQuery} returns this\n */\nproto.tendermint.abci.ResponseQuery.prototype.setCodespace = function(value) {\n  return jspb.Message.setProto3StringField(this, 10, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.ResponseBeginBlock.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseBeginBlock.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseBeginBlock.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseBeginBlock} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseBeginBlock.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    eventsList: jspb.Message.toObjectList(msg.getEventsList(),\n    proto.tendermint.abci.Event.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseBeginBlock}\n */\nproto.tendermint.abci.ResponseBeginBlock.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseBeginBlock;\n  return proto.tendermint.abci.ResponseBeginBlock.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseBeginBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseBeginBlock}\n */\nproto.tendermint.abci.ResponseBeginBlock.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.Event;\n      reader.readMessage(value,proto.tendermint.abci.Event.deserializeBinaryFromReader);\n      msg.addEvents(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseBeginBlock.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseBeginBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseBeginBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseBeginBlock.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tendermint.abci.Event.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Event events = 1;\n * @return {!Array<!proto.tendermint.abci.Event>}\n */\nproto.tendermint.abci.ResponseBeginBlock.prototype.getEventsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.Event>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.Event, 1));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.Event>} value\n * @return {!proto.tendermint.abci.ResponseBeginBlock} returns this\n*/\nproto.tendermint.abci.ResponseBeginBlock.prototype.setEventsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.Event=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.Event}\n */\nproto.tendermint.abci.ResponseBeginBlock.prototype.addEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tendermint.abci.Event, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseBeginBlock} returns this\n */\nproto.tendermint.abci.ResponseBeginBlock.prototype.clearEventsList = function() {\n  return this.setEventsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.ResponseCheckTx.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseCheckTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseCheckTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseCheckTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    data: msg.getData_asB64(),\n    log: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    info: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    gasWanted: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    gasUsed: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    eventsList: jspb.Message.toObjectList(msg.getEventsList(),\n    proto.tendermint.abci.Event.toObject, includeInstance),\n    codespace: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseCheckTx}\n */\nproto.tendermint.abci.ResponseCheckTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseCheckTx;\n  return proto.tendermint.abci.ResponseCheckTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseCheckTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseCheckTx}\n */\nproto.tendermint.abci.ResponseCheckTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLog(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfo(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setGasWanted(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setGasUsed(value);\n      break;\n    case 7:\n      var value = new proto.tendermint.abci.Event;\n      reader.readMessage(value,proto.tendermint.abci.Event.deserializeBinaryFromReader);\n      msg.addEvents(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCodespace(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseCheckTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseCheckTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseCheckTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getLog();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInfo();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getGasWanted();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getGasUsed();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.tendermint.abci.Event.serializeBinaryToWriter\n    );\n  }\n  f = message.getCodespace();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 code = 1;\n * @return {number}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional string log = 3;\n * @return {string}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getLog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.setLog = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string info = 4;\n * @return {string}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getInfo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.setInfo = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 gas_wanted = 5;\n * @return {number}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getGasWanted = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.setGasWanted = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 gas_used = 6;\n * @return {number}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getGasUsed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.setGasUsed = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * repeated Event events = 7;\n * @return {!Array<!proto.tendermint.abci.Event>}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getEventsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.Event>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.Event, 7));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.Event>} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n*/\nproto.tendermint.abci.ResponseCheckTx.prototype.setEventsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.Event=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.Event}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.addEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.tendermint.abci.Event, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.clearEventsList = function() {\n  return this.setEventsList([]);\n};\n\n\n/**\n * optional string codespace = 8;\n * @return {string}\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.getCodespace = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseCheckTx} returns this\n */\nproto.tendermint.abci.ResponseCheckTx.prototype.setCodespace = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.ResponseDeliverTx.repeatedFields_ = [7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseDeliverTx.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseDeliverTx} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseDeliverTx.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    data: msg.getData_asB64(),\n    log: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    info: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    gasWanted: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    gasUsed: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    eventsList: jspb.Message.toObjectList(msg.getEventsList(),\n    proto.tendermint.abci.Event.toObject, includeInstance),\n    codespace: jspb.Message.getFieldWithDefault(msg, 8, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseDeliverTx}\n */\nproto.tendermint.abci.ResponseDeliverTx.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseDeliverTx;\n  return proto.tendermint.abci.ResponseDeliverTx.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseDeliverTx} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseDeliverTx}\n */\nproto.tendermint.abci.ResponseDeliverTx.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCode(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLog(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInfo(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setGasWanted(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setGasUsed(value);\n      break;\n    case 7:\n      var value = new proto.tendermint.abci.Event;\n      reader.readMessage(value,proto.tendermint.abci.Event.deserializeBinaryFromReader);\n      msg.addEvents(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCodespace(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseDeliverTx.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseDeliverTx} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseDeliverTx.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getLog();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getInfo();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getGasWanted();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getGasUsed();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.tendermint.abci.Event.serializeBinaryToWriter\n    );\n  }\n  f = message.getCodespace();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 code = 1;\n * @return {number}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.setCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional string log = 3;\n * @return {string}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getLog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.setLog = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string info = 4;\n * @return {string}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getInfo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.setInfo = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 gas_wanted = 5;\n * @return {number}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getGasWanted = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.setGasWanted = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 gas_used = 6;\n * @return {number}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getGasUsed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.setGasUsed = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * repeated Event events = 7;\n * @return {!Array<!proto.tendermint.abci.Event>}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getEventsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.Event>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.Event, 7));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.Event>} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n*/\nproto.tendermint.abci.ResponseDeliverTx.prototype.setEventsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.Event=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.Event}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.addEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.tendermint.abci.Event, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.clearEventsList = function() {\n  return this.setEventsList([]);\n};\n\n\n/**\n * optional string codespace = 8;\n * @return {string}\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.getCodespace = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.ResponseDeliverTx} returns this\n */\nproto.tendermint.abci.ResponseDeliverTx.prototype.setCodespace = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.ResponseEndBlock.repeatedFields_ = [1,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseEndBlock.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseEndBlock} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseEndBlock.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    validatorUpdatesList: jspb.Message.toObjectList(msg.getValidatorUpdatesList(),\n    proto.tendermint.abci.ValidatorUpdate.toObject, includeInstance),\n    consensusParamUpdates: (f = msg.getConsensusParamUpdates()) && proto.tendermint.abci.ConsensusParams.toObject(includeInstance, f),\n    eventsList: jspb.Message.toObjectList(msg.getEventsList(),\n    proto.tendermint.abci.Event.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseEndBlock}\n */\nproto.tendermint.abci.ResponseEndBlock.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseEndBlock;\n  return proto.tendermint.abci.ResponseEndBlock.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseEndBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseEndBlock}\n */\nproto.tendermint.abci.ResponseEndBlock.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.ValidatorUpdate;\n      reader.readMessage(value,proto.tendermint.abci.ValidatorUpdate.deserializeBinaryFromReader);\n      msg.addValidatorUpdates(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.abci.ConsensusParams;\n      reader.readMessage(value,proto.tendermint.abci.ConsensusParams.deserializeBinaryFromReader);\n      msg.setConsensusParamUpdates(value);\n      break;\n    case 3:\n      var value = new proto.tendermint.abci.Event;\n      reader.readMessage(value,proto.tendermint.abci.Event.deserializeBinaryFromReader);\n      msg.addEvents(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseEndBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseEndBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseEndBlock.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValidatorUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tendermint.abci.ValidatorUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getConsensusParamUpdates();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tendermint.abci.ConsensusParams.serializeBinaryToWriter\n    );\n  }\n  f = message.getEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.tendermint.abci.Event.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ValidatorUpdate validator_updates = 1;\n * @return {!Array<!proto.tendermint.abci.ValidatorUpdate>}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.getValidatorUpdatesList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.ValidatorUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.ValidatorUpdate, 1));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.ValidatorUpdate>} value\n * @return {!proto.tendermint.abci.ResponseEndBlock} returns this\n*/\nproto.tendermint.abci.ResponseEndBlock.prototype.setValidatorUpdatesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.ValidatorUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.ValidatorUpdate}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.addValidatorUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tendermint.abci.ValidatorUpdate, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseEndBlock} returns this\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.clearValidatorUpdatesList = function() {\n  return this.setValidatorUpdatesList([]);\n};\n\n\n/**\n * optional ConsensusParams consensus_param_updates = 2;\n * @return {?proto.tendermint.abci.ConsensusParams}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.getConsensusParamUpdates = function() {\n  return /** @type{?proto.tendermint.abci.ConsensusParams} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ConsensusParams, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ConsensusParams|undefined} value\n * @return {!proto.tendermint.abci.ResponseEndBlock} returns this\n*/\nproto.tendermint.abci.ResponseEndBlock.prototype.setConsensusParamUpdates = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ResponseEndBlock} returns this\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.clearConsensusParamUpdates = function() {\n  return this.setConsensusParamUpdates(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.hasConsensusParamUpdates = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated Event events = 3;\n * @return {!Array<!proto.tendermint.abci.Event>}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.getEventsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.Event>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.Event, 3));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.Event>} value\n * @return {!proto.tendermint.abci.ResponseEndBlock} returns this\n*/\nproto.tendermint.abci.ResponseEndBlock.prototype.setEventsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.Event=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.Event}\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.addEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tendermint.abci.Event, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseEndBlock} returns this\n */\nproto.tendermint.abci.ResponseEndBlock.prototype.clearEventsList = function() {\n  return this.setEventsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseCommit.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseCommit.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseCommit} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseCommit.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    data: msg.getData_asB64(),\n    retainHeight: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseCommit}\n */\nproto.tendermint.abci.ResponseCommit.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseCommit;\n  return proto.tendermint.abci.ResponseCommit.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseCommit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseCommit}\n */\nproto.tendermint.abci.ResponseCommit.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRetainHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseCommit.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseCommit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseCommit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseCommit.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRetainHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes data = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseCommit.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseCommit.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseCommit.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseCommit} returns this\n */\nproto.tendermint.abci.ResponseCommit.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 retain_height = 3;\n * @return {number}\n */\nproto.tendermint.abci.ResponseCommit.prototype.getRetainHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ResponseCommit} returns this\n */\nproto.tendermint.abci.ResponseCommit.prototype.setRetainHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.ResponseListSnapshots.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseListSnapshots.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseListSnapshots.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseListSnapshots} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseListSnapshots.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    snapshotsList: jspb.Message.toObjectList(msg.getSnapshotsList(),\n    proto.tendermint.abci.Snapshot.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseListSnapshots}\n */\nproto.tendermint.abci.ResponseListSnapshots.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseListSnapshots;\n  return proto.tendermint.abci.ResponseListSnapshots.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseListSnapshots} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseListSnapshots}\n */\nproto.tendermint.abci.ResponseListSnapshots.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.Snapshot;\n      reader.readMessage(value,proto.tendermint.abci.Snapshot.deserializeBinaryFromReader);\n      msg.addSnapshots(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseListSnapshots.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseListSnapshots.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseListSnapshots} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseListSnapshots.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSnapshotsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tendermint.abci.Snapshot.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Snapshot snapshots = 1;\n * @return {!Array<!proto.tendermint.abci.Snapshot>}\n */\nproto.tendermint.abci.ResponseListSnapshots.prototype.getSnapshotsList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.Snapshot>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.Snapshot, 1));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.Snapshot>} value\n * @return {!proto.tendermint.abci.ResponseListSnapshots} returns this\n*/\nproto.tendermint.abci.ResponseListSnapshots.prototype.setSnapshotsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.Snapshot=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.Snapshot}\n */\nproto.tendermint.abci.ResponseListSnapshots.prototype.addSnapshots = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tendermint.abci.Snapshot, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseListSnapshots} returns this\n */\nproto.tendermint.abci.ResponseListSnapshots.prototype.clearSnapshotsList = function() {\n  return this.setSnapshotsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseOfferSnapshot.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseOfferSnapshot.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseOfferSnapshot} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseOfferSnapshot.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    result: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseOfferSnapshot}\n */\nproto.tendermint.abci.ResponseOfferSnapshot.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseOfferSnapshot;\n  return proto.tendermint.abci.ResponseOfferSnapshot.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseOfferSnapshot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseOfferSnapshot}\n */\nproto.tendermint.abci.ResponseOfferSnapshot.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.tendermint.abci.ResponseOfferSnapshot.Result} */ (reader.readEnum());\n      msg.setResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseOfferSnapshot.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseOfferSnapshot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseOfferSnapshot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseOfferSnapshot.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getResult();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.tendermint.abci.ResponseOfferSnapshot.Result = {\n  UNKNOWN: 0,\n  ACCEPT: 1,\n  ABORT: 2,\n  REJECT: 3,\n  REJECT_FORMAT: 4,\n  REJECT_SENDER: 5\n};\n\n/**\n * optional Result result = 1;\n * @return {!proto.tendermint.abci.ResponseOfferSnapshot.Result}\n */\nproto.tendermint.abci.ResponseOfferSnapshot.prototype.getResult = function() {\n  return /** @type {!proto.tendermint.abci.ResponseOfferSnapshot.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.tendermint.abci.ResponseOfferSnapshot.Result} value\n * @return {!proto.tendermint.abci.ResponseOfferSnapshot} returns this\n */\nproto.tendermint.abci.ResponseOfferSnapshot.prototype.setResult = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseLoadSnapshotChunk.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseLoadSnapshotChunk} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chunk: msg.getChunk_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseLoadSnapshotChunk}\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseLoadSnapshotChunk;\n  return proto.tendermint.abci.ResponseLoadSnapshotChunk.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseLoadSnapshotChunk} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseLoadSnapshotChunk}\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChunk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseLoadSnapshotChunk.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseLoadSnapshotChunk} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChunk_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes chunk = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.prototype.getChunk = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes chunk = 1;\n * This is a type-conversion wrapper around `getChunk()`\n * @return {string}\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.prototype.getChunk_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChunk()));\n};\n\n\n/**\n * optional bytes chunk = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChunk()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.prototype.getChunk_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChunk()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.ResponseLoadSnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseLoadSnapshotChunk.prototype.setChunk = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ResponseApplySnapshotChunk.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ResponseApplySnapshotChunk} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    result: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    refetchChunksList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,\n    rejectSendersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ResponseApplySnapshotChunk;\n  return proto.tendermint.abci.ResponseApplySnapshotChunk.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ResponseApplySnapshotChunk} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.tendermint.abci.ResponseApplySnapshotChunk.Result} */ (reader.readEnum());\n      msg.setResult(value);\n      break;\n    case 2:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addRefetchChunks(values[i]);\n      }\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addRejectSenders(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ResponseApplySnapshotChunk.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ResponseApplySnapshotChunk} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getResult();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getRefetchChunksList();\n  if (f.length > 0) {\n    writer.writePackedUint32(\n      2,\n      f\n    );\n  }\n  f = message.getRejectSendersList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.Result = {\n  UNKNOWN: 0,\n  ACCEPT: 1,\n  ABORT: 2,\n  RETRY: 3,\n  RETRY_SNAPSHOT: 4,\n  REJECT_SNAPSHOT: 5\n};\n\n/**\n * optional Result result = 1;\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk.Result}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.getResult = function() {\n  return /** @type {!proto.tendermint.abci.ResponseApplySnapshotChunk.Result} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.tendermint.abci.ResponseApplySnapshotChunk.Result} value\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.setResult = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated uint32 refetch_chunks = 2;\n * @return {!Array<number>}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.getRefetchChunksList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.setRefetchChunksList = function(value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.addRefetchChunks = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.clearRefetchChunksList = function() {\n  return this.setRefetchChunksList([]);\n};\n\n\n/**\n * repeated string reject_senders = 3;\n * @return {!Array<string>}\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.getRejectSendersList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.setRejectSendersList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.addRejectSenders = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.ResponseApplySnapshotChunk} returns this\n */\nproto.tendermint.abci.ResponseApplySnapshotChunk.prototype.clearRejectSendersList = function() {\n  return this.setRejectSendersList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ConsensusParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ConsensusParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ConsensusParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ConsensusParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    block: (f = msg.getBlock()) && proto.tendermint.abci.BlockParams.toObject(includeInstance, f),\n    evidence: (f = msg.getEvidence()) && tendermint_types_params_pb.EvidenceParams.toObject(includeInstance, f),\n    validator: (f = msg.getValidator()) && tendermint_types_params_pb.ValidatorParams.toObject(includeInstance, f),\n    version: (f = msg.getVersion()) && tendermint_types_params_pb.VersionParams.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ConsensusParams}\n */\nproto.tendermint.abci.ConsensusParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ConsensusParams;\n  return proto.tendermint.abci.ConsensusParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ConsensusParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ConsensusParams}\n */\nproto.tendermint.abci.ConsensusParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.BlockParams;\n      reader.readMessage(value,proto.tendermint.abci.BlockParams.deserializeBinaryFromReader);\n      msg.setBlock(value);\n      break;\n    case 2:\n      var value = new tendermint_types_params_pb.EvidenceParams;\n      reader.readMessage(value,tendermint_types_params_pb.EvidenceParams.deserializeBinaryFromReader);\n      msg.setEvidence(value);\n      break;\n    case 3:\n      var value = new tendermint_types_params_pb.ValidatorParams;\n      reader.readMessage(value,tendermint_types_params_pb.ValidatorParams.deserializeBinaryFromReader);\n      msg.setValidator(value);\n      break;\n    case 4:\n      var value = new tendermint_types_params_pb.VersionParams;\n      reader.readMessage(value,tendermint_types_params_pb.VersionParams.deserializeBinaryFromReader);\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ConsensusParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ConsensusParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ConsensusParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ConsensusParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlock();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.abci.BlockParams.serializeBinaryToWriter\n    );\n  }\n  f = message.getEvidence();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      tendermint_types_params_pb.EvidenceParams.serializeBinaryToWriter\n    );\n  }\n  f = message.getValidator();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      tendermint_types_params_pb.ValidatorParams.serializeBinaryToWriter\n    );\n  }\n  f = message.getVersion();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      tendermint_types_params_pb.VersionParams.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional BlockParams block = 1;\n * @return {?proto.tendermint.abci.BlockParams}\n */\nproto.tendermint.abci.ConsensusParams.prototype.getBlock = function() {\n  return /** @type{?proto.tendermint.abci.BlockParams} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.BlockParams, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.BlockParams|undefined} value\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n*/\nproto.tendermint.abci.ConsensusParams.prototype.setBlock = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n */\nproto.tendermint.abci.ConsensusParams.prototype.clearBlock = function() {\n  return this.setBlock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ConsensusParams.prototype.hasBlock = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional tendermint.types.EvidenceParams evidence = 2;\n * @return {?proto.tendermint.types.EvidenceParams}\n */\nproto.tendermint.abci.ConsensusParams.prototype.getEvidence = function() {\n  return /** @type{?proto.tendermint.types.EvidenceParams} */ (\n    jspb.Message.getWrapperField(this, tendermint_types_params_pb.EvidenceParams, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.types.EvidenceParams|undefined} value\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n*/\nproto.tendermint.abci.ConsensusParams.prototype.setEvidence = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n */\nproto.tendermint.abci.ConsensusParams.prototype.clearEvidence = function() {\n  return this.setEvidence(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ConsensusParams.prototype.hasEvidence = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional tendermint.types.ValidatorParams validator = 3;\n * @return {?proto.tendermint.types.ValidatorParams}\n */\nproto.tendermint.abci.ConsensusParams.prototype.getValidator = function() {\n  return /** @type{?proto.tendermint.types.ValidatorParams} */ (\n    jspb.Message.getWrapperField(this, tendermint_types_params_pb.ValidatorParams, 3));\n};\n\n\n/**\n * @param {?proto.tendermint.types.ValidatorParams|undefined} value\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n*/\nproto.tendermint.abci.ConsensusParams.prototype.setValidator = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n */\nproto.tendermint.abci.ConsensusParams.prototype.clearValidator = function() {\n  return this.setValidator(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ConsensusParams.prototype.hasValidator = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional tendermint.types.VersionParams version = 4;\n * @return {?proto.tendermint.types.VersionParams}\n */\nproto.tendermint.abci.ConsensusParams.prototype.getVersion = function() {\n  return /** @type{?proto.tendermint.types.VersionParams} */ (\n    jspb.Message.getWrapperField(this, tendermint_types_params_pb.VersionParams, 4));\n};\n\n\n/**\n * @param {?proto.tendermint.types.VersionParams|undefined} value\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n*/\nproto.tendermint.abci.ConsensusParams.prototype.setVersion = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ConsensusParams} returns this\n */\nproto.tendermint.abci.ConsensusParams.prototype.clearVersion = function() {\n  return this.setVersion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ConsensusParams.prototype.hasVersion = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.BlockParams.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.BlockParams.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.BlockParams} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.BlockParams.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    maxBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    maxGas: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.BlockParams}\n */\nproto.tendermint.abci.BlockParams.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.BlockParams;\n  return proto.tendermint.abci.BlockParams.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.BlockParams} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.BlockParams}\n */\nproto.tendermint.abci.BlockParams.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMaxBytes(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMaxGas(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.BlockParams.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.BlockParams.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.BlockParams} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.BlockParams.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMaxBytes();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getMaxGas();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 max_bytes = 1;\n * @return {number}\n */\nproto.tendermint.abci.BlockParams.prototype.getMaxBytes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.BlockParams} returns this\n */\nproto.tendermint.abci.BlockParams.prototype.setMaxBytes = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 max_gas = 2;\n * @return {number}\n */\nproto.tendermint.abci.BlockParams.prototype.getMaxGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.BlockParams} returns this\n */\nproto.tendermint.abci.BlockParams.prototype.setMaxGas = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.LastCommitInfo.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.LastCommitInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.LastCommitInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.LastCommitInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.LastCommitInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    round: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    proto.tendermint.abci.VoteInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.LastCommitInfo}\n */\nproto.tendermint.abci.LastCommitInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.LastCommitInfo;\n  return proto.tendermint.abci.LastCommitInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.LastCommitInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.LastCommitInfo}\n */\nproto.tendermint.abci.LastCommitInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRound(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.abci.VoteInfo;\n      reader.readMessage(value,proto.tendermint.abci.VoteInfo.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.LastCommitInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.LastCommitInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.LastCommitInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.LastCommitInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRound();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.tendermint.abci.VoteInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 round = 1;\n * @return {number}\n */\nproto.tendermint.abci.LastCommitInfo.prototype.getRound = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.LastCommitInfo} returns this\n */\nproto.tendermint.abci.LastCommitInfo.prototype.setRound = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * repeated VoteInfo votes = 2;\n * @return {!Array<!proto.tendermint.abci.VoteInfo>}\n */\nproto.tendermint.abci.LastCommitInfo.prototype.getVotesList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.VoteInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.VoteInfo, 2));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.VoteInfo>} value\n * @return {!proto.tendermint.abci.LastCommitInfo} returns this\n*/\nproto.tendermint.abci.LastCommitInfo.prototype.setVotesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.VoteInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.VoteInfo}\n */\nproto.tendermint.abci.LastCommitInfo.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tendermint.abci.VoteInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.LastCommitInfo} returns this\n */\nproto.tendermint.abci.LastCommitInfo.prototype.clearVotesList = function() {\n  return this.setVotesList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.abci.Event.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.Event.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.Event.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.Event} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Event.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),\n    proto.tendermint.abci.EventAttribute.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.Event}\n */\nproto.tendermint.abci.Event.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.Event;\n  return proto.tendermint.abci.Event.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.Event} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.Event}\n */\nproto.tendermint.abci.Event.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.abci.EventAttribute;\n      reader.readMessage(value,proto.tendermint.abci.EventAttribute.deserializeBinaryFromReader);\n      msg.addAttributes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Event.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.Event.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.Event} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Event.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAttributesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.tendermint.abci.EventAttribute.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.tendermint.abci.Event.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.abci.Event} returns this\n */\nproto.tendermint.abci.Event.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated EventAttribute attributes = 2;\n * @return {!Array<!proto.tendermint.abci.EventAttribute>}\n */\nproto.tendermint.abci.Event.prototype.getAttributesList = function() {\n  return /** @type{!Array<!proto.tendermint.abci.EventAttribute>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.abci.EventAttribute, 2));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.abci.EventAttribute>} value\n * @return {!proto.tendermint.abci.Event} returns this\n*/\nproto.tendermint.abci.Event.prototype.setAttributesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.tendermint.abci.EventAttribute=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.abci.EventAttribute}\n */\nproto.tendermint.abci.Event.prototype.addAttributes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tendermint.abci.EventAttribute, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.abci.Event} returns this\n */\nproto.tendermint.abci.Event.prototype.clearAttributesList = function() {\n  return this.setAttributesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.EventAttribute.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.EventAttribute.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.EventAttribute} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.EventAttribute.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: msg.getKey_asB64(),\n    value: msg.getValue_asB64(),\n    index: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.EventAttribute}\n */\nproto.tendermint.abci.EventAttribute.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.EventAttribute;\n  return proto.tendermint.abci.EventAttribute.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.EventAttribute} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.EventAttribute}\n */\nproto.tendermint.abci.EventAttribute.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.EventAttribute.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.EventAttribute.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.EventAttribute} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.EventAttribute.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getIndex();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes key = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.EventAttribute.prototype.getKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes key = 1;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\nproto.tendermint.abci.EventAttribute.prototype.getKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getKey()));\n};\n\n\n/**\n * optional bytes key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.EventAttribute.prototype.getKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.EventAttribute} returns this\n */\nproto.tendermint.abci.EventAttribute.prototype.setKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes value = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.EventAttribute.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes value = 2;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.tendermint.abci.EventAttribute.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.EventAttribute.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.EventAttribute} returns this\n */\nproto.tendermint.abci.EventAttribute.prototype.setValue = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bool index = 3;\n * @return {boolean}\n */\nproto.tendermint.abci.EventAttribute.prototype.getIndex = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.tendermint.abci.EventAttribute} returns this\n */\nproto.tendermint.abci.EventAttribute.prototype.setIndex = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.TxResult.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.TxResult.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.TxResult} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.TxResult.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    height: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    index: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    tx: msg.getTx_asB64(),\n    result: (f = msg.getResult()) && proto.tendermint.abci.ResponseDeliverTx.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.TxResult}\n */\nproto.tendermint.abci.TxResult.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.TxResult;\n  return proto.tendermint.abci.TxResult.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.TxResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.TxResult}\n */\nproto.tendermint.abci.TxResult.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setHeight(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndex(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTx(value);\n      break;\n    case 4:\n      var value = new proto.tendermint.abci.ResponseDeliverTx;\n      reader.readMessage(value,proto.tendermint.abci.ResponseDeliverTx.deserializeBinaryFromReader);\n      msg.setResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.TxResult.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.TxResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.TxResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.TxResult.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getTx_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getResult();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.tendermint.abci.ResponseDeliverTx.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int64 height = 1;\n * @return {number}\n */\nproto.tendermint.abci.TxResult.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.TxResult} returns this\n */\nproto.tendermint.abci.TxResult.prototype.setHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint32 index = 2;\n * @return {number}\n */\nproto.tendermint.abci.TxResult.prototype.getIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.TxResult} returns this\n */\nproto.tendermint.abci.TxResult.prototype.setIndex = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes tx = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.TxResult.prototype.getTx = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes tx = 3;\n * This is a type-conversion wrapper around `getTx()`\n * @return {string}\n */\nproto.tendermint.abci.TxResult.prototype.getTx_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTx()));\n};\n\n\n/**\n * optional bytes tx = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTx()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.TxResult.prototype.getTx_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTx()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.TxResult} returns this\n */\nproto.tendermint.abci.TxResult.prototype.setTx = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional ResponseDeliverTx result = 4;\n * @return {?proto.tendermint.abci.ResponseDeliverTx}\n */\nproto.tendermint.abci.TxResult.prototype.getResult = function() {\n  return /** @type{?proto.tendermint.abci.ResponseDeliverTx} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.ResponseDeliverTx, 4));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.ResponseDeliverTx|undefined} value\n * @return {!proto.tendermint.abci.TxResult} returns this\n*/\nproto.tendermint.abci.TxResult.prototype.setResult = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.TxResult} returns this\n */\nproto.tendermint.abci.TxResult.prototype.clearResult = function() {\n  return this.setResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.TxResult.prototype.hasResult = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.Validator.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.Validator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.Validator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Validator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    power: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.Validator}\n */\nproto.tendermint.abci.Validator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.Validator;\n  return proto.tendermint.abci.Validator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.Validator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.Validator}\n */\nproto.tendermint.abci.Validator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPower(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Validator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.Validator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.Validator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Validator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.Validator.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.tendermint.abci.Validator.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Validator.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.Validator} returns this\n */\nproto.tendermint.abci.Validator.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 power = 3;\n * @return {number}\n */\nproto.tendermint.abci.Validator.prototype.getPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.Validator} returns this\n */\nproto.tendermint.abci.Validator.prototype.setPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.ValidatorUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.ValidatorUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.ValidatorUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ValidatorUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: (f = msg.getPubKey()) && tendermint_crypto_keys_pb.PublicKey.toObject(includeInstance, f),\n    power: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.ValidatorUpdate}\n */\nproto.tendermint.abci.ValidatorUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.ValidatorUpdate;\n  return proto.tendermint.abci.ValidatorUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.ValidatorUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.ValidatorUpdate}\n */\nproto.tendermint.abci.ValidatorUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new tendermint_crypto_keys_pb.PublicKey;\n      reader.readMessage(value,tendermint_crypto_keys_pb.PublicKey.deserializeBinaryFromReader);\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPower(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.ValidatorUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.ValidatorUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.ValidatorUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.ValidatorUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      tendermint_crypto_keys_pb.PublicKey.serializeBinaryToWriter\n    );\n  }\n  f = message.getPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional tendermint.crypto.PublicKey pub_key = 1;\n * @return {?proto.tendermint.crypto.PublicKey}\n */\nproto.tendermint.abci.ValidatorUpdate.prototype.getPubKey = function() {\n  return /** @type{?proto.tendermint.crypto.PublicKey} */ (\n    jspb.Message.getWrapperField(this, tendermint_crypto_keys_pb.PublicKey, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.crypto.PublicKey|undefined} value\n * @return {!proto.tendermint.abci.ValidatorUpdate} returns this\n*/\nproto.tendermint.abci.ValidatorUpdate.prototype.setPubKey = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.ValidatorUpdate} returns this\n */\nproto.tendermint.abci.ValidatorUpdate.prototype.clearPubKey = function() {\n  return this.setPubKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.ValidatorUpdate.prototype.hasPubKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 power = 2;\n * @return {number}\n */\nproto.tendermint.abci.ValidatorUpdate.prototype.getPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.ValidatorUpdate} returns this\n */\nproto.tendermint.abci.ValidatorUpdate.prototype.setPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.VoteInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.VoteInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.VoteInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.VoteInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    validator: (f = msg.getValidator()) && proto.tendermint.abci.Validator.toObject(includeInstance, f),\n    signedLastBlock: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.VoteInfo}\n */\nproto.tendermint.abci.VoteInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.VoteInfo;\n  return proto.tendermint.abci.VoteInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.VoteInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.VoteInfo}\n */\nproto.tendermint.abci.VoteInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.abci.Validator;\n      reader.readMessage(value,proto.tendermint.abci.Validator.deserializeBinaryFromReader);\n      msg.setValidator(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSignedLastBlock(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.VoteInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.VoteInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.VoteInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.VoteInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValidator();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.abci.Validator.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignedLastBlock();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Validator validator = 1;\n * @return {?proto.tendermint.abci.Validator}\n */\nproto.tendermint.abci.VoteInfo.prototype.getValidator = function() {\n  return /** @type{?proto.tendermint.abci.Validator} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.Validator, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.Validator|undefined} value\n * @return {!proto.tendermint.abci.VoteInfo} returns this\n*/\nproto.tendermint.abci.VoteInfo.prototype.setValidator = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.VoteInfo} returns this\n */\nproto.tendermint.abci.VoteInfo.prototype.clearValidator = function() {\n  return this.setValidator(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.VoteInfo.prototype.hasValidator = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool signed_last_block = 2;\n * @return {boolean}\n */\nproto.tendermint.abci.VoteInfo.prototype.getSignedLastBlock = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.tendermint.abci.VoteInfo} returns this\n */\nproto.tendermint.abci.VoteInfo.prototype.setSignedLastBlock = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.Evidence.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.Evidence.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.Evidence} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Evidence.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    validator: (f = msg.getValidator()) && proto.tendermint.abci.Validator.toObject(includeInstance, f),\n    height: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    totalVotingPower: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.Evidence}\n */\nproto.tendermint.abci.Evidence.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.Evidence;\n  return proto.tendermint.abci.Evidence.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.Evidence} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.Evidence}\n */\nproto.tendermint.abci.Evidence.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.tendermint.abci.EvidenceType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.abci.Validator;\n      reader.readMessage(value,proto.tendermint.abci.Validator.deserializeBinaryFromReader);\n      msg.setValidator(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setHeight(value);\n      break;\n    case 4:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setTime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalVotingPower(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Evidence.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.Evidence.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.Evidence} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Evidence.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getValidator();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tendermint.abci.Validator.serializeBinaryToWriter\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getTime();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalVotingPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional EvidenceType type = 1;\n * @return {!proto.tendermint.abci.EvidenceType}\n */\nproto.tendermint.abci.Evidence.prototype.getType = function() {\n  return /** @type {!proto.tendermint.abci.EvidenceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.tendermint.abci.EvidenceType} value\n * @return {!proto.tendermint.abci.Evidence} returns this\n */\nproto.tendermint.abci.Evidence.prototype.setType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional Validator validator = 2;\n * @return {?proto.tendermint.abci.Validator}\n */\nproto.tendermint.abci.Evidence.prototype.getValidator = function() {\n  return /** @type{?proto.tendermint.abci.Validator} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.abci.Validator, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.abci.Validator|undefined} value\n * @return {!proto.tendermint.abci.Evidence} returns this\n*/\nproto.tendermint.abci.Evidence.prototype.setValidator = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Evidence} returns this\n */\nproto.tendermint.abci.Evidence.prototype.clearValidator = function() {\n  return this.setValidator(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Evidence.prototype.hasValidator = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 height = 3;\n * @return {number}\n */\nproto.tendermint.abci.Evidence.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.Evidence} returns this\n */\nproto.tendermint.abci.Evidence.prototype.setHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp time = 4;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.tendermint.abci.Evidence.prototype.getTime = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.tendermint.abci.Evidence} returns this\n*/\nproto.tendermint.abci.Evidence.prototype.setTime = function(value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.abci.Evidence} returns this\n */\nproto.tendermint.abci.Evidence.prototype.clearTime = function() {\n  return this.setTime(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.abci.Evidence.prototype.hasTime = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional int64 total_voting_power = 5;\n * @return {number}\n */\nproto.tendermint.abci.Evidence.prototype.getTotalVotingPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.Evidence} returns this\n */\nproto.tendermint.abci.Evidence.prototype.setTotalVotingPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.abci.Snapshot.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.abci.Snapshot.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.abci.Snapshot} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Snapshot.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    height: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    format: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    chunks: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hash: msg.getHash_asB64(),\n    metadata: msg.getMetadata_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.abci.Snapshot}\n */\nproto.tendermint.abci.Snapshot.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.abci.Snapshot;\n  return proto.tendermint.abci.Snapshot.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.abci.Snapshot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.abci.Snapshot}\n */\nproto.tendermint.abci.Snapshot.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHeight(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFormat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChunks(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMetadata(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Snapshot.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.abci.Snapshot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.abci.Snapshot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.abci.Snapshot.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getFormat();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getChunks();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getMetadata_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 height = 1;\n * @return {number}\n */\nproto.tendermint.abci.Snapshot.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.Snapshot} returns this\n */\nproto.tendermint.abci.Snapshot.prototype.setHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint32 format = 2;\n * @return {number}\n */\nproto.tendermint.abci.Snapshot.prototype.getFormat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.Snapshot} returns this\n */\nproto.tendermint.abci.Snapshot.prototype.setFormat = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint32 chunks = 3;\n * @return {number}\n */\nproto.tendermint.abci.Snapshot.prototype.getChunks = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.abci.Snapshot} returns this\n */\nproto.tendermint.abci.Snapshot.prototype.setChunks = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes hash = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.Snapshot.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes hash = 4;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.tendermint.abci.Snapshot.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Snapshot.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.Snapshot} returns this\n */\nproto.tendermint.abci.Snapshot.prototype.setHash = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes metadata = 5;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.abci.Snapshot.prototype.getMetadata = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes metadata = 5;\n * This is a type-conversion wrapper around `getMetadata()`\n * @return {string}\n */\nproto.tendermint.abci.Snapshot.prototype.getMetadata_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMetadata()));\n};\n\n\n/**\n * optional bytes metadata = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMetadata()`\n * @return {!Uint8Array}\n */\nproto.tendermint.abci.Snapshot.prototype.getMetadata_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMetadata()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.abci.Snapshot} returns this\n */\nproto.tendermint.abci.Snapshot.prototype.setMetadata = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.tendermint.abci.CheckTxType = {\n  NEW: 0,\n  RECHECK: 1\n};\n\n/**\n * @enum {number}\n */\nproto.tendermint.abci.EvidenceType = {\n  UNKNOWN: 0,\n  DUPLICATE_VOTE: 1,\n  LIGHT_CLIENT_ATTACK: 2\n};\n\ngoog.object.extend(exports, proto.tendermint.abci);\n"],"names":["jspb","goog","global","this","window","self","Function","call","tendermint_crypto_proof_pb","object","extend","proto","tendermint_types_types_pb","tendermint_crypto_keys_pb","tendermint_types_params_pb","google_protobuf_timestamp_pb","gogoproto_gogo_pb","exportSymbol","tendermint","abci","Request","opt_data","Message","initialize","oneofGroups_","inherits","DEBUG","COMPILED","displayName","RequestEcho","RequestFlush","RequestInfo","RequestSetOption","RequestInitChain","repeatedFields_","RequestQuery","RequestBeginBlock","RequestCheckTx","RequestDeliverTx","RequestEndBlock","RequestCommit","RequestListSnapshots","RequestOfferSnapshot","RequestLoadSnapshotChunk","RequestApplySnapshotChunk","Response","ResponseException","ResponseEcho","ResponseFlush","ResponseInfo","ResponseSetOption","ResponseInitChain","ResponseQuery","ResponseBeginBlock","ResponseCheckTx","ResponseDeliverTx","ResponseEndBlock","ResponseCommit","ResponseListSnapshots","ResponseOfferSnapshot","ResponseLoadSnapshotChunk","ResponseApplySnapshotChunk","ConsensusParams","BlockParams","LastCommitInfo","Event","EventAttribute","TxResult","Validator","ValidatorUpdate","VoteInfo","Evidence","Snapshot","ValueCase","VALUE_NOT_SET","ECHO","FLUSH","INFO","SET_OPTION","INIT_CHAIN","QUERY","BEGIN_BLOCK","CHECK_TX","DELIVER_TX","END_BLOCK","COMMIT","LIST_SNAPSHOTS","OFFER_SNAPSHOT","LOAD_SNAPSHOT_CHUNK","APPLY_SNAPSHOT_CHUNK","prototype","getValueCase","computeOneofCase","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","f","obj","echo","getEcho","flush","getFlush","info","getInfo","setOption","getSetOption","initChain","getInitChain","query","getQuery","beginBlock","getBeginBlock","checkTx","getCheckTx","deliverTx","getDeliverTx","endBlock","getEndBlock","commit","getCommit","listSnapshots","getListSnapshots","offerSnapshot","getOfferSnapshot","loadSnapshotChunk","getLoadSnapshotChunk","applySnapshotChunk","getApplySnapshotChunk","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readMessage","setEcho","setFlush","setInfo","setSetOption","setInitChain","setQuery","setBeginBlock","setCheckTx","setDeliverTx","setEndBlock","setCommit","setListSnapshots","setOfferSnapshot","setLoadSnapshotChunk","setApplySnapshotChunk","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","writeMessage","getWrapperField","setOneofWrapperField","clearEcho","hasEcho","getField","clearFlush","hasFlush","clearInfo","hasInfo","clearSetOption","hasSetOption","clearInitChain","hasInitChain","clearQuery","hasQuery","clearBeginBlock","hasBeginBlock","clearCheckTx","hasCheckTx","clearDeliverTx","hasDeliverTx","clearEndBlock","hasEndBlock","clearCommit","hasCommit","clearListSnapshots","hasListSnapshots","clearOfferSnapshot","hasOfferSnapshot","clearLoadSnapshotChunk","hasLoadSnapshotChunk","clearApplySnapshotChunk","hasApplySnapshotChunk","getFieldWithDefault","readString","setMessage","getMessage","length","writeString","setProto3StringField","version","blockVersion","p2pVersion","setVersion","readUint64","setBlockVersion","setP2pVersion","getVersion","getBlockVersion","writeUint64","getP2pVersion","setProto3IntField","key","setKey","setValue","getKey","getValue","time","getTime","Timestamp","chainId","consensusParams","getConsensusParams","validatorsList","toObjectList","getValidatorsList","appStateBytes","getAppStateBytes_asB64","initialHeight","setTime","setChainId","setConsensusParams","addValidators","readBytes","setAppStateBytes","readInt64","setInitialHeight","getChainId","writeRepeatedMessage","getAppStateBytes_asU8","writeBytes","getInitialHeight","writeInt64","setWrapperField","clearTime","hasTime","clearConsensusParams","hasConsensusParams","getRepeatedWrapperField","setValidatorsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearValidatorsList","getAppStateBytes","bytesAsB64","bytesAsU8","setProto3BytesField","data","getData_asB64","path","height","prove","getBooleanFieldWithDefault","setData","setPath","setHeight","readBool","setProve","getData_asU8","getPath","getHeight","getProve","writeBool","getData","setProto3BooleanField","hash","getHash_asB64","header","getHeader","Header","lastCommitInfo","getLastCommitInfo","byzantineValidatorsList","getByzantineValidatorsList","setHash","setHeader","setLastCommitInfo","addByzantineValidators","getHash_asU8","getHash","clearHeader","hasHeader","clearLastCommitInfo","hasLastCommitInfo","setByzantineValidatorsList","clearByzantineValidatorsList","tx","getTx_asB64","type","setTx","readEnum","setType","getTx_asU8","getType","writeEnum","getTx","setProto3EnumField","snapshot","getSnapshot","appHash","getAppHash_asB64","setSnapshot","setAppHash","getAppHash_asU8","clearSnapshot","hasSnapshot","getAppHash","format","chunk","readUint32","setFormat","setChunk","getFormat","writeUint32","getChunk","index","getChunk_asB64","sender","setIndex","setSender","getIndex","getChunk_asU8","getSender","EXCEPTION","exception","getException","setException","clearException","hasException","error","setError","getError","appVersion","lastBlockHeight","lastBlockAppHash","getLastBlockAppHash_asB64","setAppVersion","setLastBlockHeight","setLastBlockAppHash","getAppVersion","getLastBlockHeight","getLastBlockAppHash_asU8","getLastBlockAppHash","code","log","setCode","setLog","getCode","getLog","getKey_asB64","getValue_asB64","proofOps","getProofOps","ProofOps","codespace","setProofOps","setCodespace","getKey_asU8","getValue_asU8","getCodespace","clearProofOps","hasProofOps","eventsList","getEventsList","addEvents","setEventsList","clearEventsList","gasWanted","gasUsed","setGasWanted","setGasUsed","getGasWanted","getGasUsed","validatorUpdatesList","getValidatorUpdatesList","consensusParamUpdates","getConsensusParamUpdates","addValidatorUpdates","setConsensusParamUpdates","setValidatorUpdatesList","clearValidatorUpdatesList","clearConsensusParamUpdates","hasConsensusParamUpdates","retainHeight","setRetainHeight","getRetainHeight","snapshotsList","getSnapshotsList","addSnapshots","setSnapshotsList","clearSnapshotsList","result","setResult","getResult","Result","UNKNOWN","ACCEPT","ABORT","REJECT","REJECT_FORMAT","REJECT_SENDER","refetchChunksList","getRepeatedField","rejectSendersList","values","isDelimited","readPackedUint32","i","addRefetchChunks","addRejectSenders","getRefetchChunksList","writePackedUint32","getRejectSendersList","writeRepeatedString","RETRY","RETRY_SNAPSHOT","REJECT_SNAPSHOT","setRefetchChunksList","setField","addToRepeatedField","clearRefetchChunksList","setRejectSendersList","clearRejectSendersList","block","getBlock","evidence","getEvidence","EvidenceParams","validator","getValidator","ValidatorParams","VersionParams","setBlock","setEvidence","setValidator","clearBlock","hasBlock","clearEvidence","hasEvidence","clearValidator","hasValidator","clearVersion","hasVersion","maxBytes","maxGas","setMaxBytes","setMaxGas","getMaxBytes","getMaxGas","round","votesList","getVotesList","readInt32","setRound","addVotes","getRound","writeInt32","setVotesList","clearVotesList","attributesList","getAttributesList","addAttributes","setAttributesList","clearAttributesList","clearResult","hasResult","address","getAddress_asB64","power","setAddress","setPower","getAddress_asU8","getPower","getAddress","pubKey","getPubKey","PublicKey","setPubKey","clearPubKey","hasPubKey","signedLastBlock","setSignedLastBlock","getSignedLastBlock","totalVotingPower","setTotalVotingPower","getTotalVotingPower","chunks","metadata","getMetadata_asB64","setChunks","setMetadata","getChunks","getMetadata_asU8","getMetadata","CheckTxType","NEW","RECHECK","EvidenceType","DUPLICATE_VOTE","LIGHT_CLIENT_ATTACK","exports"],"sourceRoot":""}