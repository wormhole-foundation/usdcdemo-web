"use strict";(self.webpackChunkwormhole_usdc_demo=self.webpackChunkwormhole_usdc_demo||[]).push([[882],{34779:function(e,t,o){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ABCIApplicationClientImpl=t.Snapshot=t.Evidence=t.VoteInfo=t.ValidatorUpdate=t.Validator=t.TxResult=t.EventAttribute=t.Event=t.LastCommitInfo=t.BlockParams=t.ConsensusParams=t.ResponseApplySnapshotChunk=t.ResponseLoadSnapshotChunk=t.ResponseOfferSnapshot=t.ResponseListSnapshots=t.ResponseCommit=t.ResponseEndBlock=t.ResponseDeliverTx=t.ResponseCheckTx=t.ResponseBeginBlock=t.ResponseQuery=t.ResponseInitChain=t.ResponseSetOption=t.ResponseInfo=t.ResponseFlush=t.ResponseEcho=t.ResponseException=t.Response=t.RequestApplySnapshotChunk=t.RequestLoadSnapshotChunk=t.RequestOfferSnapshot=t.RequestListSnapshots=t.RequestCommit=t.RequestEndBlock=t.RequestDeliverTx=t.RequestCheckTx=t.RequestBeginBlock=t.RequestQuery=t.RequestInitChain=t.RequestSetOption=t.RequestInfo=t.RequestFlush=t.RequestEcho=t.Request=t.responseApplySnapshotChunk_ResultToJSON=t.responseApplySnapshotChunk_ResultFromJSON=t.ResponseApplySnapshotChunk_Result=t.responseOfferSnapshot_ResultToJSON=t.responseOfferSnapshot_ResultFromJSON=t.ResponseOfferSnapshot_Result=t.evidenceTypeToJSON=t.evidenceTypeFromJSON=t.EvidenceType=t.checkTxTypeToJSON=t.checkTxTypeFromJSON=t.CheckTxType=t.protobufPackage=void 0;const s=n(o(43720)),i=n(o(49756)),a=o(1183),r=o(99502),d=o(98747),l=o(6920),c=o(88652);var u,p,h,f;function v(e){switch(e){case 0:case"NEW":return u.NEW;case 1:case"RECHECK":return u.RECHECK;default:return u.UNRECOGNIZED}}function k(e){switch(e){case u.NEW:return"NEW";case u.RECHECK:return"RECHECK";default:return"UNKNOWN"}}function m(e){switch(e){case 0:case"UNKNOWN":return p.UNKNOWN;case 1:case"DUPLICATE_VOTE":return p.DUPLICATE_VOTE;case 2:case"LIGHT_CLIENT_ATTACK":return p.LIGHT_CLIENT_ATTACK;default:return p.UNRECOGNIZED}}function g(e){switch(e){case p.UNKNOWN:return"UNKNOWN";case p.DUPLICATE_VOTE:return"DUPLICATE_VOTE";case p.LIGHT_CLIENT_ATTACK:return"LIGHT_CLIENT_ATTACK";default:return"UNKNOWN"}}function S(e){switch(e){case 0:case"UNKNOWN":return h.UNKNOWN;case 1:case"ACCEPT":return h.ACCEPT;case 2:case"ABORT":return h.ABORT;case 3:case"REJECT":return h.REJECT;case 4:case"REJECT_FORMAT":return h.REJECT_FORMAT;case 5:case"REJECT_SENDER":return h.REJECT_SENDER;default:return h.UNRECOGNIZED}}function O(e){switch(e){case h.UNKNOWN:return"UNKNOWN";case h.ACCEPT:return"ACCEPT";case h.ABORT:return"ABORT";case h.REJECT:return"REJECT";case h.REJECT_FORMAT:return"REJECT_FORMAT";case h.REJECT_SENDER:return"REJECT_SENDER";default:return"UNKNOWN"}}function R(e){switch(e){case 0:case"UNKNOWN":return f.UNKNOWN;case 1:case"ACCEPT":return f.ACCEPT;case 2:case"ABORT":return f.ABORT;case 3:case"RETRY":return f.RETRY;case 4:case"RETRY_SNAPSHOT":return f.RETRY_SNAPSHOT;case 5:case"REJECT_SNAPSHOT":return f.REJECT_SNAPSHOT;default:return f.UNRECOGNIZED}}function b(e){switch(e){case f.UNKNOWN:return"UNKNOWN";case f.ACCEPT:return"ACCEPT";case f.ABORT:return"ABORT";case f.RETRY:return"RETRY";case f.RETRY_SNAPSHOT:return"RETRY_SNAPSHOT";case f.REJECT_SNAPSHOT:return"REJECT_SNAPSHOT";default:return"UNKNOWN"}}t.protobufPackage="tendermint.abci",function(e){e[e.NEW=0]="NEW",e[e.RECHECK=1]="RECHECK",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"}(u=t.CheckTxType||(t.CheckTxType={})),t.checkTxTypeFromJSON=v,t.checkTxTypeToJSON=k,function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.DUPLICATE_VOTE=1]="DUPLICATE_VOTE",e[e.LIGHT_CLIENT_ATTACK=2]="LIGHT_CLIENT_ATTACK",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"}(p=t.EvidenceType||(t.EvidenceType={})),t.evidenceTypeFromJSON=m,t.evidenceTypeToJSON=g,function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.ACCEPT=1]="ACCEPT",e[e.ABORT=2]="ABORT",e[e.REJECT=3]="REJECT",e[e.REJECT_FORMAT=4]="REJECT_FORMAT",e[e.REJECT_SENDER=5]="REJECT_SENDER",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"}(h=t.ResponseOfferSnapshot_Result||(t.ResponseOfferSnapshot_Result={})),t.responseOfferSnapshot_ResultFromJSON=S,t.responseOfferSnapshot_ResultToJSON=O,function(e){e[e.UNKNOWN=0]="UNKNOWN",e[e.ACCEPT=1]="ACCEPT",e[e.ABORT=2]="ABORT",e[e.RETRY=3]="RETRY",e[e.RETRY_SNAPSHOT=4]="RETRY_SNAPSHOT",e[e.REJECT_SNAPSHOT=5]="REJECT_SNAPSHOT",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"}(f=t.ResponseApplySnapshotChunk_Result||(t.ResponseApplySnapshotChunk_Result={})),t.responseApplySnapshotChunk_ResultFromJSON=R,t.responseApplySnapshotChunk_ResultToJSON=b;const y={};t.Request={encode:(e,o=i.default.Writer.create())=>(void 0!==e.echo&&t.RequestEcho.encode(e.echo,o.uint32(10).fork()).ldelim(),void 0!==e.flush&&t.RequestFlush.encode(e.flush,o.uint32(18).fork()).ldelim(),void 0!==e.info&&t.RequestInfo.encode(e.info,o.uint32(26).fork()).ldelim(),void 0!==e.setOption&&t.RequestSetOption.encode(e.setOption,o.uint32(34).fork()).ldelim(),void 0!==e.initChain&&t.RequestInitChain.encode(e.initChain,o.uint32(42).fork()).ldelim(),void 0!==e.query&&t.RequestQuery.encode(e.query,o.uint32(50).fork()).ldelim(),void 0!==e.beginBlock&&t.RequestBeginBlock.encode(e.beginBlock,o.uint32(58).fork()).ldelim(),void 0!==e.checkTx&&t.RequestCheckTx.encode(e.checkTx,o.uint32(66).fork()).ldelim(),void 0!==e.deliverTx&&t.RequestDeliverTx.encode(e.deliverTx,o.uint32(74).fork()).ldelim(),void 0!==e.endBlock&&t.RequestEndBlock.encode(e.endBlock,o.uint32(82).fork()).ldelim(),void 0!==e.commit&&t.RequestCommit.encode(e.commit,o.uint32(90).fork()).ldelim(),void 0!==e.listSnapshots&&t.RequestListSnapshots.encode(e.listSnapshots,o.uint32(98).fork()).ldelim(),void 0!==e.offerSnapshot&&t.RequestOfferSnapshot.encode(e.offerSnapshot,o.uint32(106).fork()).ldelim(),void 0!==e.loadSnapshotChunk&&t.RequestLoadSnapshotChunk.encode(e.loadSnapshotChunk,o.uint32(114).fork()).ldelim(),void 0!==e.applySnapshotChunk&&t.RequestApplySnapshotChunk.encode(e.applySnapshotChunk,o.uint32(122).fork()).ldelim(),o),decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},y);for(;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.echo=t.RequestEcho.decode(n,n.uint32());break;case 2:a.flush=t.RequestFlush.decode(n,n.uint32());break;case 3:a.info=t.RequestInfo.decode(n,n.uint32());break;case 4:a.setOption=t.RequestSetOption.decode(n,n.uint32());break;case 5:a.initChain=t.RequestInitChain.decode(n,n.uint32());break;case 6:a.query=t.RequestQuery.decode(n,n.uint32());break;case 7:a.beginBlock=t.RequestBeginBlock.decode(n,n.uint32());break;case 8:a.checkTx=t.RequestCheckTx.decode(n,n.uint32());break;case 9:a.deliverTx=t.RequestDeliverTx.decode(n,n.uint32());break;case 10:a.endBlock=t.RequestEndBlock.decode(n,n.uint32());break;case 11:a.commit=t.RequestCommit.decode(n,n.uint32());break;case 12:a.listSnapshots=t.RequestListSnapshots.decode(n,n.uint32());break;case 13:a.offerSnapshot=t.RequestOfferSnapshot.decode(n,n.uint32());break;case 14:a.loadSnapshotChunk=t.RequestLoadSnapshotChunk.decode(n,n.uint32());break;case 15:a.applySnapshotChunk=t.RequestApplySnapshotChunk.decode(n,n.uint32());break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},y);return void 0!==e.echo&&null!==e.echo?o.echo=t.RequestEcho.fromJSON(e.echo):o.echo=void 0,void 0!==e.flush&&null!==e.flush?o.flush=t.RequestFlush.fromJSON(e.flush):o.flush=void 0,void 0!==e.info&&null!==e.info?o.info=t.RequestInfo.fromJSON(e.info):o.info=void 0,void 0!==e.setOption&&null!==e.setOption?o.setOption=t.RequestSetOption.fromJSON(e.setOption):o.setOption=void 0,void 0!==e.initChain&&null!==e.initChain?o.initChain=t.RequestInitChain.fromJSON(e.initChain):o.initChain=void 0,void 0!==e.query&&null!==e.query?o.query=t.RequestQuery.fromJSON(e.query):o.query=void 0,void 0!==e.beginBlock&&null!==e.beginBlock?o.beginBlock=t.RequestBeginBlock.fromJSON(e.beginBlock):o.beginBlock=void 0,void 0!==e.checkTx&&null!==e.checkTx?o.checkTx=t.RequestCheckTx.fromJSON(e.checkTx):o.checkTx=void 0,void 0!==e.deliverTx&&null!==e.deliverTx?o.deliverTx=t.RequestDeliverTx.fromJSON(e.deliverTx):o.deliverTx=void 0,void 0!==e.endBlock&&null!==e.endBlock?o.endBlock=t.RequestEndBlock.fromJSON(e.endBlock):o.endBlock=void 0,void 0!==e.commit&&null!==e.commit?o.commit=t.RequestCommit.fromJSON(e.commit):o.commit=void 0,void 0!==e.listSnapshots&&null!==e.listSnapshots?o.listSnapshots=t.RequestListSnapshots.fromJSON(e.listSnapshots):o.listSnapshots=void 0,void 0!==e.offerSnapshot&&null!==e.offerSnapshot?o.offerSnapshot=t.RequestOfferSnapshot.fromJSON(e.offerSnapshot):o.offerSnapshot=void 0,void 0!==e.loadSnapshotChunk&&null!==e.loadSnapshotChunk?o.loadSnapshotChunk=t.RequestLoadSnapshotChunk.fromJSON(e.loadSnapshotChunk):o.loadSnapshotChunk=void 0,void 0!==e.applySnapshotChunk&&null!==e.applySnapshotChunk?o.applySnapshotChunk=t.RequestApplySnapshotChunk.fromJSON(e.applySnapshotChunk):o.applySnapshotChunk=void 0,o},toJSON(e){const o={};return void 0!==e.echo&&(o.echo=e.echo?t.RequestEcho.toJSON(e.echo):void 0),void 0!==e.flush&&(o.flush=e.flush?t.RequestFlush.toJSON(e.flush):void 0),void 0!==e.info&&(o.info=e.info?t.RequestInfo.toJSON(e.info):void 0),void 0!==e.setOption&&(o.setOption=e.setOption?t.RequestSetOption.toJSON(e.setOption):void 0),void 0!==e.initChain&&(o.initChain=e.initChain?t.RequestInitChain.toJSON(e.initChain):void 0),void 0!==e.query&&(o.query=e.query?t.RequestQuery.toJSON(e.query):void 0),void 0!==e.beginBlock&&(o.beginBlock=e.beginBlock?t.RequestBeginBlock.toJSON(e.beginBlock):void 0),void 0!==e.checkTx&&(o.checkTx=e.checkTx?t.RequestCheckTx.toJSON(e.checkTx):void 0),void 0!==e.deliverTx&&(o.deliverTx=e.deliverTx?t.RequestDeliverTx.toJSON(e.deliverTx):void 0),void 0!==e.endBlock&&(o.endBlock=e.endBlock?t.RequestEndBlock.toJSON(e.endBlock):void 0),void 0!==e.commit&&(o.commit=e.commit?t.RequestCommit.toJSON(e.commit):void 0),void 0!==e.listSnapshots&&(o.listSnapshots=e.listSnapshots?t.RequestListSnapshots.toJSON(e.listSnapshots):void 0),void 0!==e.offerSnapshot&&(o.offerSnapshot=e.offerSnapshot?t.RequestOfferSnapshot.toJSON(e.offerSnapshot):void 0),void 0!==e.loadSnapshotChunk&&(o.loadSnapshotChunk=e.loadSnapshotChunk?t.RequestLoadSnapshotChunk.toJSON(e.loadSnapshotChunk):void 0),void 0!==e.applySnapshotChunk&&(o.applySnapshotChunk=e.applySnapshotChunk?t.RequestApplySnapshotChunk.toJSON(e.applySnapshotChunk):void 0),o},fromPartial(e){const o=Object.assign({},y);return void 0!==e.echo&&null!==e.echo?o.echo=t.RequestEcho.fromPartial(e.echo):o.echo=void 0,void 0!==e.flush&&null!==e.flush?o.flush=t.RequestFlush.fromPartial(e.flush):o.flush=void 0,void 0!==e.info&&null!==e.info?o.info=t.RequestInfo.fromPartial(e.info):o.info=void 0,void 0!==e.setOption&&null!==e.setOption?o.setOption=t.RequestSetOption.fromPartial(e.setOption):o.setOption=void 0,void 0!==e.initChain&&null!==e.initChain?o.initChain=t.RequestInitChain.fromPartial(e.initChain):o.initChain=void 0,void 0!==e.query&&null!==e.query?o.query=t.RequestQuery.fromPartial(e.query):o.query=void 0,void 0!==e.beginBlock&&null!==e.beginBlock?o.beginBlock=t.RequestBeginBlock.fromPartial(e.beginBlock):o.beginBlock=void 0,void 0!==e.checkTx&&null!==e.checkTx?o.checkTx=t.RequestCheckTx.fromPartial(e.checkTx):o.checkTx=void 0,void 0!==e.deliverTx&&null!==e.deliverTx?o.deliverTx=t.RequestDeliverTx.fromPartial(e.deliverTx):o.deliverTx=void 0,void 0!==e.endBlock&&null!==e.endBlock?o.endBlock=t.RequestEndBlock.fromPartial(e.endBlock):o.endBlock=void 0,void 0!==e.commit&&null!==e.commit?o.commit=t.RequestCommit.fromPartial(e.commit):o.commit=void 0,void 0!==e.listSnapshots&&null!==e.listSnapshots?o.listSnapshots=t.RequestListSnapshots.fromPartial(e.listSnapshots):o.listSnapshots=void 0,void 0!==e.offerSnapshot&&null!==e.offerSnapshot?o.offerSnapshot=t.RequestOfferSnapshot.fromPartial(e.offerSnapshot):o.offerSnapshot=void 0,void 0!==e.loadSnapshotChunk&&null!==e.loadSnapshotChunk?o.loadSnapshotChunk=t.RequestLoadSnapshotChunk.fromPartial(e.loadSnapshotChunk):o.loadSnapshotChunk=void 0,void 0!==e.applySnapshotChunk&&null!==e.applySnapshotChunk?o.applySnapshotChunk=t.RequestApplySnapshotChunk.fromPartial(e.applySnapshotChunk):o.applySnapshotChunk=void 0,o}};const C={message:""};t.RequestEcho={encode:(e,t=i.default.Writer.create())=>(""!==e.message&&t.uint32(10).string(e.message),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},C);for(;o.pos<n;){const e=o.uint32();if(e>>>3==1)s.message=o.string();else o.skipType(7&e)}return s},fromJSON(e){const t=Object.assign({},C);return void 0!==e.message&&null!==e.message?t.message=String(e.message):t.message="",t},toJSON(e){const t={};return void 0!==e.message&&(t.message=e.message),t},fromPartial(e){const t=Object.assign({},C);return void 0!==e.message&&null!==e.message?t.message=e.message:t.message="",t}};const N={};t.RequestFlush={encode:(e,t=i.default.Writer.create())=>t,decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},N);for(;o.pos<n;){const e=o.uint32();o.skipType(7&e)}return s},fromJSON:e=>Object.assign({},N),toJSON:e=>({}),fromPartial:e=>Object.assign({},N)};const E={version:"",blockVersion:s.default.UZERO,p2pVersion:s.default.UZERO};t.RequestInfo={encode:(e,t=i.default.Writer.create())=>(""!==e.version&&t.uint32(10).string(e.version),e.blockVersion.isZero()||t.uint32(16).uint64(e.blockVersion),e.p2pVersion.isZero()||t.uint32(24).uint64(e.p2pVersion),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},E);for(;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.version=o.string();break;case 2:s.blockVersion=o.uint64();break;case 3:s.p2pVersion=o.uint64();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},E);return void 0!==e.version&&null!==e.version?t.version=String(e.version):t.version="",void 0!==e.blockVersion&&null!==e.blockVersion?t.blockVersion=s.default.fromString(e.blockVersion):t.blockVersion=s.default.UZERO,void 0!==e.p2pVersion&&null!==e.p2pVersion?t.p2pVersion=s.default.fromString(e.p2pVersion):t.p2pVersion=s.default.UZERO,t},toJSON(e){const t={};return void 0!==e.version&&(t.version=e.version),void 0!==e.blockVersion&&(t.blockVersion=(e.blockVersion||s.default.UZERO).toString()),void 0!==e.p2pVersion&&(t.p2pVersion=(e.p2pVersion||s.default.UZERO).toString()),t},fromPartial(e){const t=Object.assign({},E);return void 0!==e.version&&null!==e.version?t.version=e.version:t.version="",void 0!==e.blockVersion&&null!==e.blockVersion?t.blockVersion=e.blockVersion:t.blockVersion=s.default.UZERO,void 0!==e.p2pVersion&&null!==e.p2pVersion?t.p2pVersion=e.p2pVersion:t.p2pVersion=s.default.UZERO,t}};const T={key:"",value:""};t.RequestSetOption={encode:(e,t=i.default.Writer.create())=>(""!==e.key&&t.uint32(10).string(e.key),""!==e.value&&t.uint32(18).string(e.value),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},T);for(;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.key=o.string();break;case 2:s.value=o.string();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},T);return void 0!==e.key&&null!==e.key?t.key=String(e.key):t.key="",void 0!==e.value&&null!==e.value?t.value=String(e.value):t.value="",t},toJSON(e){const t={};return void 0!==e.key&&(t.key=e.key),void 0!==e.value&&(t.value=e.value),t},fromPartial(e){const t=Object.assign({},T);return void 0!==e.key&&null!==e.key?t.key=e.key:t.key="",void 0!==e.value&&null!==e.value?t.value=e.value:t.value="",t}};const x={chainId:"",initialHeight:s.default.ZERO};t.RequestInitChain={encode(e,o=i.default.Writer.create()){void 0!==e.time&&c.Timestamp.encode(ge(e.time),o.uint32(10).fork()).ldelim(),""!==e.chainId&&o.uint32(18).string(e.chainId),void 0!==e.consensusParams&&t.ConsensusParams.encode(e.consensusParams,o.uint32(26).fork()).ldelim();for(const n of e.validators)t.ValidatorUpdate.encode(n,o.uint32(34).fork()).ldelim();return 0!==e.appStateBytes.length&&o.uint32(42).bytes(e.appStateBytes),e.initialHeight.isZero()||o.uint32(48).int64(e.initialHeight),o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},x);for(a.validators=[],a.appStateBytes=new Uint8Array;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.time=Se(c.Timestamp.decode(n,n.uint32()));break;case 2:a.chainId=n.string();break;case 3:a.consensusParams=t.ConsensusParams.decode(n,n.uint32());break;case 4:a.validators.push(t.ValidatorUpdate.decode(n,n.uint32()));break;case 5:a.appStateBytes=n.bytes();break;case 6:a.initialHeight=n.int64();break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},x);if(o.validators=[],o.appStateBytes=new Uint8Array,void 0!==e.time&&null!==e.time?o.time=Oe(e.time):o.time=void 0,void 0!==e.chainId&&null!==e.chainId?o.chainId=String(e.chainId):o.chainId="",void 0!==e.consensusParams&&null!==e.consensusParams?o.consensusParams=t.ConsensusParams.fromJSON(e.consensusParams):o.consensusParams=void 0,void 0!==e.validators&&null!==e.validators)for(const n of e.validators)o.validators.push(t.ValidatorUpdate.fromJSON(n));return void 0!==e.appStateBytes&&null!==e.appStateBytes&&(o.appStateBytes=ve(e.appStateBytes)),void 0!==e.initialHeight&&null!==e.initialHeight?o.initialHeight=s.default.fromString(e.initialHeight):o.initialHeight=s.default.ZERO,o},toJSON(e){const o={};return void 0!==e.time&&(o.time=e.time.toISOString()),void 0!==e.chainId&&(o.chainId=e.chainId),void 0!==e.consensusParams&&(o.consensusParams=e.consensusParams?t.ConsensusParams.toJSON(e.consensusParams):void 0),e.validators?o.validators=e.validators.map((e=>e?t.ValidatorUpdate.toJSON(e):void 0)):o.validators=[],void 0!==e.appStateBytes&&(o.appStateBytes=me(void 0!==e.appStateBytes?e.appStateBytes:new Uint8Array)),void 0!==e.initialHeight&&(o.initialHeight=(e.initialHeight||s.default.ZERO).toString()),o},fromPartial(e){const o=Object.assign({},x);if(o.validators=[],void 0!==e.time&&null!==e.time?o.time=e.time:o.time=void 0,void 0!==e.chainId&&null!==e.chainId?o.chainId=e.chainId:o.chainId="",void 0!==e.consensusParams&&null!==e.consensusParams?o.consensusParams=t.ConsensusParams.fromPartial(e.consensusParams):o.consensusParams=void 0,void 0!==e.validators&&null!==e.validators)for(const n of e.validators)o.validators.push(t.ValidatorUpdate.fromPartial(n));return void 0!==e.appStateBytes&&null!==e.appStateBytes?o.appStateBytes=e.appStateBytes:o.appStateBytes=new Uint8Array,void 0!==e.initialHeight&&null!==e.initialHeight?o.initialHeight=e.initialHeight:o.initialHeight=s.default.ZERO,o}};const B={path:"",height:s.default.ZERO,prove:!1};t.RequestQuery={encode:(e,t=i.default.Writer.create())=>(0!==e.data.length&&t.uint32(10).bytes(e.data),""!==e.path&&t.uint32(18).string(e.path),e.height.isZero()||t.uint32(24).int64(e.height),!0===e.prove&&t.uint32(32).bool(e.prove),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},B);for(s.data=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.data=o.bytes();break;case 2:s.path=o.string();break;case 3:s.height=o.int64();break;case 4:s.prove=o.bool();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},B);return t.data=new Uint8Array,void 0!==e.data&&null!==e.data&&(t.data=ve(e.data)),void 0!==e.path&&null!==e.path?t.path=String(e.path):t.path="",void 0!==e.height&&null!==e.height?t.height=s.default.fromString(e.height):t.height=s.default.ZERO,void 0!==e.prove&&null!==e.prove?t.prove=Boolean(e.prove):t.prove=!1,t},toJSON(e){const t={};return void 0!==e.data&&(t.data=me(void 0!==e.data?e.data:new Uint8Array)),void 0!==e.path&&(t.path=e.path),void 0!==e.height&&(t.height=(e.height||s.default.ZERO).toString()),void 0!==e.prove&&(t.prove=e.prove),t},fromPartial(e){const t=Object.assign({},B);return void 0!==e.data&&null!==e.data?t.data=e.data:t.data=new Uint8Array,void 0!==e.path&&null!==e.path?t.path=e.path:t.path="",void 0!==e.height&&null!==e.height?t.height=e.height:t.height=s.default.ZERO,void 0!==e.prove&&null!==e.prove?t.prove=e.prove:t.prove=!1,t}};const P={};t.RequestBeginBlock={encode(e,o=i.default.Writer.create()){0!==e.hash.length&&o.uint32(10).bytes(e.hash),void 0!==e.header&&a.Header.encode(e.header,o.uint32(18).fork()).ldelim(),void 0!==e.lastCommitInfo&&t.LastCommitInfo.encode(e.lastCommitInfo,o.uint32(26).fork()).ldelim();for(const n of e.byzantineValidators)t.Evidence.encode(n,o.uint32(34).fork()).ldelim();return o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const r=Object.assign({},P);for(r.byzantineValidators=[],r.hash=new Uint8Array;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:r.hash=n.bytes();break;case 2:r.header=a.Header.decode(n,n.uint32());break;case 3:r.lastCommitInfo=t.LastCommitInfo.decode(n,n.uint32());break;case 4:r.byzantineValidators.push(t.Evidence.decode(n,n.uint32()));break;default:n.skipType(7&e)}}return r},fromJSON(e){const o=Object.assign({},P);if(o.byzantineValidators=[],o.hash=new Uint8Array,void 0!==e.hash&&null!==e.hash&&(o.hash=ve(e.hash)),void 0!==e.header&&null!==e.header?o.header=a.Header.fromJSON(e.header):o.header=void 0,void 0!==e.lastCommitInfo&&null!==e.lastCommitInfo?o.lastCommitInfo=t.LastCommitInfo.fromJSON(e.lastCommitInfo):o.lastCommitInfo=void 0,void 0!==e.byzantineValidators&&null!==e.byzantineValidators)for(const n of e.byzantineValidators)o.byzantineValidators.push(t.Evidence.fromJSON(n));return o},toJSON(e){const o={};return void 0!==e.hash&&(o.hash=me(void 0!==e.hash?e.hash:new Uint8Array)),void 0!==e.header&&(o.header=e.header?a.Header.toJSON(e.header):void 0),void 0!==e.lastCommitInfo&&(o.lastCommitInfo=e.lastCommitInfo?t.LastCommitInfo.toJSON(e.lastCommitInfo):void 0),e.byzantineValidators?o.byzantineValidators=e.byzantineValidators.map((e=>e?t.Evidence.toJSON(e):void 0)):o.byzantineValidators=[],o},fromPartial(e){const o=Object.assign({},P);if(o.byzantineValidators=[],void 0!==e.hash&&null!==e.hash?o.hash=e.hash:o.hash=new Uint8Array,void 0!==e.header&&null!==e.header?o.header=a.Header.fromPartial(e.header):o.header=void 0,void 0!==e.lastCommitInfo&&null!==e.lastCommitInfo?o.lastCommitInfo=t.LastCommitInfo.fromPartial(e.lastCommitInfo):o.lastCommitInfo=void 0,void 0!==e.byzantineValidators&&null!==e.byzantineValidators)for(const n of e.byzantineValidators)o.byzantineValidators.push(t.Evidence.fromPartial(n));return o}};const w={type:0};t.RequestCheckTx={encode:(e,t=i.default.Writer.create())=>(0!==e.tx.length&&t.uint32(10).bytes(e.tx),0!==e.type&&t.uint32(16).int32(e.type),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},w);for(s.tx=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.tx=o.bytes();break;case 2:s.type=o.int32();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},w);return t.tx=new Uint8Array,void 0!==e.tx&&null!==e.tx&&(t.tx=ve(e.tx)),void 0!==e.type&&null!==e.type?t.type=v(e.type):t.type=0,t},toJSON(e){const t={};return void 0!==e.tx&&(t.tx=me(void 0!==e.tx?e.tx:new Uint8Array)),void 0!==e.type&&(t.type=k(e.type)),t},fromPartial(e){const t=Object.assign({},w);return void 0!==e.tx&&null!==e.tx?t.tx=e.tx:t.tx=new Uint8Array,void 0!==e.type&&null!==e.type?t.type=e.type:t.type=0,t}};const J={};t.RequestDeliverTx={encode:(e,t=i.default.Writer.create())=>(0!==e.tx.length&&t.uint32(10).bytes(e.tx),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},J);for(s.tx=new Uint8Array;o.pos<n;){const e=o.uint32();if(e>>>3==1)s.tx=o.bytes();else o.skipType(7&e)}return s},fromJSON(e){const t=Object.assign({},J);return t.tx=new Uint8Array,void 0!==e.tx&&null!==e.tx&&(t.tx=ve(e.tx)),t},toJSON(e){const t={};return void 0!==e.tx&&(t.tx=me(void 0!==e.tx?e.tx:new Uint8Array)),t},fromPartial(e){const t=Object.assign({},J);return void 0!==e.tx&&null!==e.tx?t.tx=e.tx:t.tx=new Uint8Array,t}};const A={height:s.default.ZERO};t.RequestEndBlock={encode:(e,t=i.default.Writer.create())=>(e.height.isZero()||t.uint32(8).int64(e.height),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},A);for(;o.pos<n;){const e=o.uint32();if(e>>>3==1)s.height=o.int64();else o.skipType(7&e)}return s},fromJSON(e){const t=Object.assign({},A);return void 0!==e.height&&null!==e.height?t.height=s.default.fromString(e.height):t.height=s.default.ZERO,t},toJSON(e){const t={};return void 0!==e.height&&(t.height=(e.height||s.default.ZERO).toString()),t},fromPartial(e){const t=Object.assign({},A);return void 0!==e.height&&null!==e.height?t.height=e.height:t.height=s.default.ZERO,t}};const U={};t.RequestCommit={encode:(e,t=i.default.Writer.create())=>t,decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},U);for(;o.pos<n;){const e=o.uint32();o.skipType(7&e)}return s},fromJSON:e=>Object.assign({},U),toJSON:e=>({}),fromPartial:e=>Object.assign({},U)};const q={};t.RequestListSnapshots={encode:(e,t=i.default.Writer.create())=>t,decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},q);for(;o.pos<n;){const e=o.uint32();o.skipType(7&e)}return s},fromJSON:e=>Object.assign({},q),toJSON:e=>({}),fromPartial:e=>Object.assign({},q)};const j={};t.RequestOfferSnapshot={encode:(e,o=i.default.Writer.create())=>(void 0!==e.snapshot&&t.Snapshot.encode(e.snapshot,o.uint32(10).fork()).ldelim(),0!==e.appHash.length&&o.uint32(18).bytes(e.appHash),o),decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},j);for(a.appHash=new Uint8Array;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.snapshot=t.Snapshot.decode(n,n.uint32());break;case 2:a.appHash=n.bytes();break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},j);return o.appHash=new Uint8Array,void 0!==e.snapshot&&null!==e.snapshot?o.snapshot=t.Snapshot.fromJSON(e.snapshot):o.snapshot=void 0,void 0!==e.appHash&&null!==e.appHash&&(o.appHash=ve(e.appHash)),o},toJSON(e){const o={};return void 0!==e.snapshot&&(o.snapshot=e.snapshot?t.Snapshot.toJSON(e.snapshot):void 0),void 0!==e.appHash&&(o.appHash=me(void 0!==e.appHash?e.appHash:new Uint8Array)),o},fromPartial(e){const o=Object.assign({},j);return void 0!==e.snapshot&&null!==e.snapshot?o.snapshot=t.Snapshot.fromPartial(e.snapshot):o.snapshot=void 0,void 0!==e.appHash&&null!==e.appHash?o.appHash=e.appHash:o.appHash=new Uint8Array,o}};const I={height:s.default.UZERO,format:0,chunk:0};t.RequestLoadSnapshotChunk={encode:(e,t=i.default.Writer.create())=>(e.height.isZero()||t.uint32(8).uint64(e.height),0!==e.format&&t.uint32(16).uint32(e.format),0!==e.chunk&&t.uint32(24).uint32(e.chunk),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},I);for(;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.height=o.uint64();break;case 2:s.format=o.uint32();break;case 3:s.chunk=o.uint32();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},I);return void 0!==e.height&&null!==e.height?t.height=s.default.fromString(e.height):t.height=s.default.UZERO,void 0!==e.format&&null!==e.format?t.format=Number(e.format):t.format=0,void 0!==e.chunk&&null!==e.chunk?t.chunk=Number(e.chunk):t.chunk=0,t},toJSON(e){const t={};return void 0!==e.height&&(t.height=(e.height||s.default.UZERO).toString()),void 0!==e.format&&(t.format=e.format),void 0!==e.chunk&&(t.chunk=e.chunk),t},fromPartial(e){const t=Object.assign({},I);return void 0!==e.height&&null!==e.height?t.height=e.height:t.height=s.default.UZERO,void 0!==e.format&&null!==e.format?t.format=e.format:t.format=0,void 0!==e.chunk&&null!==e.chunk?t.chunk=e.chunk:t.chunk=0,t}};const V={index:0,sender:""};t.RequestApplySnapshotChunk={encode:(e,t=i.default.Writer.create())=>(0!==e.index&&t.uint32(8).uint32(e.index),0!==e.chunk.length&&t.uint32(18).bytes(e.chunk),""!==e.sender&&t.uint32(26).string(e.sender),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},V);for(s.chunk=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.index=o.uint32();break;case 2:s.chunk=o.bytes();break;case 3:s.sender=o.string();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},V);return t.chunk=new Uint8Array,void 0!==e.index&&null!==e.index?t.index=Number(e.index):t.index=0,void 0!==e.chunk&&null!==e.chunk&&(t.chunk=ve(e.chunk)),void 0!==e.sender&&null!==e.sender?t.sender=String(e.sender):t.sender="",t},toJSON(e){const t={};return void 0!==e.index&&(t.index=e.index),void 0!==e.chunk&&(t.chunk=me(void 0!==e.chunk?e.chunk:new Uint8Array)),void 0!==e.sender&&(t.sender=e.sender),t},fromPartial(e){const t=Object.assign({},V);return void 0!==e.index&&null!==e.index?t.index=e.index:t.index=0,void 0!==e.chunk&&null!==e.chunk?t.chunk=e.chunk:t.chunk=new Uint8Array,void 0!==e.sender&&null!==e.sender?t.sender=e.sender:t.sender="",t}};const H={};t.Response={encode:(e,o=i.default.Writer.create())=>(void 0!==e.exception&&t.ResponseException.encode(e.exception,o.uint32(10).fork()).ldelim(),void 0!==e.echo&&t.ResponseEcho.encode(e.echo,o.uint32(18).fork()).ldelim(),void 0!==e.flush&&t.ResponseFlush.encode(e.flush,o.uint32(26).fork()).ldelim(),void 0!==e.info&&t.ResponseInfo.encode(e.info,o.uint32(34).fork()).ldelim(),void 0!==e.setOption&&t.ResponseSetOption.encode(e.setOption,o.uint32(42).fork()).ldelim(),void 0!==e.initChain&&t.ResponseInitChain.encode(e.initChain,o.uint32(50).fork()).ldelim(),void 0!==e.query&&t.ResponseQuery.encode(e.query,o.uint32(58).fork()).ldelim(),void 0!==e.beginBlock&&t.ResponseBeginBlock.encode(e.beginBlock,o.uint32(66).fork()).ldelim(),void 0!==e.checkTx&&t.ResponseCheckTx.encode(e.checkTx,o.uint32(74).fork()).ldelim(),void 0!==e.deliverTx&&t.ResponseDeliverTx.encode(e.deliverTx,o.uint32(82).fork()).ldelim(),void 0!==e.endBlock&&t.ResponseEndBlock.encode(e.endBlock,o.uint32(90).fork()).ldelim(),void 0!==e.commit&&t.ResponseCommit.encode(e.commit,o.uint32(98).fork()).ldelim(),void 0!==e.listSnapshots&&t.ResponseListSnapshots.encode(e.listSnapshots,o.uint32(106).fork()).ldelim(),void 0!==e.offerSnapshot&&t.ResponseOfferSnapshot.encode(e.offerSnapshot,o.uint32(114).fork()).ldelim(),void 0!==e.loadSnapshotChunk&&t.ResponseLoadSnapshotChunk.encode(e.loadSnapshotChunk,o.uint32(122).fork()).ldelim(),void 0!==e.applySnapshotChunk&&t.ResponseApplySnapshotChunk.encode(e.applySnapshotChunk,o.uint32(130).fork()).ldelim(),o),decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},H);for(;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.exception=t.ResponseException.decode(n,n.uint32());break;case 2:a.echo=t.ResponseEcho.decode(n,n.uint32());break;case 3:a.flush=t.ResponseFlush.decode(n,n.uint32());break;case 4:a.info=t.ResponseInfo.decode(n,n.uint32());break;case 5:a.setOption=t.ResponseSetOption.decode(n,n.uint32());break;case 6:a.initChain=t.ResponseInitChain.decode(n,n.uint32());break;case 7:a.query=t.ResponseQuery.decode(n,n.uint32());break;case 8:a.beginBlock=t.ResponseBeginBlock.decode(n,n.uint32());break;case 9:a.checkTx=t.ResponseCheckTx.decode(n,n.uint32());break;case 10:a.deliverTx=t.ResponseDeliverTx.decode(n,n.uint32());break;case 11:a.endBlock=t.ResponseEndBlock.decode(n,n.uint32());break;case 12:a.commit=t.ResponseCommit.decode(n,n.uint32());break;case 13:a.listSnapshots=t.ResponseListSnapshots.decode(n,n.uint32());break;case 14:a.offerSnapshot=t.ResponseOfferSnapshot.decode(n,n.uint32());break;case 15:a.loadSnapshotChunk=t.ResponseLoadSnapshotChunk.decode(n,n.uint32());break;case 16:a.applySnapshotChunk=t.ResponseApplySnapshotChunk.decode(n,n.uint32());break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},H);return void 0!==e.exception&&null!==e.exception?o.exception=t.ResponseException.fromJSON(e.exception):o.exception=void 0,void 0!==e.echo&&null!==e.echo?o.echo=t.ResponseEcho.fromJSON(e.echo):o.echo=void 0,void 0!==e.flush&&null!==e.flush?o.flush=t.ResponseFlush.fromJSON(e.flush):o.flush=void 0,void 0!==e.info&&null!==e.info?o.info=t.ResponseInfo.fromJSON(e.info):o.info=void 0,void 0!==e.setOption&&null!==e.setOption?o.setOption=t.ResponseSetOption.fromJSON(e.setOption):o.setOption=void 0,void 0!==e.initChain&&null!==e.initChain?o.initChain=t.ResponseInitChain.fromJSON(e.initChain):o.initChain=void 0,void 0!==e.query&&null!==e.query?o.query=t.ResponseQuery.fromJSON(e.query):o.query=void 0,void 0!==e.beginBlock&&null!==e.beginBlock?o.beginBlock=t.ResponseBeginBlock.fromJSON(e.beginBlock):o.beginBlock=void 0,void 0!==e.checkTx&&null!==e.checkTx?o.checkTx=t.ResponseCheckTx.fromJSON(e.checkTx):o.checkTx=void 0,void 0!==e.deliverTx&&null!==e.deliverTx?o.deliverTx=t.ResponseDeliverTx.fromJSON(e.deliverTx):o.deliverTx=void 0,void 0!==e.endBlock&&null!==e.endBlock?o.endBlock=t.ResponseEndBlock.fromJSON(e.endBlock):o.endBlock=void 0,void 0!==e.commit&&null!==e.commit?o.commit=t.ResponseCommit.fromJSON(e.commit):o.commit=void 0,void 0!==e.listSnapshots&&null!==e.listSnapshots?o.listSnapshots=t.ResponseListSnapshots.fromJSON(e.listSnapshots):o.listSnapshots=void 0,void 0!==e.offerSnapshot&&null!==e.offerSnapshot?o.offerSnapshot=t.ResponseOfferSnapshot.fromJSON(e.offerSnapshot):o.offerSnapshot=void 0,void 0!==e.loadSnapshotChunk&&null!==e.loadSnapshotChunk?o.loadSnapshotChunk=t.ResponseLoadSnapshotChunk.fromJSON(e.loadSnapshotChunk):o.loadSnapshotChunk=void 0,void 0!==e.applySnapshotChunk&&null!==e.applySnapshotChunk?o.applySnapshotChunk=t.ResponseApplySnapshotChunk.fromJSON(e.applySnapshotChunk):o.applySnapshotChunk=void 0,o},toJSON(e){const o={};return void 0!==e.exception&&(o.exception=e.exception?t.ResponseException.toJSON(e.exception):void 0),void 0!==e.echo&&(o.echo=e.echo?t.ResponseEcho.toJSON(e.echo):void 0),void 0!==e.flush&&(o.flush=e.flush?t.ResponseFlush.toJSON(e.flush):void 0),void 0!==e.info&&(o.info=e.info?t.ResponseInfo.toJSON(e.info):void 0),void 0!==e.setOption&&(o.setOption=e.setOption?t.ResponseSetOption.toJSON(e.setOption):void 0),void 0!==e.initChain&&(o.initChain=e.initChain?t.ResponseInitChain.toJSON(e.initChain):void 0),void 0!==e.query&&(o.query=e.query?t.ResponseQuery.toJSON(e.query):void 0),void 0!==e.beginBlock&&(o.beginBlock=e.beginBlock?t.ResponseBeginBlock.toJSON(e.beginBlock):void 0),void 0!==e.checkTx&&(o.checkTx=e.checkTx?t.ResponseCheckTx.toJSON(e.checkTx):void 0),void 0!==e.deliverTx&&(o.deliverTx=e.deliverTx?t.ResponseDeliverTx.toJSON(e.deliverTx):void 0),void 0!==e.endBlock&&(o.endBlock=e.endBlock?t.ResponseEndBlock.toJSON(e.endBlock):void 0),void 0!==e.commit&&(o.commit=e.commit?t.ResponseCommit.toJSON(e.commit):void 0),void 0!==e.listSnapshots&&(o.listSnapshots=e.listSnapshots?t.ResponseListSnapshots.toJSON(e.listSnapshots):void 0),void 0!==e.offerSnapshot&&(o.offerSnapshot=e.offerSnapshot?t.ResponseOfferSnapshot.toJSON(e.offerSnapshot):void 0),void 0!==e.loadSnapshotChunk&&(o.loadSnapshotChunk=e.loadSnapshotChunk?t.ResponseLoadSnapshotChunk.toJSON(e.loadSnapshotChunk):void 0),void 0!==e.applySnapshotChunk&&(o.applySnapshotChunk=e.applySnapshotChunk?t.ResponseApplySnapshotChunk.toJSON(e.applySnapshotChunk):void 0),o},fromPartial(e){const o=Object.assign({},H);return void 0!==e.exception&&null!==e.exception?o.exception=t.ResponseException.fromPartial(e.exception):o.exception=void 0,void 0!==e.echo&&null!==e.echo?o.echo=t.ResponseEcho.fromPartial(e.echo):o.echo=void 0,void 0!==e.flush&&null!==e.flush?o.flush=t.ResponseFlush.fromPartial(e.flush):o.flush=void 0,void 0!==e.info&&null!==e.info?o.info=t.ResponseInfo.fromPartial(e.info):o.info=void 0,void 0!==e.setOption&&null!==e.setOption?o.setOption=t.ResponseSetOption.fromPartial(e.setOption):o.setOption=void 0,void 0!==e.initChain&&null!==e.initChain?o.initChain=t.ResponseInitChain.fromPartial(e.initChain):o.initChain=void 0,void 0!==e.query&&null!==e.query?o.query=t.ResponseQuery.fromPartial(e.query):o.query=void 0,void 0!==e.beginBlock&&null!==e.beginBlock?o.beginBlock=t.ResponseBeginBlock.fromPartial(e.beginBlock):o.beginBlock=void 0,void 0!==e.checkTx&&null!==e.checkTx?o.checkTx=t.ResponseCheckTx.fromPartial(e.checkTx):o.checkTx=void 0,void 0!==e.deliverTx&&null!==e.deliverTx?o.deliverTx=t.ResponseDeliverTx.fromPartial(e.deliverTx):o.deliverTx=void 0,void 0!==e.endBlock&&null!==e.endBlock?o.endBlock=t.ResponseEndBlock.fromPartial(e.endBlock):o.endBlock=void 0,void 0!==e.commit&&null!==e.commit?o.commit=t.ResponseCommit.fromPartial(e.commit):o.commit=void 0,void 0!==e.listSnapshots&&null!==e.listSnapshots?o.listSnapshots=t.ResponseListSnapshots.fromPartial(e.listSnapshots):o.listSnapshots=void 0,void 0!==e.offerSnapshot&&null!==e.offerSnapshot?o.offerSnapshot=t.ResponseOfferSnapshot.fromPartial(e.offerSnapshot):o.offerSnapshot=void 0,void 0!==e.loadSnapshotChunk&&null!==e.loadSnapshotChunk?o.loadSnapshotChunk=t.ResponseLoadSnapshotChunk.fromPartial(e.loadSnapshotChunk):o.loadSnapshotChunk=void 0,void 0!==e.applySnapshotChunk&&null!==e.applySnapshotChunk?o.applySnapshotChunk=t.ResponseApplySnapshotChunk.fromPartial(e.applySnapshotChunk):o.applySnapshotChunk=void 0,o}};const Z={error:""};t.ResponseException={encode:(e,t=i.default.Writer.create())=>(""!==e.error&&t.uint32(10).string(e.error),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},Z);for(;o.pos<n;){const e=o.uint32();if(e>>>3==1)s.error=o.string();else o.skipType(7&e)}return s},fromJSON(e){const t=Object.assign({},Z);return void 0!==e.error&&null!==e.error?t.error=String(e.error):t.error="",t},toJSON(e){const t={};return void 0!==e.error&&(t.error=e.error),t},fromPartial(e){const t=Object.assign({},Z);return void 0!==e.error&&null!==e.error?t.error=e.error:t.error="",t}};const W={message:""};t.ResponseEcho={encode:(e,t=i.default.Writer.create())=>(""!==e.message&&t.uint32(10).string(e.message),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},W);for(;o.pos<n;){const e=o.uint32();if(e>>>3==1)s.message=o.string();else o.skipType(7&e)}return s},fromJSON(e){const t=Object.assign({},W);return void 0!==e.message&&null!==e.message?t.message=String(e.message):t.message="",t},toJSON(e){const t={};return void 0!==e.message&&(t.message=e.message),t},fromPartial(e){const t=Object.assign({},W);return void 0!==e.message&&null!==e.message?t.message=e.message:t.message="",t}};const L={};t.ResponseFlush={encode:(e,t=i.default.Writer.create())=>t,decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},L);for(;o.pos<n;){const e=o.uint32();o.skipType(7&e)}return s},fromJSON:e=>Object.assign({},L),toJSON:e=>({}),fromPartial:e=>Object.assign({},L)};const _={data:"",version:"",appVersion:s.default.UZERO,lastBlockHeight:s.default.ZERO};t.ResponseInfo={encode:(e,t=i.default.Writer.create())=>(""!==e.data&&t.uint32(10).string(e.data),""!==e.version&&t.uint32(18).string(e.version),e.appVersion.isZero()||t.uint32(24).uint64(e.appVersion),e.lastBlockHeight.isZero()||t.uint32(32).int64(e.lastBlockHeight),0!==e.lastBlockAppHash.length&&t.uint32(42).bytes(e.lastBlockAppHash),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},_);for(s.lastBlockAppHash=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.data=o.string();break;case 2:s.version=o.string();break;case 3:s.appVersion=o.uint64();break;case 4:s.lastBlockHeight=o.int64();break;case 5:s.lastBlockAppHash=o.bytes();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},_);return t.lastBlockAppHash=new Uint8Array,void 0!==e.data&&null!==e.data?t.data=String(e.data):t.data="",void 0!==e.version&&null!==e.version?t.version=String(e.version):t.version="",void 0!==e.appVersion&&null!==e.appVersion?t.appVersion=s.default.fromString(e.appVersion):t.appVersion=s.default.UZERO,void 0!==e.lastBlockHeight&&null!==e.lastBlockHeight?t.lastBlockHeight=s.default.fromString(e.lastBlockHeight):t.lastBlockHeight=s.default.ZERO,void 0!==e.lastBlockAppHash&&null!==e.lastBlockAppHash&&(t.lastBlockAppHash=ve(e.lastBlockAppHash)),t},toJSON(e){const t={};return void 0!==e.data&&(t.data=e.data),void 0!==e.version&&(t.version=e.version),void 0!==e.appVersion&&(t.appVersion=(e.appVersion||s.default.UZERO).toString()),void 0!==e.lastBlockHeight&&(t.lastBlockHeight=(e.lastBlockHeight||s.default.ZERO).toString()),void 0!==e.lastBlockAppHash&&(t.lastBlockAppHash=me(void 0!==e.lastBlockAppHash?e.lastBlockAppHash:new Uint8Array)),t},fromPartial(e){const t=Object.assign({},_);return void 0!==e.data&&null!==e.data?t.data=e.data:t.data="",void 0!==e.version&&null!==e.version?t.version=e.version:t.version="",void 0!==e.appVersion&&null!==e.appVersion?t.appVersion=e.appVersion:t.appVersion=s.default.UZERO,void 0!==e.lastBlockHeight&&null!==e.lastBlockHeight?t.lastBlockHeight=e.lastBlockHeight:t.lastBlockHeight=s.default.ZERO,void 0!==e.lastBlockAppHash&&null!==e.lastBlockAppHash?t.lastBlockAppHash=e.lastBlockAppHash:t.lastBlockAppHash=new Uint8Array,t}};const K={code:0,log:"",info:""};t.ResponseSetOption={encode:(e,t=i.default.Writer.create())=>(0!==e.code&&t.uint32(8).uint32(e.code),""!==e.log&&t.uint32(26).string(e.log),""!==e.info&&t.uint32(34).string(e.info),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},K);for(;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.code=o.uint32();break;case 3:s.log=o.string();break;case 4:s.info=o.string();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},K);return void 0!==e.code&&null!==e.code?t.code=Number(e.code):t.code=0,void 0!==e.log&&null!==e.log?t.log=String(e.log):t.log="",void 0!==e.info&&null!==e.info?t.info=String(e.info):t.info="",t},toJSON(e){const t={};return void 0!==e.code&&(t.code=e.code),void 0!==e.log&&(t.log=e.log),void 0!==e.info&&(t.info=e.info),t},fromPartial(e){const t=Object.assign({},K);return void 0!==e.code&&null!==e.code?t.code=e.code:t.code=0,void 0!==e.log&&null!==e.log?t.log=e.log:t.log="",void 0!==e.info&&null!==e.info?t.info=e.info:t.info="",t}};const D={};t.ResponseInitChain={encode(e,o=i.default.Writer.create()){void 0!==e.consensusParams&&t.ConsensusParams.encode(e.consensusParams,o.uint32(10).fork()).ldelim();for(const n of e.validators)t.ValidatorUpdate.encode(n,o.uint32(18).fork()).ldelim();return 0!==e.appHash.length&&o.uint32(26).bytes(e.appHash),o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},D);for(a.validators=[],a.appHash=new Uint8Array;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.consensusParams=t.ConsensusParams.decode(n,n.uint32());break;case 2:a.validators.push(t.ValidatorUpdate.decode(n,n.uint32()));break;case 3:a.appHash=n.bytes();break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},D);if(o.validators=[],o.appHash=new Uint8Array,void 0!==e.consensusParams&&null!==e.consensusParams?o.consensusParams=t.ConsensusParams.fromJSON(e.consensusParams):o.consensusParams=void 0,void 0!==e.validators&&null!==e.validators)for(const n of e.validators)o.validators.push(t.ValidatorUpdate.fromJSON(n));return void 0!==e.appHash&&null!==e.appHash&&(o.appHash=ve(e.appHash)),o},toJSON(e){const o={};return void 0!==e.consensusParams&&(o.consensusParams=e.consensusParams?t.ConsensusParams.toJSON(e.consensusParams):void 0),e.validators?o.validators=e.validators.map((e=>e?t.ValidatorUpdate.toJSON(e):void 0)):o.validators=[],void 0!==e.appHash&&(o.appHash=me(void 0!==e.appHash?e.appHash:new Uint8Array)),o},fromPartial(e){const o=Object.assign({},D);if(o.validators=[],void 0!==e.consensusParams&&null!==e.consensusParams?o.consensusParams=t.ConsensusParams.fromPartial(e.consensusParams):o.consensusParams=void 0,void 0!==e.validators&&null!==e.validators)for(const n of e.validators)o.validators.push(t.ValidatorUpdate.fromPartial(n));return void 0!==e.appHash&&null!==e.appHash?o.appHash=e.appHash:o.appHash=new Uint8Array,o}};const G={code:0,log:"",info:"",index:s.default.ZERO,height:s.default.ZERO,codespace:""};t.ResponseQuery={encode:(e,t=i.default.Writer.create())=>(0!==e.code&&t.uint32(8).uint32(e.code),""!==e.log&&t.uint32(26).string(e.log),""!==e.info&&t.uint32(34).string(e.info),e.index.isZero()||t.uint32(40).int64(e.index),0!==e.key.length&&t.uint32(50).bytes(e.key),0!==e.value.length&&t.uint32(58).bytes(e.value),void 0!==e.proofOps&&r.ProofOps.encode(e.proofOps,t.uint32(66).fork()).ldelim(),e.height.isZero()||t.uint32(72).int64(e.height),""!==e.codespace&&t.uint32(82).string(e.codespace),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},G);for(s.key=new Uint8Array,s.value=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.code=o.uint32();break;case 3:s.log=o.string();break;case 4:s.info=o.string();break;case 5:s.index=o.int64();break;case 6:s.key=o.bytes();break;case 7:s.value=o.bytes();break;case 8:s.proofOps=r.ProofOps.decode(o,o.uint32());break;case 9:s.height=o.int64();break;case 10:s.codespace=o.string();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},G);return t.key=new Uint8Array,t.value=new Uint8Array,void 0!==e.code&&null!==e.code?t.code=Number(e.code):t.code=0,void 0!==e.log&&null!==e.log?t.log=String(e.log):t.log="",void 0!==e.info&&null!==e.info?t.info=String(e.info):t.info="",void 0!==e.index&&null!==e.index?t.index=s.default.fromString(e.index):t.index=s.default.ZERO,void 0!==e.key&&null!==e.key&&(t.key=ve(e.key)),void 0!==e.value&&null!==e.value&&(t.value=ve(e.value)),void 0!==e.proofOps&&null!==e.proofOps?t.proofOps=r.ProofOps.fromJSON(e.proofOps):t.proofOps=void 0,void 0!==e.height&&null!==e.height?t.height=s.default.fromString(e.height):t.height=s.default.ZERO,void 0!==e.codespace&&null!==e.codespace?t.codespace=String(e.codespace):t.codespace="",t},toJSON(e){const t={};return void 0!==e.code&&(t.code=e.code),void 0!==e.log&&(t.log=e.log),void 0!==e.info&&(t.info=e.info),void 0!==e.index&&(t.index=(e.index||s.default.ZERO).toString()),void 0!==e.key&&(t.key=me(void 0!==e.key?e.key:new Uint8Array)),void 0!==e.value&&(t.value=me(void 0!==e.value?e.value:new Uint8Array)),void 0!==e.proofOps&&(t.proofOps=e.proofOps?r.ProofOps.toJSON(e.proofOps):void 0),void 0!==e.height&&(t.height=(e.height||s.default.ZERO).toString()),void 0!==e.codespace&&(t.codespace=e.codespace),t},fromPartial(e){const t=Object.assign({},G);return void 0!==e.code&&null!==e.code?t.code=e.code:t.code=0,void 0!==e.log&&null!==e.log?t.log=e.log:t.log="",void 0!==e.info&&null!==e.info?t.info=e.info:t.info="",void 0!==e.index&&null!==e.index?t.index=e.index:t.index=s.default.ZERO,void 0!==e.key&&null!==e.key?t.key=e.key:t.key=new Uint8Array,void 0!==e.value&&null!==e.value?t.value=e.value:t.value=new Uint8Array,void 0!==e.proofOps&&null!==e.proofOps?t.proofOps=r.ProofOps.fromPartial(e.proofOps):t.proofOps=void 0,void 0!==e.height&&null!==e.height?t.height=e.height:t.height=s.default.ZERO,void 0!==e.codespace&&null!==e.codespace?t.codespace=e.codespace:t.codespace="",t}};const F={};t.ResponseBeginBlock={encode(e,o=i.default.Writer.create()){for(const n of e.events)t.Event.encode(n,o.uint32(10).fork()).ldelim();return o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},F);for(a.events=[];n.pos<s;){const e=n.uint32();if(e>>>3==1)a.events.push(t.Event.decode(n,n.uint32()));else n.skipType(7&e)}return a},fromJSON(e){const o=Object.assign({},F);if(o.events=[],void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromJSON(n));return o},toJSON(e){const o={};return e.events?o.events=e.events.map((e=>e?t.Event.toJSON(e):void 0)):o.events=[],o},fromPartial(e){const o=Object.assign({},F);if(o.events=[],void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromPartial(n));return o}};const Q={code:0,log:"",info:"",gasWanted:s.default.ZERO,gasUsed:s.default.ZERO,codespace:""};t.ResponseCheckTx={encode(e,o=i.default.Writer.create()){0!==e.code&&o.uint32(8).uint32(e.code),0!==e.data.length&&o.uint32(18).bytes(e.data),""!==e.log&&o.uint32(26).string(e.log),""!==e.info&&o.uint32(34).string(e.info),e.gasWanted.isZero()||o.uint32(40).int64(e.gasWanted),e.gasUsed.isZero()||o.uint32(48).int64(e.gasUsed);for(const n of e.events)t.Event.encode(n,o.uint32(58).fork()).ldelim();return""!==e.codespace&&o.uint32(66).string(e.codespace),o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},Q);for(a.events=[],a.data=new Uint8Array;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.code=n.uint32();break;case 2:a.data=n.bytes();break;case 3:a.log=n.string();break;case 4:a.info=n.string();break;case 5:a.gasWanted=n.int64();break;case 6:a.gasUsed=n.int64();break;case 7:a.events.push(t.Event.decode(n,n.uint32()));break;case 8:a.codespace=n.string();break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},Q);if(o.events=[],o.data=new Uint8Array,void 0!==e.code&&null!==e.code?o.code=Number(e.code):o.code=0,void 0!==e.data&&null!==e.data&&(o.data=ve(e.data)),void 0!==e.log&&null!==e.log?o.log=String(e.log):o.log="",void 0!==e.info&&null!==e.info?o.info=String(e.info):o.info="",void 0!==e.gasWanted&&null!==e.gasWanted?o.gasWanted=s.default.fromString(e.gasWanted):o.gasWanted=s.default.ZERO,void 0!==e.gasUsed&&null!==e.gasUsed?o.gasUsed=s.default.fromString(e.gasUsed):o.gasUsed=s.default.ZERO,void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromJSON(n));return void 0!==e.codespace&&null!==e.codespace?o.codespace=String(e.codespace):o.codespace="",o},toJSON(e){const o={};return void 0!==e.code&&(o.code=e.code),void 0!==e.data&&(o.data=me(void 0!==e.data?e.data:new Uint8Array)),void 0!==e.log&&(o.log=e.log),void 0!==e.info&&(o.info=e.info),void 0!==e.gasWanted&&(o.gasWanted=(e.gasWanted||s.default.ZERO).toString()),void 0!==e.gasUsed&&(o.gasUsed=(e.gasUsed||s.default.ZERO).toString()),e.events?o.events=e.events.map((e=>e?t.Event.toJSON(e):void 0)):o.events=[],void 0!==e.codespace&&(o.codespace=e.codespace),o},fromPartial(e){const o=Object.assign({},Q);if(o.events=[],void 0!==e.code&&null!==e.code?o.code=e.code:o.code=0,void 0!==e.data&&null!==e.data?o.data=e.data:o.data=new Uint8Array,void 0!==e.log&&null!==e.log?o.log=e.log:o.log="",void 0!==e.info&&null!==e.info?o.info=e.info:o.info="",void 0!==e.gasWanted&&null!==e.gasWanted?o.gasWanted=e.gasWanted:o.gasWanted=s.default.ZERO,void 0!==e.gasUsed&&null!==e.gasUsed?o.gasUsed=e.gasUsed:o.gasUsed=s.default.ZERO,void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromPartial(n));return void 0!==e.codespace&&null!==e.codespace?o.codespace=e.codespace:o.codespace="",o}};const z={code:0,log:"",info:"",gasWanted:s.default.ZERO,gasUsed:s.default.ZERO,codespace:""};t.ResponseDeliverTx={encode(e,o=i.default.Writer.create()){0!==e.code&&o.uint32(8).uint32(e.code),0!==e.data.length&&o.uint32(18).bytes(e.data),""!==e.log&&o.uint32(26).string(e.log),""!==e.info&&o.uint32(34).string(e.info),e.gasWanted.isZero()||o.uint32(40).int64(e.gasWanted),e.gasUsed.isZero()||o.uint32(48).int64(e.gasUsed);for(const n of e.events)t.Event.encode(n,o.uint32(58).fork()).ldelim();return""!==e.codespace&&o.uint32(66).string(e.codespace),o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},z);for(a.events=[],a.data=new Uint8Array;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.code=n.uint32();break;case 2:a.data=n.bytes();break;case 3:a.log=n.string();break;case 4:a.info=n.string();break;case 5:a.gasWanted=n.int64();break;case 6:a.gasUsed=n.int64();break;case 7:a.events.push(t.Event.decode(n,n.uint32()));break;case 8:a.codespace=n.string();break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},z);if(o.events=[],o.data=new Uint8Array,void 0!==e.code&&null!==e.code?o.code=Number(e.code):o.code=0,void 0!==e.data&&null!==e.data&&(o.data=ve(e.data)),void 0!==e.log&&null!==e.log?o.log=String(e.log):o.log="",void 0!==e.info&&null!==e.info?o.info=String(e.info):o.info="",void 0!==e.gasWanted&&null!==e.gasWanted?o.gasWanted=s.default.fromString(e.gasWanted):o.gasWanted=s.default.ZERO,void 0!==e.gasUsed&&null!==e.gasUsed?o.gasUsed=s.default.fromString(e.gasUsed):o.gasUsed=s.default.ZERO,void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromJSON(n));return void 0!==e.codespace&&null!==e.codespace?o.codespace=String(e.codespace):o.codespace="",o},toJSON(e){const o={};return void 0!==e.code&&(o.code=e.code),void 0!==e.data&&(o.data=me(void 0!==e.data?e.data:new Uint8Array)),void 0!==e.log&&(o.log=e.log),void 0!==e.info&&(o.info=e.info),void 0!==e.gasWanted&&(o.gasWanted=(e.gasWanted||s.default.ZERO).toString()),void 0!==e.gasUsed&&(o.gasUsed=(e.gasUsed||s.default.ZERO).toString()),e.events?o.events=e.events.map((e=>e?t.Event.toJSON(e):void 0)):o.events=[],void 0!==e.codespace&&(o.codespace=e.codespace),o},fromPartial(e){const o=Object.assign({},z);if(o.events=[],void 0!==e.code&&null!==e.code?o.code=e.code:o.code=0,void 0!==e.data&&null!==e.data?o.data=e.data:o.data=new Uint8Array,void 0!==e.log&&null!==e.log?o.log=e.log:o.log="",void 0!==e.info&&null!==e.info?o.info=e.info:o.info="",void 0!==e.gasWanted&&null!==e.gasWanted?o.gasWanted=e.gasWanted:o.gasWanted=s.default.ZERO,void 0!==e.gasUsed&&null!==e.gasUsed?o.gasUsed=e.gasUsed:o.gasUsed=s.default.ZERO,void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromPartial(n));return void 0!==e.codespace&&null!==e.codespace?o.codespace=e.codespace:o.codespace="",o}};const Y={};t.ResponseEndBlock={encode(e,o=i.default.Writer.create()){for(const n of e.validatorUpdates)t.ValidatorUpdate.encode(n,o.uint32(10).fork()).ldelim();void 0!==e.consensusParamUpdates&&t.ConsensusParams.encode(e.consensusParamUpdates,o.uint32(18).fork()).ldelim();for(const n of e.events)t.Event.encode(n,o.uint32(26).fork()).ldelim();return o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},Y);for(a.validatorUpdates=[],a.events=[];n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.validatorUpdates.push(t.ValidatorUpdate.decode(n,n.uint32()));break;case 2:a.consensusParamUpdates=t.ConsensusParams.decode(n,n.uint32());break;case 3:a.events.push(t.Event.decode(n,n.uint32()));break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},Y);if(o.validatorUpdates=[],o.events=[],void 0!==e.validatorUpdates&&null!==e.validatorUpdates)for(const n of e.validatorUpdates)o.validatorUpdates.push(t.ValidatorUpdate.fromJSON(n));if(void 0!==e.consensusParamUpdates&&null!==e.consensusParamUpdates?o.consensusParamUpdates=t.ConsensusParams.fromJSON(e.consensusParamUpdates):o.consensusParamUpdates=void 0,void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromJSON(n));return o},toJSON(e){const o={};return e.validatorUpdates?o.validatorUpdates=e.validatorUpdates.map((e=>e?t.ValidatorUpdate.toJSON(e):void 0)):o.validatorUpdates=[],void 0!==e.consensusParamUpdates&&(o.consensusParamUpdates=e.consensusParamUpdates?t.ConsensusParams.toJSON(e.consensusParamUpdates):void 0),e.events?o.events=e.events.map((e=>e?t.Event.toJSON(e):void 0)):o.events=[],o},fromPartial(e){const o=Object.assign({},Y);if(o.validatorUpdates=[],o.events=[],void 0!==e.validatorUpdates&&null!==e.validatorUpdates)for(const n of e.validatorUpdates)o.validatorUpdates.push(t.ValidatorUpdate.fromPartial(n));if(void 0!==e.consensusParamUpdates&&null!==e.consensusParamUpdates?o.consensusParamUpdates=t.ConsensusParams.fromPartial(e.consensusParamUpdates):o.consensusParamUpdates=void 0,void 0!==e.events&&null!==e.events)for(const n of e.events)o.events.push(t.Event.fromPartial(n));return o}};const M={retainHeight:s.default.ZERO};t.ResponseCommit={encode:(e,t=i.default.Writer.create())=>(0!==e.data.length&&t.uint32(18).bytes(e.data),e.retainHeight.isZero()||t.uint32(24).int64(e.retainHeight),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},M);for(s.data=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 2:s.data=o.bytes();break;case 3:s.retainHeight=o.int64();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},M);return t.data=new Uint8Array,void 0!==e.data&&null!==e.data&&(t.data=ve(e.data)),void 0!==e.retainHeight&&null!==e.retainHeight?t.retainHeight=s.default.fromString(e.retainHeight):t.retainHeight=s.default.ZERO,t},toJSON(e){const t={};return void 0!==e.data&&(t.data=me(void 0!==e.data?e.data:new Uint8Array)),void 0!==e.retainHeight&&(t.retainHeight=(e.retainHeight||s.default.ZERO).toString()),t},fromPartial(e){const t=Object.assign({},M);return void 0!==e.data&&null!==e.data?t.data=e.data:t.data=new Uint8Array,void 0!==e.retainHeight&&null!==e.retainHeight?t.retainHeight=e.retainHeight:t.retainHeight=s.default.ZERO,t}};const X={};t.ResponseListSnapshots={encode(e,o=i.default.Writer.create()){for(const n of e.snapshots)t.Snapshot.encode(n,o.uint32(10).fork()).ldelim();return o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},X);for(a.snapshots=[];n.pos<s;){const e=n.uint32();if(e>>>3==1)a.snapshots.push(t.Snapshot.decode(n,n.uint32()));else n.skipType(7&e)}return a},fromJSON(e){const o=Object.assign({},X);if(o.snapshots=[],void 0!==e.snapshots&&null!==e.snapshots)for(const n of e.snapshots)o.snapshots.push(t.Snapshot.fromJSON(n));return o},toJSON(e){const o={};return e.snapshots?o.snapshots=e.snapshots.map((e=>e?t.Snapshot.toJSON(e):void 0)):o.snapshots=[],o},fromPartial(e){const o=Object.assign({},X);if(o.snapshots=[],void 0!==e.snapshots&&null!==e.snapshots)for(const n of e.snapshots)o.snapshots.push(t.Snapshot.fromPartial(n));return o}};const $={result:0};t.ResponseOfferSnapshot={encode:(e,t=i.default.Writer.create())=>(0!==e.result&&t.uint32(8).int32(e.result),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},$);for(;o.pos<n;){const e=o.uint32();if(e>>>3==1)s.result=o.int32();else o.skipType(7&e)}return s},fromJSON(e){const t=Object.assign({},$);return void 0!==e.result&&null!==e.result?t.result=S(e.result):t.result=0,t},toJSON(e){const t={};return void 0!==e.result&&(t.result=O(e.result)),t},fromPartial(e){const t=Object.assign({},$);return void 0!==e.result&&null!==e.result?t.result=e.result:t.result=0,t}};const ee={};t.ResponseLoadSnapshotChunk={encode:(e,t=i.default.Writer.create())=>(0!==e.chunk.length&&t.uint32(10).bytes(e.chunk),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},ee);for(s.chunk=new Uint8Array;o.pos<n;){const e=o.uint32();if(e>>>3==1)s.chunk=o.bytes();else o.skipType(7&e)}return s},fromJSON(e){const t=Object.assign({},ee);return t.chunk=new Uint8Array,void 0!==e.chunk&&null!==e.chunk&&(t.chunk=ve(e.chunk)),t},toJSON(e){const t={};return void 0!==e.chunk&&(t.chunk=me(void 0!==e.chunk?e.chunk:new Uint8Array)),t},fromPartial(e){const t=Object.assign({},ee);return void 0!==e.chunk&&null!==e.chunk?t.chunk=e.chunk:t.chunk=new Uint8Array,t}};const te={result:0,refetchChunks:0,rejectSenders:""};t.ResponseApplySnapshotChunk={encode(e,t=i.default.Writer.create()){0!==e.result&&t.uint32(8).int32(e.result),t.uint32(18).fork();for(const o of e.refetchChunks)t.uint32(o);t.ldelim();for(const o of e.rejectSenders)t.uint32(26).string(o);return t},decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},te);for(s.refetchChunks=[],s.rejectSenders=[];o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.result=o.int32();break;case 2:if(2==(7&e)){const e=o.uint32()+o.pos;for(;o.pos<e;)s.refetchChunks.push(o.uint32())}else s.refetchChunks.push(o.uint32());break;case 3:s.rejectSenders.push(o.string());break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},te);if(t.refetchChunks=[],t.rejectSenders=[],void 0!==e.result&&null!==e.result?t.result=R(e.result):t.result=0,void 0!==e.refetchChunks&&null!==e.refetchChunks)for(const o of e.refetchChunks)t.refetchChunks.push(Number(o));if(void 0!==e.rejectSenders&&null!==e.rejectSenders)for(const o of e.rejectSenders)t.rejectSenders.push(String(o));return t},toJSON(e){const t={};return void 0!==e.result&&(t.result=b(e.result)),e.refetchChunks?t.refetchChunks=e.refetchChunks.map((e=>e)):t.refetchChunks=[],e.rejectSenders?t.rejectSenders=e.rejectSenders.map((e=>e)):t.rejectSenders=[],t},fromPartial(e){const t=Object.assign({},te);if(t.refetchChunks=[],t.rejectSenders=[],void 0!==e.result&&null!==e.result?t.result=e.result:t.result=0,void 0!==e.refetchChunks&&null!==e.refetchChunks)for(const o of e.refetchChunks)t.refetchChunks.push(o);if(void 0!==e.rejectSenders&&null!==e.rejectSenders)for(const o of e.rejectSenders)t.rejectSenders.push(o);return t}};const oe={};t.ConsensusParams={encode:(e,o=i.default.Writer.create())=>(void 0!==e.block&&t.BlockParams.encode(e.block,o.uint32(10).fork()).ldelim(),void 0!==e.evidence&&d.EvidenceParams.encode(e.evidence,o.uint32(18).fork()).ldelim(),void 0!==e.validator&&d.ValidatorParams.encode(e.validator,o.uint32(26).fork()).ldelim(),void 0!==e.version&&d.VersionParams.encode(e.version,o.uint32(34).fork()).ldelim(),o),decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},oe);for(;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.block=t.BlockParams.decode(n,n.uint32());break;case 2:a.evidence=d.EvidenceParams.decode(n,n.uint32());break;case 3:a.validator=d.ValidatorParams.decode(n,n.uint32());break;case 4:a.version=d.VersionParams.decode(n,n.uint32());break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},oe);return void 0!==e.block&&null!==e.block?o.block=t.BlockParams.fromJSON(e.block):o.block=void 0,void 0!==e.evidence&&null!==e.evidence?o.evidence=d.EvidenceParams.fromJSON(e.evidence):o.evidence=void 0,void 0!==e.validator&&null!==e.validator?o.validator=d.ValidatorParams.fromJSON(e.validator):o.validator=void 0,void 0!==e.version&&null!==e.version?o.version=d.VersionParams.fromJSON(e.version):o.version=void 0,o},toJSON(e){const o={};return void 0!==e.block&&(o.block=e.block?t.BlockParams.toJSON(e.block):void 0),void 0!==e.evidence&&(o.evidence=e.evidence?d.EvidenceParams.toJSON(e.evidence):void 0),void 0!==e.validator&&(o.validator=e.validator?d.ValidatorParams.toJSON(e.validator):void 0),void 0!==e.version&&(o.version=e.version?d.VersionParams.toJSON(e.version):void 0),o},fromPartial(e){const o=Object.assign({},oe);return void 0!==e.block&&null!==e.block?o.block=t.BlockParams.fromPartial(e.block):o.block=void 0,void 0!==e.evidence&&null!==e.evidence?o.evidence=d.EvidenceParams.fromPartial(e.evidence):o.evidence=void 0,void 0!==e.validator&&null!==e.validator?o.validator=d.ValidatorParams.fromPartial(e.validator):o.validator=void 0,void 0!==e.version&&null!==e.version?o.version=d.VersionParams.fromPartial(e.version):o.version=void 0,o}};const ne={maxBytes:s.default.ZERO,maxGas:s.default.ZERO};t.BlockParams={encode:(e,t=i.default.Writer.create())=>(e.maxBytes.isZero()||t.uint32(8).int64(e.maxBytes),e.maxGas.isZero()||t.uint32(16).int64(e.maxGas),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},ne);for(;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.maxBytes=o.int64();break;case 2:s.maxGas=o.int64();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},ne);return void 0!==e.maxBytes&&null!==e.maxBytes?t.maxBytes=s.default.fromString(e.maxBytes):t.maxBytes=s.default.ZERO,void 0!==e.maxGas&&null!==e.maxGas?t.maxGas=s.default.fromString(e.maxGas):t.maxGas=s.default.ZERO,t},toJSON(e){const t={};return void 0!==e.maxBytes&&(t.maxBytes=(e.maxBytes||s.default.ZERO).toString()),void 0!==e.maxGas&&(t.maxGas=(e.maxGas||s.default.ZERO).toString()),t},fromPartial(e){const t=Object.assign({},ne);return void 0!==e.maxBytes&&null!==e.maxBytes?t.maxBytes=e.maxBytes:t.maxBytes=s.default.ZERO,void 0!==e.maxGas&&null!==e.maxGas?t.maxGas=e.maxGas:t.maxGas=s.default.ZERO,t}};const se={round:0};t.LastCommitInfo={encode(e,o=i.default.Writer.create()){0!==e.round&&o.uint32(8).int32(e.round);for(const n of e.votes)t.VoteInfo.encode(n,o.uint32(18).fork()).ldelim();return o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},se);for(a.votes=[];n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.round=n.int32();break;case 2:a.votes.push(t.VoteInfo.decode(n,n.uint32()));break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},se);if(o.votes=[],void 0!==e.round&&null!==e.round?o.round=Number(e.round):o.round=0,void 0!==e.votes&&null!==e.votes)for(const n of e.votes)o.votes.push(t.VoteInfo.fromJSON(n));return o},toJSON(e){const o={};return void 0!==e.round&&(o.round=e.round),e.votes?o.votes=e.votes.map((e=>e?t.VoteInfo.toJSON(e):void 0)):o.votes=[],o},fromPartial(e){const o=Object.assign({},se);if(o.votes=[],void 0!==e.round&&null!==e.round?o.round=e.round:o.round=0,void 0!==e.votes&&null!==e.votes)for(const n of e.votes)o.votes.push(t.VoteInfo.fromPartial(n));return o}};const ie={type:""};t.Event={encode(e,o=i.default.Writer.create()){""!==e.type&&o.uint32(10).string(e.type);for(const n of e.attributes)t.EventAttribute.encode(n,o.uint32(18).fork()).ldelim();return o},decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},ie);for(a.attributes=[];n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.type=n.string();break;case 2:a.attributes.push(t.EventAttribute.decode(n,n.uint32()));break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},ie);if(o.attributes=[],void 0!==e.type&&null!==e.type?o.type=String(e.type):o.type="",void 0!==e.attributes&&null!==e.attributes)for(const n of e.attributes)o.attributes.push(t.EventAttribute.fromJSON(n));return o},toJSON(e){const o={};return void 0!==e.type&&(o.type=e.type),e.attributes?o.attributes=e.attributes.map((e=>e?t.EventAttribute.toJSON(e):void 0)):o.attributes=[],o},fromPartial(e){const o=Object.assign({},ie);if(o.attributes=[],void 0!==e.type&&null!==e.type?o.type=e.type:o.type="",void 0!==e.attributes&&null!==e.attributes)for(const n of e.attributes)o.attributes.push(t.EventAttribute.fromPartial(n));return o}};const ae={index:!1};t.EventAttribute={encode:(e,t=i.default.Writer.create())=>(0!==e.key.length&&t.uint32(10).bytes(e.key),0!==e.value.length&&t.uint32(18).bytes(e.value),!0===e.index&&t.uint32(24).bool(e.index),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},ae);for(s.key=new Uint8Array,s.value=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.key=o.bytes();break;case 2:s.value=o.bytes();break;case 3:s.index=o.bool();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},ae);return t.key=new Uint8Array,t.value=new Uint8Array,void 0!==e.key&&null!==e.key&&(t.key=ve(e.key)),void 0!==e.value&&null!==e.value&&(t.value=ve(e.value)),void 0!==e.index&&null!==e.index?t.index=Boolean(e.index):t.index=!1,t},toJSON(e){const t={};return void 0!==e.key&&(t.key=me(void 0!==e.key?e.key:new Uint8Array)),void 0!==e.value&&(t.value=me(void 0!==e.value?e.value:new Uint8Array)),void 0!==e.index&&(t.index=e.index),t},fromPartial(e){const t=Object.assign({},ae);return void 0!==e.key&&null!==e.key?t.key=e.key:t.key=new Uint8Array,void 0!==e.value&&null!==e.value?t.value=e.value:t.value=new Uint8Array,void 0!==e.index&&null!==e.index?t.index=e.index:t.index=!1,t}};const re={height:s.default.ZERO,index:0};t.TxResult={encode:(e,o=i.default.Writer.create())=>(e.height.isZero()||o.uint32(8).int64(e.height),0!==e.index&&o.uint32(16).uint32(e.index),0!==e.tx.length&&o.uint32(26).bytes(e.tx),void 0!==e.result&&t.ResponseDeliverTx.encode(e.result,o.uint32(34).fork()).ldelim(),o),decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},re);for(a.tx=new Uint8Array;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.height=n.int64();break;case 2:a.index=n.uint32();break;case 3:a.tx=n.bytes();break;case 4:a.result=t.ResponseDeliverTx.decode(n,n.uint32());break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},re);return o.tx=new Uint8Array,void 0!==e.height&&null!==e.height?o.height=s.default.fromString(e.height):o.height=s.default.ZERO,void 0!==e.index&&null!==e.index?o.index=Number(e.index):o.index=0,void 0!==e.tx&&null!==e.tx&&(o.tx=ve(e.tx)),void 0!==e.result&&null!==e.result?o.result=t.ResponseDeliverTx.fromJSON(e.result):o.result=void 0,o},toJSON(e){const o={};return void 0!==e.height&&(o.height=(e.height||s.default.ZERO).toString()),void 0!==e.index&&(o.index=e.index),void 0!==e.tx&&(o.tx=me(void 0!==e.tx?e.tx:new Uint8Array)),void 0!==e.result&&(o.result=e.result?t.ResponseDeliverTx.toJSON(e.result):void 0),o},fromPartial(e){const o=Object.assign({},re);return void 0!==e.height&&null!==e.height?o.height=e.height:o.height=s.default.ZERO,void 0!==e.index&&null!==e.index?o.index=e.index:o.index=0,void 0!==e.tx&&null!==e.tx?o.tx=e.tx:o.tx=new Uint8Array,void 0!==e.result&&null!==e.result?o.result=t.ResponseDeliverTx.fromPartial(e.result):o.result=void 0,o}};const de={power:s.default.ZERO};t.Validator={encode:(e,t=i.default.Writer.create())=>(0!==e.address.length&&t.uint32(10).bytes(e.address),e.power.isZero()||t.uint32(24).int64(e.power),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},de);for(s.address=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.address=o.bytes();break;case 3:s.power=o.int64();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},de);return t.address=new Uint8Array,void 0!==e.address&&null!==e.address&&(t.address=ve(e.address)),void 0!==e.power&&null!==e.power?t.power=s.default.fromString(e.power):t.power=s.default.ZERO,t},toJSON(e){const t={};return void 0!==e.address&&(t.address=me(void 0!==e.address?e.address:new Uint8Array)),void 0!==e.power&&(t.power=(e.power||s.default.ZERO).toString()),t},fromPartial(e){const t=Object.assign({},de);return void 0!==e.address&&null!==e.address?t.address=e.address:t.address=new Uint8Array,void 0!==e.power&&null!==e.power?t.power=e.power:t.power=s.default.ZERO,t}};const le={power:s.default.ZERO};t.ValidatorUpdate={encode:(e,t=i.default.Writer.create())=>(void 0!==e.pubKey&&l.PublicKey.encode(e.pubKey,t.uint32(10).fork()).ldelim(),e.power.isZero()||t.uint32(16).int64(e.power),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},le);for(;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.pubKey=l.PublicKey.decode(o,o.uint32());break;case 2:s.power=o.int64();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},le);return void 0!==e.pubKey&&null!==e.pubKey?t.pubKey=l.PublicKey.fromJSON(e.pubKey):t.pubKey=void 0,void 0!==e.power&&null!==e.power?t.power=s.default.fromString(e.power):t.power=s.default.ZERO,t},toJSON(e){const t={};return void 0!==e.pubKey&&(t.pubKey=e.pubKey?l.PublicKey.toJSON(e.pubKey):void 0),void 0!==e.power&&(t.power=(e.power||s.default.ZERO).toString()),t},fromPartial(e){const t=Object.assign({},le);return void 0!==e.pubKey&&null!==e.pubKey?t.pubKey=l.PublicKey.fromPartial(e.pubKey):t.pubKey=void 0,void 0!==e.power&&null!==e.power?t.power=e.power:t.power=s.default.ZERO,t}};const ce={signedLastBlock:!1};t.VoteInfo={encode:(e,o=i.default.Writer.create())=>(void 0!==e.validator&&t.Validator.encode(e.validator,o.uint32(10).fork()).ldelim(),!0===e.signedLastBlock&&o.uint32(16).bool(e.signedLastBlock),o),decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},ce);for(;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.validator=t.Validator.decode(n,n.uint32());break;case 2:a.signedLastBlock=n.bool();break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},ce);return void 0!==e.validator&&null!==e.validator?o.validator=t.Validator.fromJSON(e.validator):o.validator=void 0,void 0!==e.signedLastBlock&&null!==e.signedLastBlock?o.signedLastBlock=Boolean(e.signedLastBlock):o.signedLastBlock=!1,o},toJSON(e){const o={};return void 0!==e.validator&&(o.validator=e.validator?t.Validator.toJSON(e.validator):void 0),void 0!==e.signedLastBlock&&(o.signedLastBlock=e.signedLastBlock),o},fromPartial(e){const o=Object.assign({},ce);return void 0!==e.validator&&null!==e.validator?o.validator=t.Validator.fromPartial(e.validator):o.validator=void 0,void 0!==e.signedLastBlock&&null!==e.signedLastBlock?o.signedLastBlock=e.signedLastBlock:o.signedLastBlock=!1,o}};const ue={type:0,height:s.default.ZERO,totalVotingPower:s.default.ZERO};t.Evidence={encode:(e,o=i.default.Writer.create())=>(0!==e.type&&o.uint32(8).int32(e.type),void 0!==e.validator&&t.Validator.encode(e.validator,o.uint32(18).fork()).ldelim(),e.height.isZero()||o.uint32(24).int64(e.height),void 0!==e.time&&c.Timestamp.encode(ge(e.time),o.uint32(34).fork()).ldelim(),e.totalVotingPower.isZero()||o.uint32(40).int64(e.totalVotingPower),o),decode(e,o){const n=e instanceof i.default.Reader?e:new i.default.Reader(e);let s=void 0===o?n.len:n.pos+o;const a=Object.assign({},ue);for(;n.pos<s;){const e=n.uint32();switch(e>>>3){case 1:a.type=n.int32();break;case 2:a.validator=t.Validator.decode(n,n.uint32());break;case 3:a.height=n.int64();break;case 4:a.time=Se(c.Timestamp.decode(n,n.uint32()));break;case 5:a.totalVotingPower=n.int64();break;default:n.skipType(7&e)}}return a},fromJSON(e){const o=Object.assign({},ue);return void 0!==e.type&&null!==e.type?o.type=m(e.type):o.type=0,void 0!==e.validator&&null!==e.validator?o.validator=t.Validator.fromJSON(e.validator):o.validator=void 0,void 0!==e.height&&null!==e.height?o.height=s.default.fromString(e.height):o.height=s.default.ZERO,void 0!==e.time&&null!==e.time?o.time=Oe(e.time):o.time=void 0,void 0!==e.totalVotingPower&&null!==e.totalVotingPower?o.totalVotingPower=s.default.fromString(e.totalVotingPower):o.totalVotingPower=s.default.ZERO,o},toJSON(e){const o={};return void 0!==e.type&&(o.type=g(e.type)),void 0!==e.validator&&(o.validator=e.validator?t.Validator.toJSON(e.validator):void 0),void 0!==e.height&&(o.height=(e.height||s.default.ZERO).toString()),void 0!==e.time&&(o.time=e.time.toISOString()),void 0!==e.totalVotingPower&&(o.totalVotingPower=(e.totalVotingPower||s.default.ZERO).toString()),o},fromPartial(e){const o=Object.assign({},ue);return void 0!==e.type&&null!==e.type?o.type=e.type:o.type=0,void 0!==e.validator&&null!==e.validator?o.validator=t.Validator.fromPartial(e.validator):o.validator=void 0,void 0!==e.height&&null!==e.height?o.height=e.height:o.height=s.default.ZERO,void 0!==e.time&&null!==e.time?o.time=e.time:o.time=void 0,void 0!==e.totalVotingPower&&null!==e.totalVotingPower?o.totalVotingPower=e.totalVotingPower:o.totalVotingPower=s.default.ZERO,o}};const pe={height:s.default.UZERO,format:0,chunks:0};t.Snapshot={encode:(e,t=i.default.Writer.create())=>(e.height.isZero()||t.uint32(8).uint64(e.height),0!==e.format&&t.uint32(16).uint32(e.format),0!==e.chunks&&t.uint32(24).uint32(e.chunks),0!==e.hash.length&&t.uint32(34).bytes(e.hash),0!==e.metadata.length&&t.uint32(42).bytes(e.metadata),t),decode(e,t){const o=e instanceof i.default.Reader?e:new i.default.Reader(e);let n=void 0===t?o.len:o.pos+t;const s=Object.assign({},pe);for(s.hash=new Uint8Array,s.metadata=new Uint8Array;o.pos<n;){const e=o.uint32();switch(e>>>3){case 1:s.height=o.uint64();break;case 2:s.format=o.uint32();break;case 3:s.chunks=o.uint32();break;case 4:s.hash=o.bytes();break;case 5:s.metadata=o.bytes();break;default:o.skipType(7&e)}}return s},fromJSON(e){const t=Object.assign({},pe);return t.hash=new Uint8Array,t.metadata=new Uint8Array,void 0!==e.height&&null!==e.height?t.height=s.default.fromString(e.height):t.height=s.default.UZERO,void 0!==e.format&&null!==e.format?t.format=Number(e.format):t.format=0,void 0!==e.chunks&&null!==e.chunks?t.chunks=Number(e.chunks):t.chunks=0,void 0!==e.hash&&null!==e.hash&&(t.hash=ve(e.hash)),void 0!==e.metadata&&null!==e.metadata&&(t.metadata=ve(e.metadata)),t},toJSON(e){const t={};return void 0!==e.height&&(t.height=(e.height||s.default.UZERO).toString()),void 0!==e.format&&(t.format=e.format),void 0!==e.chunks&&(t.chunks=e.chunks),void 0!==e.hash&&(t.hash=me(void 0!==e.hash?e.hash:new Uint8Array)),void 0!==e.metadata&&(t.metadata=me(void 0!==e.metadata?e.metadata:new Uint8Array)),t},fromPartial(e){const t=Object.assign({},pe);return void 0!==e.height&&null!==e.height?t.height=e.height:t.height=s.default.UZERO,void 0!==e.format&&null!==e.format?t.format=e.format:t.format=0,void 0!==e.chunks&&null!==e.chunks?t.chunks=e.chunks:t.chunks=0,void 0!==e.hash&&null!==e.hash?t.hash=e.hash:t.hash=new Uint8Array,void 0!==e.metadata&&null!==e.metadata?t.metadata=e.metadata:t.metadata=new Uint8Array,t}};t.ABCIApplicationClientImpl=class{constructor(e){this.rpc=e,this.Echo=this.Echo.bind(this),this.Flush=this.Flush.bind(this),this.Info=this.Info.bind(this),this.SetOption=this.SetOption.bind(this),this.DeliverTx=this.DeliverTx.bind(this),this.CheckTx=this.CheckTx.bind(this),this.Query=this.Query.bind(this),this.Commit=this.Commit.bind(this),this.InitChain=this.InitChain.bind(this),this.BeginBlock=this.BeginBlock.bind(this),this.EndBlock=this.EndBlock.bind(this),this.ListSnapshots=this.ListSnapshots.bind(this),this.OfferSnapshot=this.OfferSnapshot.bind(this),this.LoadSnapshotChunk=this.LoadSnapshotChunk.bind(this),this.ApplySnapshotChunk=this.ApplySnapshotChunk.bind(this)}Echo(e){const o=t.RequestEcho.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","Echo",o).then((e=>t.ResponseEcho.decode(new i.default.Reader(e))))}Flush(e){const o=t.RequestFlush.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","Flush",o).then((e=>t.ResponseFlush.decode(new i.default.Reader(e))))}Info(e){const o=t.RequestInfo.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","Info",o).then((e=>t.ResponseInfo.decode(new i.default.Reader(e))))}SetOption(e){const o=t.RequestSetOption.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","SetOption",o).then((e=>t.ResponseSetOption.decode(new i.default.Reader(e))))}DeliverTx(e){const o=t.RequestDeliverTx.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","DeliverTx",o).then((e=>t.ResponseDeliverTx.decode(new i.default.Reader(e))))}CheckTx(e){const o=t.RequestCheckTx.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","CheckTx",o).then((e=>t.ResponseCheckTx.decode(new i.default.Reader(e))))}Query(e){const o=t.RequestQuery.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","Query",o).then((e=>t.ResponseQuery.decode(new i.default.Reader(e))))}Commit(e){const o=t.RequestCommit.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","Commit",o).then((e=>t.ResponseCommit.decode(new i.default.Reader(e))))}InitChain(e){const o=t.RequestInitChain.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","InitChain",o).then((e=>t.ResponseInitChain.decode(new i.default.Reader(e))))}BeginBlock(e){const o=t.RequestBeginBlock.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","BeginBlock",o).then((e=>t.ResponseBeginBlock.decode(new i.default.Reader(e))))}EndBlock(e){const o=t.RequestEndBlock.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","EndBlock",o).then((e=>t.ResponseEndBlock.decode(new i.default.Reader(e))))}ListSnapshots(e){const o=t.RequestListSnapshots.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","ListSnapshots",o).then((e=>t.ResponseListSnapshots.decode(new i.default.Reader(e))))}OfferSnapshot(e){const o=t.RequestOfferSnapshot.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","OfferSnapshot",o).then((e=>t.ResponseOfferSnapshot.decode(new i.default.Reader(e))))}LoadSnapshotChunk(e){const o=t.RequestLoadSnapshotChunk.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","LoadSnapshotChunk",o).then((e=>t.ResponseLoadSnapshotChunk.decode(new i.default.Reader(e))))}ApplySnapshotChunk(e){const o=t.RequestApplySnapshotChunk.encode(e).finish();return this.rpc.request("tendermint.abci.ABCIApplication","ApplySnapshotChunk",o).then((e=>t.ResponseApplySnapshotChunk.decode(new i.default.Reader(e))))}};var he=(()=>{if(void 0!==he)return he;if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==o.g)return o.g;throw"Unable to locate global object"})();const fe=he.atob||(e=>he.Buffer.from(e,"base64").toString("binary"));function ve(e){const t=fe(e),o=new Uint8Array(t.length);for(let n=0;n<t.length;++n)o[n]=t.charCodeAt(n);return o}const ke=he.btoa||(e=>he.Buffer.from(e,"binary").toString("base64"));function me(e){const t=[];for(const o of e)t.push(String.fromCharCode(o));return ke(t.join(""))}function ge(e){var t;return{seconds:(t=e.getTime()/1e3,s.default.fromNumber(t)),nanos:e.getTime()%1e3*1e6}}function Se(e){let t=1e3*e.seconds.toNumber();return t+=e.nanos/1e6,new Date(t)}function Oe(e){return e instanceof Date?e:"string"==typeof e?new Date(e):Se(c.Timestamp.fromJSON(e))}i.default.util.Long!==s.default&&(i.default.util.Long=s.default,i.default.configure())}}]);
//# sourceMappingURL=9843b475-2a9a37f0037cf649305c.js.map